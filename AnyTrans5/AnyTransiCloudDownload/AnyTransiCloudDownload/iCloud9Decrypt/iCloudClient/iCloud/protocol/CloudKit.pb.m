// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CloudKit.pb.h"

@implementation CloudKitRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CloudKitRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RequestOperation ()
@property (retain) RequestOperationHeader* requestOperationHeader;
@property (retain) Operation* operation;
@property (retain) ZoneRetrieveRequest* zoneRetrieveRequest;
@property (retain) RecordRetrieveRequest* recordRetrieveRequest;
@property (retain) QueryRetrieveRequest* queryRetrieveRequest;
@end

@implementation RequestOperation

- (BOOL) hasRequestOperationHeader {
  return !!hasRequestOperationHeader_;
}
- (void) setHasRequestOperationHeader:(BOOL) value {
  hasRequestOperationHeader_ = !!value;
}
@synthesize requestOperationHeader;
- (BOOL) hasOperation {
  return !!hasOperation_;
}
- (void) setHasOperation:(BOOL) value {
  hasOperation_ = !!value;
}
@synthesize operation;
- (BOOL) hasZoneRetrieveRequest {
  return !!hasZoneRetrieveRequest_;
}
- (void) setHasZoneRetrieveRequest:(BOOL) value {
  hasZoneRetrieveRequest_ = !!value;
}
@synthesize zoneRetrieveRequest;
- (BOOL) hasRecordRetrieveRequest {
  return !!hasRecordRetrieveRequest_;
}
- (void) setHasRecordRetrieveRequest:(BOOL) value {
  hasRecordRetrieveRequest_ = !!value;
}
@synthesize recordRetrieveRequest;
- (BOOL) hasQueryRetrieveRequest {
  return !!hasQueryRetrieveRequest_;
}
- (void) setHasQueryRetrieveRequest:(BOOL) value {
  hasQueryRetrieveRequest_ = !!value;
}
@synthesize queryRetrieveRequest;
- (void) dealloc {
  self.requestOperationHeader = nil;
  self.operation = nil;
  self.zoneRetrieveRequest = nil;
  self.recordRetrieveRequest = nil;
  self.queryRetrieveRequest = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.requestOperationHeader = [RequestOperationHeader defaultInstance];
    self.operation = [Operation defaultInstance];
    self.zoneRetrieveRequest = [ZoneRetrieveRequest defaultInstance];
    self.recordRetrieveRequest = [RecordRetrieveRequest defaultInstance];
    self.queryRetrieveRequest = [QueryRetrieveRequest defaultInstance];
  }
  return self;
}
static RequestOperation* defaultRequestOperationInstance = nil;
+ (void) initialize {
  if (self == [RequestOperation class]) {
    defaultRequestOperationInstance = [[RequestOperation alloc] init];
  }
}
+ (RequestOperation*) defaultInstance {
  return defaultRequestOperationInstance;
}
- (RequestOperation*) defaultInstance {
  return defaultRequestOperationInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRequestOperationHeader) {
    [output writeMessage:1 value:self.requestOperationHeader];
  }
  if (self.hasOperation) {
    [output writeMessage:2 value:self.operation];
  }
  if (self.hasZoneRetrieveRequest) {
    [output writeMessage:201 value:self.zoneRetrieveRequest];
  }
  if (self.hasRecordRetrieveRequest) {
    [output writeMessage:211 value:self.recordRetrieveRequest];
  }
  if (self.hasQueryRetrieveRequest) {
    [output writeMessage:220 value:self.queryRetrieveRequest];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRequestOperationHeader) {
    size += computeMessageSize(1, self.requestOperationHeader);
  }
  if (self.hasOperation) {
    size += computeMessageSize(2, self.operation);
  }
  if (self.hasZoneRetrieveRequest) {
    size += computeMessageSize(201, self.zoneRetrieveRequest);
  }
  if (self.hasRecordRetrieveRequest) {
    size += computeMessageSize(211, self.recordRetrieveRequest);
  }
  if (self.hasQueryRetrieveRequest) {
    size += computeMessageSize(220, self.queryRetrieveRequest);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestOperation*) parseFromData:(NSData*) data {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromData:data] build];
}
+ (RequestOperation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestOperation*) parseFromInputStream:(NSInputStream*) input {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromInputStream:input] build];
}
+ (RequestOperation*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RequestOperation*)[[[RequestOperation builder] mergeDelimitedFromInputStream:input] build];
}
+ (RequestOperation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestOperation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromCodedInputStream:input] build];
}
+ (RequestOperation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperation*)[[[RequestOperation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestOperation_Builder*) builder {
  return [[[RequestOperation_Builder alloc] init] autorelease];
}
+ (RequestOperation_Builder*) builderWithPrototype:(RequestOperation*) prototype {
  return [[RequestOperation builder] mergeFrom:prototype];
}
- (RequestOperation_Builder*) builder {
  return [RequestOperation builder];
}
@end

@interface RequestOperation_Builder()
@property (retain) RequestOperation* result;
@end

@implementation RequestOperation_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestOperation alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestOperation_Builder*) clear {
  self.result = [[[RequestOperation alloc] init] autorelease];
  return self;
}
- (RequestOperation_Builder*) clone {
  return [RequestOperation builderWithPrototype:result];
}
- (RequestOperation*) defaultInstance {
  return [RequestOperation defaultInstance];
}
- (RequestOperation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestOperation*) buildPartial {
  RequestOperation* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestOperation_Builder*) mergeFrom:(RequestOperation*) other {
  if (other == [RequestOperation defaultInstance]) {
    return self;
  }
  if (other.hasRequestOperationHeader) {
    [self mergeRequestOperationHeader:other.requestOperationHeader];
  }
  if (other.hasOperation) {
    [self mergeOperation:other.operation];
  }
  if (other.hasZoneRetrieveRequest) {
    [self mergeZoneRetrieveRequest:other.zoneRetrieveRequest];
  }
  if (other.hasRecordRetrieveRequest) {
    [self mergeRecordRetrieveRequest:other.recordRetrieveRequest];
  }
  if (other.hasQueryRetrieveRequest) {
    [self mergeQueryRetrieveRequest:other.queryRetrieveRequest];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestOperation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestOperation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RequestOperationHeader_Builder* subBuilder = [RequestOperationHeader builder];
        if (self.hasRequestOperationHeader) {
          [subBuilder mergeFrom:self.requestOperationHeader];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequestOperationHeader:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Operation_Builder* subBuilder = [Operation builder];
        if (self.hasOperation) {
          [subBuilder mergeFrom:self.operation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOperation:[subBuilder buildPartial]];
        break;
      }
      case 1610: {
        ZoneRetrieveRequest_Builder* subBuilder = [ZoneRetrieveRequest builder];
        if (self.hasZoneRetrieveRequest) {
          [subBuilder mergeFrom:self.zoneRetrieveRequest];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneRetrieveRequest:[subBuilder buildPartial]];
        break;
      }
      case 1690: {
        RecordRetrieveRequest_Builder* subBuilder = [RecordRetrieveRequest builder];
        if (self.hasRecordRetrieveRequest) {
          [subBuilder mergeFrom:self.recordRetrieveRequest];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordRetrieveRequest:[subBuilder buildPartial]];
        break;
      }
      case 1762: {
        QueryRetrieveRequest_Builder* subBuilder = [QueryRetrieveRequest builder];
        if (self.hasQueryRetrieveRequest) {
          [subBuilder mergeFrom:self.queryRetrieveRequest];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQueryRetrieveRequest:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRequestOperationHeader {
  return result.hasRequestOperationHeader;
}
- (RequestOperationHeader*) requestOperationHeader {
  return result.requestOperationHeader;
}
- (RequestOperation_Builder*) setRequestOperationHeader:(RequestOperationHeader*) value {
  result.hasRequestOperationHeader = YES;
  result.requestOperationHeader = value;
  return self;
}
- (RequestOperation_Builder*) setRequestOperationHeaderBuilder:(RequestOperationHeader_Builder*) builderForValue {
  return [self setRequestOperationHeader:[builderForValue build]];
}
- (RequestOperation_Builder*) mergeRequestOperationHeader:(RequestOperationHeader*) value {
  if (result.hasRequestOperationHeader &&
      result.requestOperationHeader != [RequestOperationHeader defaultInstance]) {
    result.requestOperationHeader =
      [[[RequestOperationHeader builderWithPrototype:result.requestOperationHeader] mergeFrom:value] buildPartial];
  } else {
    result.requestOperationHeader = value;
  }
  result.hasRequestOperationHeader = YES;
  return self;
}
- (RequestOperation_Builder*) clearRequestOperationHeader {
  result.hasRequestOperationHeader = NO;
  result.requestOperationHeader = [RequestOperationHeader defaultInstance];
  return self;
}
- (BOOL) hasOperation {
  return result.hasOperation;
}
- (Operation*) operation {
  return result.operation;
}
- (RequestOperation_Builder*) setOperation:(Operation*) value {
  result.hasOperation = YES;
  result.operation = value;
  return self;
}
- (RequestOperation_Builder*) setOperationBuilder:(Operation_Builder*) builderForValue {
  return [self setOperation:[builderForValue build]];
}
- (RequestOperation_Builder*) mergeOperation:(Operation*) value {
  if (result.hasOperation &&
      result.operation != [Operation defaultInstance]) {
    result.operation =
      [[[Operation builderWithPrototype:result.operation] mergeFrom:value] buildPartial];
  } else {
    result.operation = value;
  }
  result.hasOperation = YES;
  return self;
}
- (RequestOperation_Builder*) clearOperation {
  result.hasOperation = NO;
  result.operation = [Operation defaultInstance];
  return self;
}
- (BOOL) hasZoneRetrieveRequest {
  return result.hasZoneRetrieveRequest;
}
- (ZoneRetrieveRequest*) zoneRetrieveRequest {
  return result.zoneRetrieveRequest;
}
- (RequestOperation_Builder*) setZoneRetrieveRequest:(ZoneRetrieveRequest*) value {
  result.hasZoneRetrieveRequest = YES;
  result.zoneRetrieveRequest = value;
  return self;
}
- (RequestOperation_Builder*) setZoneRetrieveRequestBuilder:(ZoneRetrieveRequest_Builder*) builderForValue {
  return [self setZoneRetrieveRequest:[builderForValue build]];
}
- (RequestOperation_Builder*) mergeZoneRetrieveRequest:(ZoneRetrieveRequest*) value {
  if (result.hasZoneRetrieveRequest &&
      result.zoneRetrieveRequest != [ZoneRetrieveRequest defaultInstance]) {
    result.zoneRetrieveRequest =
      [[[ZoneRetrieveRequest builderWithPrototype:result.zoneRetrieveRequest] mergeFrom:value] buildPartial];
  } else {
    result.zoneRetrieveRequest = value;
  }
  result.hasZoneRetrieveRequest = YES;
  return self;
}
- (RequestOperation_Builder*) clearZoneRetrieveRequest {
  result.hasZoneRetrieveRequest = NO;
  result.zoneRetrieveRequest = [ZoneRetrieveRequest defaultInstance];
  return self;
}
- (BOOL) hasRecordRetrieveRequest {
  return result.hasRecordRetrieveRequest;
}
- (RecordRetrieveRequest*) recordRetrieveRequest {
  return result.recordRetrieveRequest;
}
- (RequestOperation_Builder*) setRecordRetrieveRequest:(RecordRetrieveRequest*) value {
  result.hasRecordRetrieveRequest = YES;
  result.recordRetrieveRequest = value;
  return self;
}
- (RequestOperation_Builder*) setRecordRetrieveRequestBuilder:(RecordRetrieveRequest_Builder*) builderForValue {
  return [self setRecordRetrieveRequest:[builderForValue build]];
}
- (RequestOperation_Builder*) mergeRecordRetrieveRequest:(RecordRetrieveRequest*) value {
  if (result.hasRecordRetrieveRequest &&
      result.recordRetrieveRequest != [RecordRetrieveRequest defaultInstance]) {
    result.recordRetrieveRequest =
      [[[RecordRetrieveRequest builderWithPrototype:result.recordRetrieveRequest] mergeFrom:value] buildPartial];
  } else {
    result.recordRetrieveRequest = value;
  }
  result.hasRecordRetrieveRequest = YES;
  return self;
}
- (RequestOperation_Builder*) clearRecordRetrieveRequest {
  result.hasRecordRetrieveRequest = NO;
  result.recordRetrieveRequest = [RecordRetrieveRequest defaultInstance];
  return self;
}
- (BOOL) hasQueryRetrieveRequest {
  return result.hasQueryRetrieveRequest;
}
- (QueryRetrieveRequest*) queryRetrieveRequest {
  return result.queryRetrieveRequest;
}
- (RequestOperation_Builder*) setQueryRetrieveRequest:(QueryRetrieveRequest*) value {
  result.hasQueryRetrieveRequest = YES;
  result.queryRetrieveRequest = value;
  return self;
}
- (RequestOperation_Builder*) setQueryRetrieveRequestBuilder:(QueryRetrieveRequest_Builder*) builderForValue {
  return [self setQueryRetrieveRequest:[builderForValue build]];
}
- (RequestOperation_Builder*) mergeQueryRetrieveRequest:(QueryRetrieveRequest*) value {
  if (result.hasQueryRetrieveRequest &&
      result.queryRetrieveRequest != [QueryRetrieveRequest defaultInstance]) {
    result.queryRetrieveRequest =
      [[[QueryRetrieveRequest builderWithPrototype:result.queryRetrieveRequest] mergeFrom:value] buildPartial];
  } else {
    result.queryRetrieveRequest = value;
  }
  result.hasQueryRetrieveRequest = YES;
  return self;
}
- (RequestOperation_Builder*) clearQueryRetrieveRequest {
  result.hasQueryRetrieveRequest = NO;
  result.queryRetrieveRequest = [QueryRetrieveRequest defaultInstance];
  return self;
}
@end

@interface ResponseOperation ()
@property int32_t operationCost;
@property (retain) Operation* response;
@property (retain) ResponseOperationResult* resultEx;
@property (retain) ZoneRetrieveResponse* zoneRetrieveResponse;
@property (retain) RecordRetrieveResponse* recordRetrieveResponse;
@property (retain) QueryRetrieveRequestResponse* queryRetrieveRequestResponse;
@end

@implementation ResponseOperation

- (BOOL) hasOperationCost {
  return !!hasOperationCost_;
}
- (void) setHasOperationCost:(BOOL) value {
  hasOperationCost_ = !!value;
}
@synthesize operationCost;
- (BOOL) hasResponse {
  return !!hasResponse_;
}
- (void) setHasResponse:(BOOL) value {
  hasResponse_ = !!value;
}
@synthesize response;
- (BOOL) hasResultEx {
  return !!hasResultEx_;
}
- (void) setHasResultEx:(BOOL) value {
  hasResultEx_ = !!value;
}
@synthesize resultEx;
- (BOOL) hasZoneRetrieveResponse {
  return !!hasZoneRetrieveResponse_;
}
- (void) setHasZoneRetrieveResponse:(BOOL) value {
  hasZoneRetrieveResponse_ = !!value;
}
@synthesize zoneRetrieveResponse;
- (BOOL) hasRecordRetrieveResponse {
  return !!hasRecordRetrieveResponse_;
}
- (void) setHasRecordRetrieveResponse:(BOOL) value {
  hasRecordRetrieveResponse_ = !!value;
}
@synthesize recordRetrieveResponse;
- (BOOL) hasQueryRetrieveRequestResponse {
  return !!hasQueryRetrieveRequestResponse_;
}
- (void) setHasQueryRetrieveRequestResponse:(BOOL) value {
  hasQueryRetrieveRequestResponse_ = !!value;
}
@synthesize queryRetrieveRequestResponse;
- (void) dealloc {
  self.response = nil;
  self.resultEx = nil;
  self.zoneRetrieveResponse = nil;
  self.recordRetrieveResponse = nil;
  self.queryRetrieveRequestResponse = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.operationCost = 0;
    self.response = [Operation defaultInstance];
    self.resultEx = [ResponseOperationResult defaultInstance];
    self.zoneRetrieveResponse = [ZoneRetrieveResponse defaultInstance];
    self.recordRetrieveResponse = [RecordRetrieveResponse defaultInstance];
    self.queryRetrieveRequestResponse = [QueryRetrieveRequestResponse defaultInstance];
  }
  return self;
}
static ResponseOperation* defaultResponseOperationInstance = nil;
+ (void) initialize {
  if (self == [ResponseOperation class]) {
    defaultResponseOperationInstance = [[ResponseOperation alloc] init];
  }
}
+ (ResponseOperation*) defaultInstance {
  return defaultResponseOperationInstance;
}
- (ResponseOperation*) defaultInstance {
  return defaultResponseOperationInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOperationCost) {
    [output writeUInt32:1 value:self.operationCost];
  }
  if (self.hasResponse) {
    [output writeMessage:2 value:self.response];
  }
  if (self.hasResultEx) {
    [output writeMessage:3 value:self.resultEx];
  }
  if (self.hasZoneRetrieveResponse) {
    [output writeMessage:201 value:self.zoneRetrieveResponse];
  }
  if (self.hasRecordRetrieveResponse) {
    [output writeMessage:211 value:self.recordRetrieveResponse];
  }
  if (self.hasQueryRetrieveRequestResponse) {
    [output writeMessage:220 value:self.queryRetrieveRequestResponse];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOperationCost) {
    size += computeUInt32Size(1, self.operationCost);
  }
  if (self.hasResponse) {
    size += computeMessageSize(2, self.response);
  }
  if (self.hasResultEx) {
    size += computeMessageSize(3, self.resultEx);
  }
  if (self.hasZoneRetrieveResponse) {
    size += computeMessageSize(201, self.zoneRetrieveResponse);
  }
  if (self.hasRecordRetrieveResponse) {
    size += computeMessageSize(211, self.recordRetrieveResponse);
  }
  if (self.hasQueryRetrieveRequestResponse) {
    size += computeMessageSize(220, self.queryRetrieveRequestResponse);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResponseOperation*) parseFromData:(NSData*) data {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromData:data] build];
}
+ (ResponseOperation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperation*) parseFromInputStream:(NSInputStream*) input {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromInputStream:input] build];
}
+ (ResponseOperation*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeDelimitedFromInputStream:input] build];
}
+ (ResponseOperation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromCodedInputStream:input] build];
}
+ (ResponseOperation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperation*)[[[ResponseOperation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperation_Builder*) builder {
  return [[[ResponseOperation_Builder alloc] init] autorelease];
}
+ (ResponseOperation_Builder*) builderWithPrototype:(ResponseOperation*) prototype {
  return [[ResponseOperation builder] mergeFrom:prototype];
}
- (ResponseOperation_Builder*) builder {
  return [ResponseOperation builder];
}
@end

@interface ResponseOperation_Builder()
@property (retain) ResponseOperation* result;
@end

@implementation ResponseOperation_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ResponseOperation alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResponseOperation_Builder*) clear {
  self.result = [[[ResponseOperation alloc] init] autorelease];
  return self;
}
- (ResponseOperation_Builder*) clone {
  return [ResponseOperation builderWithPrototype:result];
}
- (ResponseOperation*) defaultInstance {
  return [ResponseOperation defaultInstance];
}
- (ResponseOperation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResponseOperation*) buildPartial {
  ResponseOperation* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ResponseOperation_Builder*) mergeFrom:(ResponseOperation*) other {
  if (other == [ResponseOperation defaultInstance]) {
    return self;
  }
  if (other.hasOperationCost) {
    [self setOperationCost:other.operationCost];
  }
  if (other.hasResponse) {
    [self mergeResponse:other.response];
  }
  if (other.hasResultEx) {
    [self mergeResultEx:other.resultEx];
  }
  if (other.hasZoneRetrieveResponse) {
    [self mergeZoneRetrieveResponse:other.zoneRetrieveResponse];
  }
  if (other.hasRecordRetrieveResponse) {
    [self mergeRecordRetrieveResponse:other.recordRetrieveResponse];
  }
  if (other.hasQueryRetrieveRequestResponse) {
    [self mergeQueryRetrieveRequestResponse:other.queryRetrieveRequestResponse];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResponseOperation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResponseOperation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOperationCost:[input readUInt32]];
        break;
      }
      case 18: {
        Operation_Builder* subBuilder = [Operation builder];
        if (self.hasResponse) {
          [subBuilder mergeFrom:self.response];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResponse:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ResponseOperationResult_Builder* subBuilder = [ResponseOperationResult builder];
        if (self.hasResultEx) {
          [subBuilder mergeFrom:self.resultEx];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResultEx:[subBuilder buildPartial]];
        break;
      }
      case 1610: {
        ZoneRetrieveResponse_Builder* subBuilder = [ZoneRetrieveResponse builder];
        if (self.hasZoneRetrieveResponse) {
          [subBuilder mergeFrom:self.zoneRetrieveResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneRetrieveResponse:[subBuilder buildPartial]];
        break;
      }
      case 1690: {
        RecordRetrieveResponse_Builder* subBuilder = [RecordRetrieveResponse builder];
        if (self.hasRecordRetrieveResponse) {
          [subBuilder mergeFrom:self.recordRetrieveResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordRetrieveResponse:[subBuilder buildPartial]];
        break;
      }
      case 1762: {
        QueryRetrieveRequestResponse_Builder* subBuilder = [QueryRetrieveRequestResponse builder];
        if (self.hasQueryRetrieveRequestResponse) {
          [subBuilder mergeFrom:self.queryRetrieveRequestResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQueryRetrieveRequestResponse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasOperationCost {
  return result.hasOperationCost;
}
- (int32_t) operationCost {
  return result.operationCost;
}
- (ResponseOperation_Builder*) setOperationCost:(int32_t) value {
  result.hasOperationCost = YES;
  result.operationCost = value;
  return self;
}
- (ResponseOperation_Builder*) clearOperationCost {
  result.hasOperationCost = NO;
  result.operationCost = 0;
  return self;
}
- (BOOL) hasResponse {
  return result.hasResponse;
}
- (Operation*) response {
  return result.response;
}
- (ResponseOperation_Builder*) setResponse:(Operation*) value {
  result.hasResponse = YES;
  result.response = value;
  return self;
}
- (ResponseOperation_Builder*) setResponseBuilder:(Operation_Builder*) builderForValue {
  return [self setResponse:[builderForValue build]];
}
- (ResponseOperation_Builder*) mergeResponse:(Operation*) value {
  if (result.hasResponse &&
      result.response != [Operation defaultInstance]) {
    result.response =
      [[[Operation builderWithPrototype:result.response] mergeFrom:value] buildPartial];
  } else {
    result.response = value;
  }
  result.hasResponse = YES;
  return self;
}
- (ResponseOperation_Builder*) clearResponse {
  result.hasResponse = NO;
  result.response = [Operation defaultInstance];
  return self;
}
- (BOOL) hasResultEx {
  return result.hasResultEx;
}
- (ResponseOperationResult*) resultEx {
  return result.resultEx;
}
- (ResponseOperation_Builder*) setResultEx:(ResponseOperationResult*) value {
  result.hasResultEx = YES;
  result.resultEx = value;
  return self;
}
- (ResponseOperation_Builder*) setResultExBuilder:(ResponseOperationResult_Builder*) builderForValue {
  return [self setResultEx:[builderForValue build]];
}
- (ResponseOperation_Builder*) mergeResultEx:(ResponseOperationResult*) value {
  if (result.hasResultEx &&
      result.resultEx != [ResponseOperationResult defaultInstance]) {
    result.resultEx =
      [[[ResponseOperationResult builderWithPrototype:result.resultEx] mergeFrom:value] buildPartial];
  } else {
    result.resultEx = value;
  }
  result.hasResultEx = YES;
  return self;
}
- (ResponseOperation_Builder*) clearResultEx {
  result.hasResultEx = NO;
  result.resultEx = [ResponseOperationResult defaultInstance];
  return self;
}
- (BOOL) hasZoneRetrieveResponse {
  return result.hasZoneRetrieveResponse;
}
- (ZoneRetrieveResponse*) zoneRetrieveResponse {
  return result.zoneRetrieveResponse;
}
- (ResponseOperation_Builder*) setZoneRetrieveResponse:(ZoneRetrieveResponse*) value {
  result.hasZoneRetrieveResponse = YES;
  result.zoneRetrieveResponse = value;
  return self;
}
- (ResponseOperation_Builder*) setZoneRetrieveResponseBuilder:(ZoneRetrieveResponse_Builder*) builderForValue {
  return [self setZoneRetrieveResponse:[builderForValue build]];
}
- (ResponseOperation_Builder*) mergeZoneRetrieveResponse:(ZoneRetrieveResponse*) value {
  if (result.hasZoneRetrieveResponse &&
      result.zoneRetrieveResponse != [ZoneRetrieveResponse defaultInstance]) {
    result.zoneRetrieveResponse =
      [[[ZoneRetrieveResponse builderWithPrototype:result.zoneRetrieveResponse] mergeFrom:value] buildPartial];
  } else {
    result.zoneRetrieveResponse = value;
  }
  result.hasZoneRetrieveResponse = YES;
  return self;
}
- (ResponseOperation_Builder*) clearZoneRetrieveResponse {
  result.hasZoneRetrieveResponse = NO;
  result.zoneRetrieveResponse = [ZoneRetrieveResponse defaultInstance];
  return self;
}
- (BOOL) hasRecordRetrieveResponse {
  return result.hasRecordRetrieveResponse;
}
- (RecordRetrieveResponse*) recordRetrieveResponse {
  return result.recordRetrieveResponse;
}
- (ResponseOperation_Builder*) setRecordRetrieveResponse:(RecordRetrieveResponse*) value {
  result.hasRecordRetrieveResponse = YES;
  result.recordRetrieveResponse = value;
  return self;
}
- (ResponseOperation_Builder*) setRecordRetrieveResponseBuilder:(RecordRetrieveResponse_Builder*) builderForValue {
  return [self setRecordRetrieveResponse:[builderForValue build]];
}
- (ResponseOperation_Builder*) mergeRecordRetrieveResponse:(RecordRetrieveResponse*) value {
  if (result.hasRecordRetrieveResponse &&
      result.recordRetrieveResponse != [RecordRetrieveResponse defaultInstance]) {
    result.recordRetrieveResponse =
      [[[RecordRetrieveResponse builderWithPrototype:result.recordRetrieveResponse] mergeFrom:value] buildPartial];
  } else {
    result.recordRetrieveResponse = value;
  }
  result.hasRecordRetrieveResponse = YES;
  return self;
}
- (ResponseOperation_Builder*) clearRecordRetrieveResponse {
  result.hasRecordRetrieveResponse = NO;
  result.recordRetrieveResponse = [RecordRetrieveResponse defaultInstance];
  return self;
}
- (BOOL) hasQueryRetrieveRequestResponse {
  return result.hasQueryRetrieveRequestResponse;
}
- (QueryRetrieveRequestResponse*) queryRetrieveRequestResponse {
  return result.queryRetrieveRequestResponse;
}
- (ResponseOperation_Builder*) setQueryRetrieveRequestResponse:(QueryRetrieveRequestResponse*) value {
  result.hasQueryRetrieveRequestResponse = YES;
  result.queryRetrieveRequestResponse = value;
  return self;
}
- (ResponseOperation_Builder*) setQueryRetrieveRequestResponseBuilder:(QueryRetrieveRequestResponse_Builder*) builderForValue {
  return [self setQueryRetrieveRequestResponse:[builderForValue build]];
}
- (ResponseOperation_Builder*) mergeQueryRetrieveRequestResponse:(QueryRetrieveRequestResponse*) value {
  if (result.hasQueryRetrieveRequestResponse &&
      result.queryRetrieveRequestResponse != [QueryRetrieveRequestResponse defaultInstance]) {
    result.queryRetrieveRequestResponse =
      [[[QueryRetrieveRequestResponse builderWithPrototype:result.queryRetrieveRequestResponse] mergeFrom:value] buildPartial];
  } else {
    result.queryRetrieveRequestResponse = value;
  }
  result.hasQueryRetrieveRequestResponse = YES;
  return self;
}
- (ResponseOperation_Builder*) clearQueryRetrieveRequestResponse {
  result.hasQueryRetrieveRequestResponse = NO;
  result.queryRetrieveRequestResponse = [QueryRetrieveRequestResponse defaultInstance];
  return self;
}
@end

@interface RequestOperationHeader ()
@property (retain) NSString* applicationContainer;
@property (retain) NSString* applicationBundle;
@property (retain) NSString* f4;
@property (retain) Identifier* deviceIdentifier;
@property (retain) NSString* deviceSoftwareVersion;
@property (retain) NSString* f9;
@property (retain) NSString* deviceLibraryName;
@property (retain) NSString* deviceLibraryVersion;
@property (retain) NSString* operation;
@property int64_t deviceFlowControlBudget;
@property int64_t deviceFlowControlBudgetCap;
@property (retain) NSString* deviceFlowControlKey;
@property (retain) Locale* locale;
@property (retain) NSString* version;
@property int32_t f19;
@property (retain) NSString* deviceAssignedName;
@property (retain) NSString* deviceHardwareId;
@property int32_t f23;
@property int32_t f25;
@end

@implementation RequestOperationHeader

- (BOOL) hasApplicationContainer {
  return !!hasApplicationContainer_;
}
- (void) setHasApplicationContainer:(BOOL) value {
  hasApplicationContainer_ = !!value;
}
@synthesize applicationContainer;
- (BOOL) hasApplicationBundle {
  return !!hasApplicationBundle_;
}
- (void) setHasApplicationBundle:(BOOL) value {
  hasApplicationBundle_ = !!value;
}
@synthesize applicationBundle;
- (BOOL) hasF4 {
  return !!hasF4_;
}
- (void) setHasF4:(BOOL) value {
  hasF4_ = !!value;
}
@synthesize f4;
- (BOOL) hasDeviceIdentifier {
  return !!hasDeviceIdentifier_;
}
- (void) setHasDeviceIdentifier:(BOOL) value {
  hasDeviceIdentifier_ = !!value;
}
@synthesize deviceIdentifier;
- (BOOL) hasDeviceSoftwareVersion {
  return !!hasDeviceSoftwareVersion_;
}
- (void) setHasDeviceSoftwareVersion:(BOOL) value {
  hasDeviceSoftwareVersion_ = !!value;
}
@synthesize deviceSoftwareVersion;
- (BOOL) hasF9 {
  return !!hasF9_;
}
- (void) setHasF9:(BOOL) value {
  hasF9_ = !!value;
}
@synthesize f9;
- (BOOL) hasDeviceLibraryName {
  return !!hasDeviceLibraryName_;
}
- (void) setHasDeviceLibraryName:(BOOL) value {
  hasDeviceLibraryName_ = !!value;
}
@synthesize deviceLibraryName;
- (BOOL) hasDeviceLibraryVersion {
  return !!hasDeviceLibraryVersion_;
}
- (void) setHasDeviceLibraryVersion:(BOOL) value {
  hasDeviceLibraryVersion_ = !!value;
}
@synthesize deviceLibraryVersion;
- (BOOL) hasOperation {
  return !!hasOperation_;
}
- (void) setHasOperation:(BOOL) value {
  hasOperation_ = !!value;
}
@synthesize operation;
- (BOOL) hasDeviceFlowControlBudget {
  return !!hasDeviceFlowControlBudget_;
}
- (void) setHasDeviceFlowControlBudget:(BOOL) value {
  hasDeviceFlowControlBudget_ = !!value;
}
@synthesize deviceFlowControlBudget;
- (BOOL) hasDeviceFlowControlBudgetCap {
  return !!hasDeviceFlowControlBudgetCap_;
}
- (void) setHasDeviceFlowControlBudgetCap:(BOOL) value {
  hasDeviceFlowControlBudgetCap_ = !!value;
}
@synthesize deviceFlowControlBudgetCap;
- (BOOL) hasDeviceFlowControlKey {
  return !!hasDeviceFlowControlKey_;
}
- (void) setHasDeviceFlowControlKey:(BOOL) value {
  hasDeviceFlowControlKey_ = !!value;
}
@synthesize deviceFlowControlKey;
- (BOOL) hasLocale {
  return !!hasLocale_;
}
- (void) setHasLocale:(BOOL) value {
  hasLocale_ = !!value;
}
@synthesize locale;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasF19 {
  return !!hasF19_;
}
- (void) setHasF19:(BOOL) value {
  hasF19_ = !!value;
}
@synthesize f19;
- (BOOL) hasDeviceAssignedName {
  return !!hasDeviceAssignedName_;
}
- (void) setHasDeviceAssignedName:(BOOL) value {
  hasDeviceAssignedName_ = !!value;
}
@synthesize deviceAssignedName;
- (BOOL) hasDeviceHardwareId {
  return !!hasDeviceHardwareId_;
}
- (void) setHasDeviceHardwareId:(BOOL) value {
  hasDeviceHardwareId_ = !!value;
}
@synthesize deviceHardwareId;
- (BOOL) hasF23 {
  return !!hasF23_;
}
- (void) setHasF23:(BOOL) value {
  hasF23_ = !!value;
}
@synthesize f23;
- (BOOL) hasF25 {
  return !!hasF25_;
}
- (void) setHasF25:(BOOL) value {
  hasF25_ = !!value;
}
@synthesize f25;
- (void) dealloc {
  self.applicationContainer = nil;
  self.applicationBundle = nil;
  self.f4 = nil;
  self.deviceIdentifier = nil;
  self.deviceSoftwareVersion = nil;
  self.f9 = nil;
  self.deviceLibraryName = nil;
  self.deviceLibraryVersion = nil;
  self.operation = nil;
  self.deviceFlowControlKey = nil;
  self.locale = nil;
  self.version = nil;
  self.deviceAssignedName = nil;
  self.deviceHardwareId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.applicationContainer = @"";
    self.applicationBundle = @"";
    self.f4 = @"";
    self.deviceIdentifier = [Identifier defaultInstance];
    self.deviceSoftwareVersion = @"";
    self.f9 = @"";
    self.deviceLibraryName = @"";
    self.deviceLibraryVersion = @"";
    self.operation = @"";
    self.deviceFlowControlBudget = 0L;
    self.deviceFlowControlBudgetCap = 0L;
    self.deviceFlowControlKey = @"";
    self.locale = [Locale defaultInstance];
    self.version = @"";
    self.f19 = 0;
    self.deviceAssignedName = @"";
    self.deviceHardwareId = @"";
    self.f23 = 0;
    self.f25 = 0;
  }
  return self;
}
static RequestOperationHeader* defaultRequestOperationHeaderInstance = nil;
+ (void) initialize {
  if (self == [RequestOperationHeader class]) {
    defaultRequestOperationHeaderInstance = [[RequestOperationHeader alloc] init];
  }
}
+ (RequestOperationHeader*) defaultInstance {
  return defaultRequestOperationHeaderInstance;
}
- (RequestOperationHeader*) defaultInstance {
  return defaultRequestOperationHeaderInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasApplicationContainer) {
    [output writeString:2 value:self.applicationContainer];
  }
  if (self.hasApplicationBundle) {
    [output writeString:3 value:self.applicationBundle];
  }
  if (self.hasF4) {
    [output writeString:4 value:self.f4];
  }
  if (self.hasDeviceIdentifier) {
    [output writeMessage:7 value:self.deviceIdentifier];
  }
  if (self.hasDeviceSoftwareVersion) {
    [output writeString:8 value:self.deviceSoftwareVersion];
  }
  if (self.hasF9) {
    [output writeString:9 value:self.f9];
  }
  if (self.hasDeviceLibraryName) {
    [output writeString:10 value:self.deviceLibraryName];
  }
  if (self.hasDeviceLibraryVersion) {
    [output writeString:11 value:self.deviceLibraryVersion];
  }
  if (self.hasOperation) {
    [output writeString:12 value:self.operation];
  }
  if (self.hasDeviceFlowControlBudget) {
    [output writeUInt64:13 value:self.deviceFlowControlBudget];
  }
  if (self.hasDeviceFlowControlBudgetCap) {
    [output writeUInt64:14 value:self.deviceFlowControlBudgetCap];
  }
  if (self.hasDeviceFlowControlKey) {
    [output writeString:15 value:self.deviceFlowControlKey];
  }
  if (self.hasLocale) {
    [output writeMessage:17 value:self.locale];
  }
  if (self.hasVersion) {
    [output writeString:18 value:self.version];
  }
  if (self.hasF19) {
    [output writeUInt32:19 value:self.f19];
  }
  if (self.hasDeviceAssignedName) {
    [output writeString:21 value:self.deviceAssignedName];
  }
  if (self.hasDeviceHardwareId) {
    [output writeString:22 value:self.deviceHardwareId];
  }
  if (self.hasF23) {
    [output writeUInt32:23 value:self.f23];
  }
  if (self.hasF25) {
    [output writeUInt32:25 value:self.f25];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasApplicationContainer) {
    size += computeStringSize(2, self.applicationContainer);
  }
  if (self.hasApplicationBundle) {
    size += computeStringSize(3, self.applicationBundle);
  }
  if (self.hasF4) {
    size += computeStringSize(4, self.f4);
  }
  if (self.hasDeviceIdentifier) {
    size += computeMessageSize(7, self.deviceIdentifier);
  }
  if (self.hasDeviceSoftwareVersion) {
    size += computeStringSize(8, self.deviceSoftwareVersion);
  }
  if (self.hasF9) {
    size += computeStringSize(9, self.f9);
  }
  if (self.hasDeviceLibraryName) {
    size += computeStringSize(10, self.deviceLibraryName);
  }
  if (self.hasDeviceLibraryVersion) {
    size += computeStringSize(11, self.deviceLibraryVersion);
  }
  if (self.hasOperation) {
    size += computeStringSize(12, self.operation);
  }
  if (self.hasDeviceFlowControlBudget) {
    size += computeUInt64Size(13, self.deviceFlowControlBudget);
  }
  if (self.hasDeviceFlowControlBudgetCap) {
    size += computeUInt64Size(14, self.deviceFlowControlBudgetCap);
  }
  if (self.hasDeviceFlowControlKey) {
    size += computeStringSize(15, self.deviceFlowControlKey);
  }
  if (self.hasLocale) {
    size += computeMessageSize(17, self.locale);
  }
  if (self.hasVersion) {
    size += computeStringSize(18, self.version);
  }
  if (self.hasF19) {
    size += computeUInt32Size(19, self.f19);
  }
  if (self.hasDeviceAssignedName) {
    size += computeStringSize(21, self.deviceAssignedName);
  }
  if (self.hasDeviceHardwareId) {
    size += computeStringSize(22, self.deviceHardwareId);
  }
  if (self.hasF23) {
    size += computeUInt32Size(23, self.f23);
  }
  if (self.hasF25) {
    size += computeUInt32Size(25, self.f25);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestOperationHeader*) parseFromData:(NSData*) data {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromData:data] build];
}
+ (RequestOperationHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestOperationHeader*) parseFromInputStream:(NSInputStream*) input {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromInputStream:input] build];
}
+ (RequestOperationHeader*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeDelimitedFromInputStream:input] build];
}
+ (RequestOperationHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestOperationHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromCodedInputStream:input] build];
}
+ (RequestOperationHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestOperationHeader*)[[[RequestOperationHeader builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestOperationHeader_Builder*) builder {
  return [[[RequestOperationHeader_Builder alloc] init] autorelease];
}
+ (RequestOperationHeader_Builder*) builderWithPrototype:(RequestOperationHeader*) prototype {
  return [[RequestOperationHeader builder] mergeFrom:prototype];
}
- (RequestOperationHeader_Builder*) builder {
  return [RequestOperationHeader builder];
}
@end

@interface RequestOperationHeader_Builder()
@property (retain) RequestOperationHeader* result;
@end

@implementation RequestOperationHeader_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestOperationHeader alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestOperationHeader_Builder*) clear {
  self.result = [[[RequestOperationHeader alloc] init] autorelease];
  return self;
}
- (RequestOperationHeader_Builder*) clone {
  return [RequestOperationHeader builderWithPrototype:result];
}
- (RequestOperationHeader*) defaultInstance {
  return [RequestOperationHeader defaultInstance];
}
- (RequestOperationHeader*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestOperationHeader*) buildPartial {
  RequestOperationHeader* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestOperationHeader_Builder*) mergeFrom:(RequestOperationHeader*) other {
  if (other == [RequestOperationHeader defaultInstance]) {
    return self;
  }
  if (other.hasApplicationContainer) {
    [self setApplicationContainer:other.applicationContainer];
  }
  if (other.hasApplicationBundle) {
    [self setApplicationBundle:other.applicationBundle];
  }
  if (other.hasF4) {
    [self setF4:other.f4];
  }
  if (other.hasDeviceIdentifier) {
    [self mergeDeviceIdentifier:other.deviceIdentifier];
  }
  if (other.hasDeviceSoftwareVersion) {
    [self setDeviceSoftwareVersion:other.deviceSoftwareVersion];
  }
  if (other.hasF9) {
    [self setF9:other.f9];
  }
  if (other.hasDeviceLibraryName) {
    [self setDeviceLibraryName:other.deviceLibraryName];
  }
  if (other.hasDeviceLibraryVersion) {
    [self setDeviceLibraryVersion:other.deviceLibraryVersion];
  }
  if (other.hasOperation) {
    [self setOperation:other.operation];
  }
  if (other.hasDeviceFlowControlBudget) {
    [self setDeviceFlowControlBudget:other.deviceFlowControlBudget];
  }
  if (other.hasDeviceFlowControlBudgetCap) {
    [self setDeviceFlowControlBudgetCap:other.deviceFlowControlBudgetCap];
  }
  if (other.hasDeviceFlowControlKey) {
    [self setDeviceFlowControlKey:other.deviceFlowControlKey];
  }
  if (other.hasLocale) {
    [self mergeLocale:other.locale];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasF19) {
    [self setF19:other.f19];
  }
  if (other.hasDeviceAssignedName) {
    [self setDeviceAssignedName:other.deviceAssignedName];
  }
  if (other.hasDeviceHardwareId) {
    [self setDeviceHardwareId:other.deviceHardwareId];
  }
  if (other.hasF23) {
    [self setF23:other.f23];
  }
  if (other.hasF25) {
    [self setF25:other.f25];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestOperationHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestOperationHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        [self setApplicationContainer:[input readString]];
        break;
      }
      case 26: {
        [self setApplicationBundle:[input readString]];
        break;
      }
      case 34: {
        [self setF4:[input readString]];
        break;
      }
      case 58: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasDeviceIdentifier) {
          [subBuilder mergeFrom:self.deviceIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDeviceIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        [self setDeviceSoftwareVersion:[input readString]];
        break;
      }
      case 74: {
        [self setF9:[input readString]];
        break;
      }
      case 82: {
        [self setDeviceLibraryName:[input readString]];
        break;
      }
      case 90: {
        [self setDeviceLibraryVersion:[input readString]];
        break;
      }
      case 98: {
        [self setOperation:[input readString]];
        break;
      }
      case 104: {
        [self setDeviceFlowControlBudget:[input readUInt64]];
        break;
      }
      case 112: {
        [self setDeviceFlowControlBudgetCap:[input readUInt64]];
        break;
      }
      case 122: {
        [self setDeviceFlowControlKey:[input readString]];
        break;
      }
      case 138: {
        Locale_Builder* subBuilder = [Locale builder];
        if (self.hasLocale) {
          [subBuilder mergeFrom:self.locale];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocale:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        [self setVersion:[input readString]];
        break;
      }
      case 152: {
        [self setF19:[input readUInt32]];
        break;
      }
      case 170: {
        [self setDeviceAssignedName:[input readString]];
        break;
      }
      case 178: {
        [self setDeviceHardwareId:[input readString]];
        break;
      }
      case 184: {
        [self setF23:[input readUInt32]];
        break;
      }
      case 200: {
        [self setF25:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasApplicationContainer {
  return result.hasApplicationContainer;
}
- (NSString*) applicationContainer {
  return result.applicationContainer;
}
- (RequestOperationHeader_Builder*) setApplicationContainer:(NSString*) value {
  result.hasApplicationContainer = YES;
  result.applicationContainer = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearApplicationContainer {
  result.hasApplicationContainer = NO;
  result.applicationContainer = @"";
  return self;
}
- (BOOL) hasApplicationBundle {
  return result.hasApplicationBundle;
}
- (NSString*) applicationBundle {
  return result.applicationBundle;
}
- (RequestOperationHeader_Builder*) setApplicationBundle:(NSString*) value {
  result.hasApplicationBundle = YES;
  result.applicationBundle = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearApplicationBundle {
  result.hasApplicationBundle = NO;
  result.applicationBundle = @"";
  return self;
}
- (BOOL) hasF4 {
  return result.hasF4;
}
- (NSString*) f4 {
  return result.f4;
}
- (RequestOperationHeader_Builder*) setF4:(NSString*) value {
  result.hasF4 = YES;
  result.f4 = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearF4 {
  result.hasF4 = NO;
  result.f4 = @"";
  return self;
}
- (BOOL) hasDeviceIdentifier {
  return result.hasDeviceIdentifier;
}
- (Identifier*) deviceIdentifier {
  return result.deviceIdentifier;
}
- (RequestOperationHeader_Builder*) setDeviceIdentifier:(Identifier*) value {
  result.hasDeviceIdentifier = YES;
  result.deviceIdentifier = value;
  return self;
}
- (RequestOperationHeader_Builder*) setDeviceIdentifierBuilder:(Identifier_Builder*) builderForValue {
  return [self setDeviceIdentifier:[builderForValue build]];
}
- (RequestOperationHeader_Builder*) mergeDeviceIdentifier:(Identifier*) value {
  if (result.hasDeviceIdentifier &&
      result.deviceIdentifier != [Identifier defaultInstance]) {
    result.deviceIdentifier =
      [[[Identifier builderWithPrototype:result.deviceIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.deviceIdentifier = value;
  }
  result.hasDeviceIdentifier = YES;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceIdentifier {
  result.hasDeviceIdentifier = NO;
  result.deviceIdentifier = [Identifier defaultInstance];
  return self;
}
- (BOOL) hasDeviceSoftwareVersion {
  return result.hasDeviceSoftwareVersion;
}
- (NSString*) deviceSoftwareVersion {
  return result.deviceSoftwareVersion;
}
- (RequestOperationHeader_Builder*) setDeviceSoftwareVersion:(NSString*) value {
  result.hasDeviceSoftwareVersion = YES;
  result.deviceSoftwareVersion = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceSoftwareVersion {
  result.hasDeviceSoftwareVersion = NO;
  result.deviceSoftwareVersion = @"";
  return self;
}
- (BOOL) hasF9 {
  return result.hasF9;
}
- (NSString*) f9 {
  return result.f9;
}
- (RequestOperationHeader_Builder*) setF9:(NSString*) value {
  result.hasF9 = YES;
  result.f9 = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearF9 {
  result.hasF9 = NO;
  result.f9 = @"";
  return self;
}
- (BOOL) hasDeviceLibraryName {
  return result.hasDeviceLibraryName;
}
- (NSString*) deviceLibraryName {
  return result.deviceLibraryName;
}
- (RequestOperationHeader_Builder*) setDeviceLibraryName:(NSString*) value {
  result.hasDeviceLibraryName = YES;
  result.deviceLibraryName = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceLibraryName {
  result.hasDeviceLibraryName = NO;
  result.deviceLibraryName = @"";
  return self;
}
- (BOOL) hasDeviceLibraryVersion {
  return result.hasDeviceLibraryVersion;
}
- (NSString*) deviceLibraryVersion {
  return result.deviceLibraryVersion;
}
- (RequestOperationHeader_Builder*) setDeviceLibraryVersion:(NSString*) value {
  result.hasDeviceLibraryVersion = YES;
  result.deviceLibraryVersion = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceLibraryVersion {
  result.hasDeviceLibraryVersion = NO;
  result.deviceLibraryVersion = @"";
  return self;
}
- (BOOL) hasOperation {
  return result.hasOperation;
}
- (NSString*) operation {
  return result.operation;
}
- (RequestOperationHeader_Builder*) setOperation:(NSString*) value {
  result.hasOperation = YES;
  result.operation = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearOperation {
  result.hasOperation = NO;
  result.operation = @"";
  return self;
}
- (BOOL) hasDeviceFlowControlBudget {
  return result.hasDeviceFlowControlBudget;
}
- (int64_t) deviceFlowControlBudget {
  return result.deviceFlowControlBudget;
}
- (RequestOperationHeader_Builder*) setDeviceFlowControlBudget:(int64_t) value {
  result.hasDeviceFlowControlBudget = YES;
  result.deviceFlowControlBudget = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceFlowControlBudget {
  result.hasDeviceFlowControlBudget = NO;
  result.deviceFlowControlBudget = 0L;
  return self;
}
- (BOOL) hasDeviceFlowControlBudgetCap {
  return result.hasDeviceFlowControlBudgetCap;
}
- (int64_t) deviceFlowControlBudgetCap {
  return result.deviceFlowControlBudgetCap;
}
- (RequestOperationHeader_Builder*) setDeviceFlowControlBudgetCap:(int64_t) value {
  result.hasDeviceFlowControlBudgetCap = YES;
  result.deviceFlowControlBudgetCap = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceFlowControlBudgetCap {
  result.hasDeviceFlowControlBudgetCap = NO;
  result.deviceFlowControlBudgetCap = 0L;
  return self;
}
- (BOOL) hasDeviceFlowControlKey {
  return result.hasDeviceFlowControlKey;
}
- (NSString*) deviceFlowControlKey {
  return result.deviceFlowControlKey;
}
- (RequestOperationHeader_Builder*) setDeviceFlowControlKey:(NSString*) value {
  result.hasDeviceFlowControlKey = YES;
  result.deviceFlowControlKey = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceFlowControlKey {
  result.hasDeviceFlowControlKey = NO;
  result.deviceFlowControlKey = @"";
  return self;
}
- (BOOL) hasLocale {
  return result.hasLocale;
}
- (Locale*) locale {
  return result.locale;
}
- (RequestOperationHeader_Builder*) setLocale:(Locale*) value {
  result.hasLocale = YES;
  result.locale = value;
  return self;
}
- (RequestOperationHeader_Builder*) setLocaleBuilder:(Locale_Builder*) builderForValue {
  return [self setLocale:[builderForValue build]];
}
- (RequestOperationHeader_Builder*) mergeLocale:(Locale*) value {
  if (result.hasLocale &&
      result.locale != [Locale defaultInstance]) {
    result.locale =
      [[[Locale builderWithPrototype:result.locale] mergeFrom:value] buildPartial];
  } else {
    result.locale = value;
  }
  result.hasLocale = YES;
  return self;
}
- (RequestOperationHeader_Builder*) clearLocale {
  result.hasLocale = NO;
  result.locale = [Locale defaultInstance];
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (NSString*) version {
  return result.version;
}
- (RequestOperationHeader_Builder*) setVersion:(NSString*) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = @"";
  return self;
}
- (BOOL) hasF19 {
  return result.hasF19;
}
- (int32_t) f19 {
  return result.f19;
}
- (RequestOperationHeader_Builder*) setF19:(int32_t) value {
  result.hasF19 = YES;
  result.f19 = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearF19 {
  result.hasF19 = NO;
  result.f19 = 0;
  return self;
}
- (BOOL) hasDeviceAssignedName {
  return result.hasDeviceAssignedName;
}
- (NSString*) deviceAssignedName {
  return result.deviceAssignedName;
}
- (RequestOperationHeader_Builder*) setDeviceAssignedName:(NSString*) value {
  result.hasDeviceAssignedName = YES;
  result.deviceAssignedName = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceAssignedName {
  result.hasDeviceAssignedName = NO;
  result.deviceAssignedName = @"";
  return self;
}
- (BOOL) hasDeviceHardwareId {
  return result.hasDeviceHardwareId;
}
- (NSString*) deviceHardwareId {
  return result.deviceHardwareId;
}
- (RequestOperationHeader_Builder*) setDeviceHardwareId:(NSString*) value {
  result.hasDeviceHardwareId = YES;
  result.deviceHardwareId = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearDeviceHardwareId {
  result.hasDeviceHardwareId = NO;
  result.deviceHardwareId = @"";
  return self;
}
- (BOOL) hasF23 {
  return result.hasF23;
}
- (int32_t) f23 {
  return result.f23;
}
- (RequestOperationHeader_Builder*) setF23:(int32_t) value {
  result.hasF23 = YES;
  result.f23 = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearF23 {
  result.hasF23 = NO;
  result.f23 = 0;
  return self;
}
- (BOOL) hasF25 {
  return result.hasF25;
}
- (int32_t) f25 {
  return result.f25;
}
- (RequestOperationHeader_Builder*) setF25:(int32_t) value {
  result.hasF25 = YES;
  result.f25 = value;
  return self;
}
- (RequestOperationHeader_Builder*) clearF25 {
  result.hasF25 = NO;
  result.f25 = 0;
  return self;
}
@end

@interface Operation ()
@property (retain) NSString* uuid;
@property int32_t type;
@property int32_t f4;
@end

@implementation Operation

- (BOOL) hasUuid {
  return !!hasUuid_;
}
- (void) setHasUuid:(BOOL) value {
  hasUuid_ = !!value;
}
@synthesize uuid;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasF4 {
  return !!hasF4_;
}
- (void) setHasF4:(BOOL) value {
  hasF4_ = !!value;
}
@synthesize f4;
- (void) dealloc {
  self.uuid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uuid = @"";
    self.type = 0;
    self.f4 = 0;
  }
  return self;
}
static Operation* defaultOperationInstance = nil;
+ (void) initialize {
  if (self == [Operation class]) {
    defaultOperationInstance = [[Operation alloc] init];
  }
}
+ (Operation*) defaultInstance {
  return defaultOperationInstance;
}
- (Operation*) defaultInstance {
  return defaultOperationInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUuid) {
    [output writeString:1 value:self.uuid];
  }
  if (self.hasType) {
    [output writeUInt32:2 value:self.type];
  }
  if (self.hasF4) {
    [output writeUInt32:4 value:self.f4];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUuid) {
    size += computeStringSize(1, self.uuid);
  }
  if (self.hasType) {
    size += computeUInt32Size(2, self.type);
  }
  if (self.hasF4) {
    size += computeUInt32Size(4, self.f4);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Operation*) parseFromData:(NSData*) data {
  return (Operation*)[[[Operation builder] mergeFromData:data] build];
}
+ (Operation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Operation*)[[[Operation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Operation*) parseFromInputStream:(NSInputStream*) input {
  return (Operation*)[[[Operation builder] mergeFromInputStream:input] build];
}
+ (Operation*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Operation*)[[[Operation builder] mergeDelimitedFromInputStream:input] build];
}
+ (Operation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Operation*)[[[Operation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Operation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Operation*)[[[Operation builder] mergeFromCodedInputStream:input] build];
}
+ (Operation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Operation*)[[[Operation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Operation_Builder*) builder {
  return [[[Operation_Builder alloc] init] autorelease];
}
+ (Operation_Builder*) builderWithPrototype:(Operation*) prototype {
  return [[Operation builder] mergeFrom:prototype];
}
- (Operation_Builder*) builder {
  return [Operation builder];
}
@end

@interface Operation_Builder()
@property (retain) Operation* result;
@end

@implementation Operation_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Operation alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Operation_Builder*) clear {
  self.result = [[[Operation alloc] init] autorelease];
  return self;
}
- (Operation_Builder*) clone {
  return [Operation builderWithPrototype:result];
}
- (Operation*) defaultInstance {
  return [Operation defaultInstance];
}
- (Operation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Operation*) buildPartial {
  Operation* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Operation_Builder*) mergeFrom:(Operation*) other {
  if (other == [Operation defaultInstance]) {
    return self;
  }
  if (other.hasUuid) {
    [self setUuid:other.uuid];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasF4) {
    [self setF4:other.f4];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Operation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Operation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUuid:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readUInt32]];
        break;
      }
      case 32: {
        [self setF4:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUuid {
  return result.hasUuid;
}
- (NSString*) uuid {
  return result.uuid;
}
- (Operation_Builder*) setUuid:(NSString*) value {
  result.hasUuid = YES;
  result.uuid = value;
  return self;
}
- (Operation_Builder*) clearUuid {
  result.hasUuid = NO;
  result.uuid = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (Operation_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Operation_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasF4 {
  return result.hasF4;
}
- (int32_t) f4 {
  return result.f4;
}
- (Operation_Builder*) setF4:(int32_t) value {
  result.hasF4 = YES;
  result.f4 = value;
  return self;
}
- (Operation_Builder*) clearF4 {
  result.hasF4 = NO;
  result.f4 = 0;
  return self;
}
@end

@interface QueryRetrieveRequest ()
@property (retain) Query* query;
@property (retain) RecordZoneIdentifier* zoneIdentifier;
@property (retain) RequestedFields* requestedFields;
@property (retain) UInt32Ex* f6;
@end

@implementation QueryRetrieveRequest

- (BOOL) hasQuery {
  return !!hasQuery_;
}
- (void) setHasQuery:(BOOL) value {
  hasQuery_ = !!value;
}
@synthesize query;
- (BOOL) hasZoneIdentifier {
  return !!hasZoneIdentifier_;
}
- (void) setHasZoneIdentifier:(BOOL) value {
  hasZoneIdentifier_ = !!value;
}
@synthesize zoneIdentifier;
- (BOOL) hasRequestedFields {
  return !!hasRequestedFields_;
}
- (void) setHasRequestedFields:(BOOL) value {
  hasRequestedFields_ = !!value;
}
@synthesize requestedFields;
- (BOOL) hasF6 {
  return !!hasF6_;
}
- (void) setHasF6:(BOOL) value {
  hasF6_ = !!value;
}
@synthesize f6;
- (void) dealloc {
  self.query = nil;
  self.zoneIdentifier = nil;
  self.requestedFields = nil;
  self.f6 = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.query = [Query defaultInstance];
    self.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
    self.requestedFields = [RequestedFields defaultInstance];
    self.f6 = [UInt32Ex defaultInstance];
  }
  return self;
}
static QueryRetrieveRequest* defaultQueryRetrieveRequestInstance = nil;
+ (void) initialize {
  if (self == [QueryRetrieveRequest class]) {
    defaultQueryRetrieveRequestInstance = [[QueryRetrieveRequest alloc] init];
  }
}
+ (QueryRetrieveRequest*) defaultInstance {
  return defaultQueryRetrieveRequestInstance;
}
- (QueryRetrieveRequest*) defaultInstance {
  return defaultQueryRetrieveRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuery) {
    [output writeMessage:1 value:self.query];
  }
  if (self.hasZoneIdentifier) {
    [output writeMessage:4 value:self.zoneIdentifier];
  }
  if (self.hasRequestedFields) {
    [output writeMessage:5 value:self.requestedFields];
  }
  if (self.hasF6) {
    [output writeMessage:6 value:self.f6];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasQuery) {
    size += computeMessageSize(1, self.query);
  }
  if (self.hasZoneIdentifier) {
    size += computeMessageSize(4, self.zoneIdentifier);
  }
  if (self.hasRequestedFields) {
    size += computeMessageSize(5, self.requestedFields);
  }
  if (self.hasF6) {
    size += computeMessageSize(6, self.f6);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QueryRetrieveRequest*) parseFromData:(NSData*) data {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromData:data] build];
}
+ (QueryRetrieveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromInputStream:input] build];
}
+ (QueryRetrieveRequest*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeDelimitedFromInputStream:input] build];
}
+ (QueryRetrieveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (QueryRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequest*)[[[QueryRetrieveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequest_Builder*) builder {
  return [[[QueryRetrieveRequest_Builder alloc] init] autorelease];
}
+ (QueryRetrieveRequest_Builder*) builderWithPrototype:(QueryRetrieveRequest*) prototype {
  return [[QueryRetrieveRequest builder] mergeFrom:prototype];
}
- (QueryRetrieveRequest_Builder*) builder {
  return [QueryRetrieveRequest builder];
}
@end

@interface QueryRetrieveRequest_Builder()
@property (retain) QueryRetrieveRequest* result;
@end

@implementation QueryRetrieveRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryRetrieveRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryRetrieveRequest_Builder*) clear {
  self.result = [[[QueryRetrieveRequest alloc] init] autorelease];
  return self;
}
- (QueryRetrieveRequest_Builder*) clone {
  return [QueryRetrieveRequest builderWithPrototype:result];
}
- (QueryRetrieveRequest*) defaultInstance {
  return [QueryRetrieveRequest defaultInstance];
}
- (QueryRetrieveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryRetrieveRequest*) buildPartial {
  QueryRetrieveRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryRetrieveRequest_Builder*) mergeFrom:(QueryRetrieveRequest*) other {
  if (other == [QueryRetrieveRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuery) {
    [self mergeQuery:other.query];
  }
  if (other.hasZoneIdentifier) {
    [self mergeZoneIdentifier:other.zoneIdentifier];
  }
  if (other.hasRequestedFields) {
    [self mergeRequestedFields:other.requestedFields];
  }
  if (other.hasF6) {
    [self mergeF6:other.f6];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueryRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Query_Builder* subBuilder = [Query builder];
        if (self.hasQuery) {
          [subBuilder mergeFrom:self.query];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQuery:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        RecordZoneIdentifier_Builder* subBuilder = [RecordZoneIdentifier builder];
        if (self.hasZoneIdentifier) {
          [subBuilder mergeFrom:self.zoneIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        RequestedFields_Builder* subBuilder = [RequestedFields builder];
        if (self.hasRequestedFields) {
          [subBuilder mergeFrom:self.requestedFields];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequestedFields:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        UInt32Ex_Builder* subBuilder = [UInt32Ex builder];
        if (self.hasF6) {
          [subBuilder mergeFrom:self.f6];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setF6:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasQuery {
  return result.hasQuery;
}
- (Query*) query {
  return result.query;
}
- (QueryRetrieveRequest_Builder*) setQuery:(Query*) value {
  result.hasQuery = YES;
  result.query = value;
  return self;
}
- (QueryRetrieveRequest_Builder*) setQueryBuilder:(Query_Builder*) builderForValue {
  return [self setQuery:[builderForValue build]];
}
- (QueryRetrieveRequest_Builder*) mergeQuery:(Query*) value {
  if (result.hasQuery &&
      result.query != [Query defaultInstance]) {
    result.query =
      [[[Query builderWithPrototype:result.query] mergeFrom:value] buildPartial];
  } else {
    result.query = value;
  }
  result.hasQuery = YES;
  return self;
}
- (QueryRetrieveRequest_Builder*) clearQuery {
  result.hasQuery = NO;
  result.query = [Query defaultInstance];
  return self;
}
- (BOOL) hasZoneIdentifier {
  return result.hasZoneIdentifier;
}
- (RecordZoneIdentifier*) zoneIdentifier {
  return result.zoneIdentifier;
}
- (QueryRetrieveRequest_Builder*) setZoneIdentifier:(RecordZoneIdentifier*) value {
  result.hasZoneIdentifier = YES;
  result.zoneIdentifier = value;
  return self;
}
- (QueryRetrieveRequest_Builder*) setZoneIdentifierBuilder:(RecordZoneIdentifier_Builder*) builderForValue {
  return [self setZoneIdentifier:[builderForValue build]];
}
- (QueryRetrieveRequest_Builder*) mergeZoneIdentifier:(RecordZoneIdentifier*) value {
  if (result.hasZoneIdentifier &&
      result.zoneIdentifier != [RecordZoneIdentifier defaultInstance]) {
    result.zoneIdentifier =
      [[[RecordZoneIdentifier builderWithPrototype:result.zoneIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.zoneIdentifier = value;
  }
  result.hasZoneIdentifier = YES;
  return self;
}
- (QueryRetrieveRequest_Builder*) clearZoneIdentifier {
  result.hasZoneIdentifier = NO;
  result.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  return self;
}
- (BOOL) hasRequestedFields {
  return result.hasRequestedFields;
}
- (RequestedFields*) requestedFields {
  return result.requestedFields;
}
- (QueryRetrieveRequest_Builder*) setRequestedFields:(RequestedFields*) value {
  result.hasRequestedFields = YES;
  result.requestedFields = value;
  return self;
}
- (QueryRetrieveRequest_Builder*) setRequestedFieldsBuilder:(RequestedFields_Builder*) builderForValue {
  return [self setRequestedFields:[builderForValue build]];
}
- (QueryRetrieveRequest_Builder*) mergeRequestedFields:(RequestedFields*) value {
  if (result.hasRequestedFields &&
      result.requestedFields != [RequestedFields defaultInstance]) {
    result.requestedFields =
      [[[RequestedFields builderWithPrototype:result.requestedFields] mergeFrom:value] buildPartial];
  } else {
    result.requestedFields = value;
  }
  result.hasRequestedFields = YES;
  return self;
}
- (QueryRetrieveRequest_Builder*) clearRequestedFields {
  result.hasRequestedFields = NO;
  result.requestedFields = [RequestedFields defaultInstance];
  return self;
}
- (BOOL) hasF6 {
  return result.hasF6;
}
- (UInt32Ex*) f6 {
  return result.f6;
}
- (QueryRetrieveRequest_Builder*) setF6:(UInt32Ex*) value {
  result.hasF6 = YES;
  result.f6 = value;
  return self;
}
- (QueryRetrieveRequest_Builder*) setF6Builder:(UInt32Ex_Builder*) builderForValue {
  return [self setF6:[builderForValue build]];
}
- (QueryRetrieveRequest_Builder*) mergeF6:(UInt32Ex*) value {
  if (result.hasF6 &&
      result.f6 != [UInt32Ex defaultInstance]) {
    result.f6 =
      [[[UInt32Ex builderWithPrototype:result.f6] mergeFrom:value] buildPartial];
  } else {
    result.f6 = value;
  }
  result.hasF6 = YES;
  return self;
}
- (QueryRetrieveRequest_Builder*) clearF6 {
  result.hasF6 = NO;
  result.f6 = [UInt32Ex defaultInstance];
  return self;
}
@end

@interface QueryRetrieveRequestResponse ()
@property (retain) QueryRetrieveRequestResponseQueryResult* results;
@end

@implementation QueryRetrieveRequestResponse

- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value {
  hasResults_ = !!value;
}
@synthesize results;
- (void) dealloc {
  self.results = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.results = [QueryRetrieveRequestResponseQueryResult defaultInstance];
  }
  return self;
}
static QueryRetrieveRequestResponse* defaultQueryRetrieveRequestResponseInstance = nil;
+ (void) initialize {
  if (self == [QueryRetrieveRequestResponse class]) {
    defaultQueryRetrieveRequestResponseInstance = [[QueryRetrieveRequestResponse alloc] init];
  }
}
+ (QueryRetrieveRequestResponse*) defaultInstance {
  return defaultQueryRetrieveRequestResponseInstance;
}
- (QueryRetrieveRequestResponse*) defaultInstance {
  return defaultQueryRetrieveRequestResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResults) {
    [output writeMessage:1 value:self.results];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResults) {
    size += computeMessageSize(1, self.results);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QueryRetrieveRequestResponse*) parseFromData:(NSData*) data {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromData:data] build];
}
+ (QueryRetrieveRequestResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponse*) parseFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromInputStream:input] build];
}
+ (QueryRetrieveRequestResponse*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeDelimitedFromInputStream:input] build];
}
+ (QueryRetrieveRequestResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromCodedInputStream:input] build];
}
+ (QueryRetrieveRequestResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponse*)[[[QueryRetrieveRequestResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponse_Builder*) builder {
  return [[[QueryRetrieveRequestResponse_Builder alloc] init] autorelease];
}
+ (QueryRetrieveRequestResponse_Builder*) builderWithPrototype:(QueryRetrieveRequestResponse*) prototype {
  return [[QueryRetrieveRequestResponse builder] mergeFrom:prototype];
}
- (QueryRetrieveRequestResponse_Builder*) builder {
  return [QueryRetrieveRequestResponse builder];
}
@end

@interface QueryRetrieveRequestResponse_Builder()
@property (retain) QueryRetrieveRequestResponse* result;
@end

@implementation QueryRetrieveRequestResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryRetrieveRequestResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryRetrieveRequestResponse_Builder*) clear {
  self.result = [[[QueryRetrieveRequestResponse alloc] init] autorelease];
  return self;
}
- (QueryRetrieveRequestResponse_Builder*) clone {
  return [QueryRetrieveRequestResponse builderWithPrototype:result];
}
- (QueryRetrieveRequestResponse*) defaultInstance {
  return [QueryRetrieveRequestResponse defaultInstance];
}
- (QueryRetrieveRequestResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryRetrieveRequestResponse*) buildPartial {
  QueryRetrieveRequestResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryRetrieveRequestResponse_Builder*) mergeFrom:(QueryRetrieveRequestResponse*) other {
  if (other == [QueryRetrieveRequestResponse defaultInstance]) {
    return self;
  }
  if (other.hasResults) {
    [self mergeResults:other.results];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryRetrieveRequestResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueryRetrieveRequestResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        QueryRetrieveRequestResponseQueryResult_Builder* subBuilder = [QueryRetrieveRequestResponseQueryResult builder];
        if (self.hasResults) {
          [subBuilder mergeFrom:self.results];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResults:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (QueryRetrieveRequestResponseQueryResult*) results {
  return result.results;
}
- (QueryRetrieveRequestResponse_Builder*) setResults:(QueryRetrieveRequestResponseQueryResult*) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (QueryRetrieveRequestResponse_Builder*) setResultsBuilder:(QueryRetrieveRequestResponseQueryResult_Builder*) builderForValue {
  return [self setResults:[builderForValue build]];
}
- (QueryRetrieveRequestResponse_Builder*) mergeResults:(QueryRetrieveRequestResponseQueryResult*) value {
  if (result.hasResults &&
      result.results != [QueryRetrieveRequestResponseQueryResult defaultInstance]) {
    result.results =
      [[[QueryRetrieveRequestResponseQueryResult builderWithPrototype:result.results] mergeFrom:value] buildPartial];
  } else {
    result.results = value;
  }
  result.hasResults = YES;
  return self;
}
- (QueryRetrieveRequestResponse_Builder*) clearResults {
  result.hasResults = NO;
  result.results = [QueryRetrieveRequestResponseQueryResult defaultInstance];
  return self;
}
@end

@interface QueryRetrieveRequestResponseQueryResult ()
@property (retain) RecordIdentifier* identifier;
@property int32_t type;
@property (retain) Record* record;
@end

@implementation QueryRetrieveRequestResponseQueryResult

- (BOOL) hasIdentifier {
  return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value {
  hasIdentifier_ = !!value;
}
@synthesize identifier;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasRecord {
  return !!hasRecord_;
}
- (void) setHasRecord:(BOOL) value {
  hasRecord_ = !!value;
}
@synthesize record;
- (void) dealloc {
  self.identifier = nil;
  self.record = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.identifier = [RecordIdentifier defaultInstance];
    self.type = 0;
    self.record = [Record defaultInstance];
  }
  return self;
}
static QueryRetrieveRequestResponseQueryResult* defaultQueryRetrieveRequestResponseQueryResultInstance = nil;
+ (void) initialize {
  if (self == [QueryRetrieveRequestResponseQueryResult class]) {
    defaultQueryRetrieveRequestResponseQueryResultInstance = [[QueryRetrieveRequestResponseQueryResult alloc] init];
  }
}
+ (QueryRetrieveRequestResponseQueryResult*) defaultInstance {
  return defaultQueryRetrieveRequestResponseQueryResultInstance;
}
- (QueryRetrieveRequestResponseQueryResult*) defaultInstance {
  return defaultQueryRetrieveRequestResponseQueryResultInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIdentifier) {
    [output writeMessage:1 value:self.identifier];
  }
  if (self.hasType) {
    [output writeUInt32:3 value:self.type];
  }
  if (self.hasRecord) {
    [output writeMessage:4 value:self.record];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIdentifier) {
    size += computeMessageSize(1, self.identifier);
  }
  if (self.hasType) {
    size += computeUInt32Size(3, self.type);
  }
  if (self.hasRecord) {
    size += computeMessageSize(4, self.record);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromData:(NSData*) data {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromData:data] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromInputStream:input] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeDelimitedFromInputStream:input] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromCodedInputStream:input] build];
}
+ (QueryRetrieveRequestResponseQueryResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryRetrieveRequestResponseQueryResult*)[[[QueryRetrieveRequestResponseQueryResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryRetrieveRequestResponseQueryResult_Builder*) builder {
  return [[[QueryRetrieveRequestResponseQueryResult_Builder alloc] init] autorelease];
}
+ (QueryRetrieveRequestResponseQueryResult_Builder*) builderWithPrototype:(QueryRetrieveRequestResponseQueryResult*) prototype {
  return [[QueryRetrieveRequestResponseQueryResult builder] mergeFrom:prototype];
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) builder {
  return [QueryRetrieveRequestResponseQueryResult builder];
}
@end

@interface QueryRetrieveRequestResponseQueryResult_Builder()
@property (retain) QueryRetrieveRequestResponseQueryResult* result;
@end

@implementation QueryRetrieveRequestResponseQueryResult_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryRetrieveRequestResponseQueryResult alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) clear {
  self.result = [[[QueryRetrieveRequestResponseQueryResult alloc] init] autorelease];
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) clone {
  return [QueryRetrieveRequestResponseQueryResult builderWithPrototype:result];
}
- (QueryRetrieveRequestResponseQueryResult*) defaultInstance {
  return [QueryRetrieveRequestResponseQueryResult defaultInstance];
}
- (QueryRetrieveRequestResponseQueryResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryRetrieveRequestResponseQueryResult*) buildPartial {
  QueryRetrieveRequestResponseQueryResult* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) mergeFrom:(QueryRetrieveRequestResponseQueryResult*) other {
  if (other == [QueryRetrieveRequestResponseQueryResult defaultInstance]) {
    return self;
  }
  if (other.hasIdentifier) {
    [self mergeIdentifier:other.identifier];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasRecord) {
    [self mergeRecord:other.record];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordIdentifier_Builder* subBuilder = [RecordIdentifier builder];
        if (self.hasIdentifier) {
          [subBuilder mergeFrom:self.identifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setType:[input readUInt32]];
        break;
      }
      case 34: {
        Record_Builder* subBuilder = [Record builder];
        if (self.hasRecord) {
          [subBuilder mergeFrom:self.record];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecord:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIdentifier {
  return result.hasIdentifier;
}
- (RecordIdentifier*) identifier {
  return result.identifier;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) setIdentifier:(RecordIdentifier*) value {
  result.hasIdentifier = YES;
  result.identifier = value;
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) setIdentifierBuilder:(RecordIdentifier_Builder*) builderForValue {
  return [self setIdentifier:[builderForValue build]];
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) mergeIdentifier:(RecordIdentifier*) value {
  if (result.hasIdentifier &&
      result.identifier != [RecordIdentifier defaultInstance]) {
    result.identifier =
      [[[RecordIdentifier builderWithPrototype:result.identifier] mergeFrom:value] buildPartial];
  } else {
    result.identifier = value;
  }
  result.hasIdentifier = YES;
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) clearIdentifier {
  result.hasIdentifier = NO;
  result.identifier = [RecordIdentifier defaultInstance];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasRecord {
  return result.hasRecord;
}
- (Record*) record {
  return result.record;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) setRecord:(Record*) value {
  result.hasRecord = YES;
  result.record = value;
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) setRecordBuilder:(Record_Builder*) builderForValue {
  return [self setRecord:[builderForValue build]];
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) mergeRecord:(Record*) value {
  if (result.hasRecord &&
      result.record != [Record defaultInstance]) {
    result.record =
      [[[Record builderWithPrototype:result.record] mergeFrom:value] buildPartial];
  } else {
    result.record = value;
  }
  result.hasRecord = YES;
  return self;
}
- (QueryRetrieveRequestResponseQueryResult_Builder*) clearRecord {
  result.hasRecord = NO;
  result.record = [Record defaultInstance];
  return self;
}
@end

@interface RecordRetrieveRequest ()
@property (retain) RecordIdentifier* recordId;
@property (retain) UInt32Ex* f6;
@end

@implementation RecordRetrieveRequest

- (BOOL) hasRecordId {
  return !!hasRecordId_;
}
- (void) setHasRecordId:(BOOL) value {
  hasRecordId_ = !!value;
}
@synthesize recordId;
- (BOOL) hasF6 {
  return !!hasF6_;
}
- (void) setHasF6:(BOOL) value {
  hasF6_ = !!value;
}
@synthesize f6;
- (void) dealloc {
  self.recordId = nil;
  self.f6 = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recordId = [RecordIdentifier defaultInstance];
    self.f6 = [UInt32Ex defaultInstance];
  }
  return self;
}
static RecordRetrieveRequest* defaultRecordRetrieveRequestInstance = nil;
+ (void) initialize {
  if (self == [RecordRetrieveRequest class]) {
    defaultRecordRetrieveRequestInstance = [[RecordRetrieveRequest alloc] init];
  }
}
+ (RecordRetrieveRequest*) defaultInstance {
  return defaultRecordRetrieveRequestInstance;
}
- (RecordRetrieveRequest*) defaultInstance {
  return defaultRecordRetrieveRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecordId) {
    [output writeMessage:1 value:self.recordId];
  }
  if (self.hasF6) {
    [output writeMessage:6 value:self.f6];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecordId) {
    size += computeMessageSize(1, self.recordId);
  }
  if (self.hasF6) {
    size += computeMessageSize(6, self.f6);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordRetrieveRequest*) parseFromData:(NSData*) data {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromData:data] build];
}
+ (RecordRetrieveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromInputStream:input] build];
}
+ (RecordRetrieveRequest*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordRetrieveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (RecordRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveRequest*)[[[RecordRetrieveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveRequest_Builder*) builder {
  return [[[RecordRetrieveRequest_Builder alloc] init] autorelease];
}
+ (RecordRetrieveRequest_Builder*) builderWithPrototype:(RecordRetrieveRequest*) prototype {
  return [[RecordRetrieveRequest builder] mergeFrom:prototype];
}
- (RecordRetrieveRequest_Builder*) builder {
  return [RecordRetrieveRequest builder];
}
@end

@interface RecordRetrieveRequest_Builder()
@property (retain) RecordRetrieveRequest* result;
@end

@implementation RecordRetrieveRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordRetrieveRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordRetrieveRequest_Builder*) clear {
  self.result = [[[RecordRetrieveRequest alloc] init] autorelease];
  return self;
}
- (RecordRetrieveRequest_Builder*) clone {
  return [RecordRetrieveRequest builderWithPrototype:result];
}
- (RecordRetrieveRequest*) defaultInstance {
  return [RecordRetrieveRequest defaultInstance];
}
- (RecordRetrieveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordRetrieveRequest*) buildPartial {
  RecordRetrieveRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordRetrieveRequest_Builder*) mergeFrom:(RecordRetrieveRequest*) other {
  if (other == [RecordRetrieveRequest defaultInstance]) {
    return self;
  }
  if (other.hasRecordId) {
    [self mergeRecordId:other.recordId];
  }
  if (other.hasF6) {
    [self mergeF6:other.f6];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordIdentifier_Builder* subBuilder = [RecordIdentifier builder];
        if (self.hasRecordId) {
          [subBuilder mergeFrom:self.recordId];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordId:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        UInt32Ex_Builder* subBuilder = [UInt32Ex builder];
        if (self.hasF6) {
          [subBuilder mergeFrom:self.f6];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setF6:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRecordId {
  return result.hasRecordId;
}
- (RecordIdentifier*) recordId {
  return result.recordId;
}
- (RecordRetrieveRequest_Builder*) setRecordId:(RecordIdentifier*) value {
  result.hasRecordId = YES;
  result.recordId = value;
  return self;
}
- (RecordRetrieveRequest_Builder*) setRecordIdBuilder:(RecordIdentifier_Builder*) builderForValue {
  return [self setRecordId:[builderForValue build]];
}
- (RecordRetrieveRequest_Builder*) mergeRecordId:(RecordIdentifier*) value {
  if (result.hasRecordId &&
      result.recordId != [RecordIdentifier defaultInstance]) {
    result.recordId =
      [[[RecordIdentifier builderWithPrototype:result.recordId] mergeFrom:value] buildPartial];
  } else {
    result.recordId = value;
  }
  result.hasRecordId = YES;
  return self;
}
- (RecordRetrieveRequest_Builder*) clearRecordId {
  result.hasRecordId = NO;
  result.recordId = [RecordIdentifier defaultInstance];
  return self;
}
- (BOOL) hasF6 {
  return result.hasF6;
}
- (UInt32Ex*) f6 {
  return result.f6;
}
- (RecordRetrieveRequest_Builder*) setF6:(UInt32Ex*) value {
  result.hasF6 = YES;
  result.f6 = value;
  return self;
}
- (RecordRetrieveRequest_Builder*) setF6Builder:(UInt32Ex_Builder*) builderForValue {
  return [self setF6:[builderForValue build]];
}
- (RecordRetrieveRequest_Builder*) mergeF6:(UInt32Ex*) value {
  if (result.hasF6 &&
      result.f6 != [UInt32Ex defaultInstance]) {
    result.f6 =
      [[[UInt32Ex builderWithPrototype:result.f6] mergeFrom:value] buildPartial];
  } else {
    result.f6 = value;
  }
  result.hasF6 = YES;
  return self;
}
- (RecordRetrieveRequest_Builder*) clearF6 {
  result.hasF6 = NO;
  result.f6 = [UInt32Ex defaultInstance];
  return self;
}
@end

@interface RecordRetrieveResponse ()
@property (retain) Record* record;
@property BOOL clientVersionEtagMatch;
@end

@implementation RecordRetrieveResponse

- (BOOL) hasRecord {
  return !!hasRecord_;
}
- (void) setHasRecord:(BOOL) value {
  hasRecord_ = !!value;
}
@synthesize record;
- (BOOL) hasClientVersionEtagMatch {
  return !!hasClientVersionEtagMatch_;
}
- (void) setHasClientVersionEtagMatch:(BOOL) value {
  hasClientVersionEtagMatch_ = !!value;
}
- (BOOL) clientVersionEtagMatch {
  return !!clientVersionEtagMatch_;
}
- (void) setClientVersionEtagMatch:(BOOL) value {
  clientVersionEtagMatch_ = !!value;
}
- (void) dealloc {
  self.record = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.record = [Record defaultInstance];
    self.clientVersionEtagMatch = NO;
  }
  return self;
}
static RecordRetrieveResponse* defaultRecordRetrieveResponseInstance = nil;
+ (void) initialize {
  if (self == [RecordRetrieveResponse class]) {
    defaultRecordRetrieveResponseInstance = [[RecordRetrieveResponse alloc] init];
  }
}
+ (RecordRetrieveResponse*) defaultInstance {
  return defaultRecordRetrieveResponseInstance;
}
- (RecordRetrieveResponse*) defaultInstance {
  return defaultRecordRetrieveResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecord) {
    [output writeMessage:1 value:self.record];
  }
  if (self.hasClientVersionEtagMatch) {
    [output writeBool:2 value:self.clientVersionEtagMatch];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecord) {
    size += computeMessageSize(1, self.record);
  }
  if (self.hasClientVersionEtagMatch) {
    size += computeBoolSize(2, self.clientVersionEtagMatch);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordRetrieveResponse*) parseFromData:(NSData*) data {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromData:data] build];
}
+ (RecordRetrieveResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveResponse*) parseFromInputStream:(NSInputStream*) input {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromInputStream:input] build];
}
+ (RecordRetrieveResponse*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordRetrieveResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromCodedInputStream:input] build];
}
+ (RecordRetrieveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordRetrieveResponse*)[[[RecordRetrieveResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordRetrieveResponse_Builder*) builder {
  return [[[RecordRetrieveResponse_Builder alloc] init] autorelease];
}
+ (RecordRetrieveResponse_Builder*) builderWithPrototype:(RecordRetrieveResponse*) prototype {
  return [[RecordRetrieveResponse builder] mergeFrom:prototype];
}
- (RecordRetrieveResponse_Builder*) builder {
  return [RecordRetrieveResponse builder];
}
@end

@interface RecordRetrieveResponse_Builder()
@property (retain) RecordRetrieveResponse* result;
@end

@implementation RecordRetrieveResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordRetrieveResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordRetrieveResponse_Builder*) clear {
  self.result = [[[RecordRetrieveResponse alloc] init] autorelease];
  return self;
}
- (RecordRetrieveResponse_Builder*) clone {
  return [RecordRetrieveResponse builderWithPrototype:result];
}
- (RecordRetrieveResponse*) defaultInstance {
  return [RecordRetrieveResponse defaultInstance];
}
- (RecordRetrieveResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordRetrieveResponse*) buildPartial {
  RecordRetrieveResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordRetrieveResponse_Builder*) mergeFrom:(RecordRetrieveResponse*) other {
  if (other == [RecordRetrieveResponse defaultInstance]) {
    return self;
  }
  if (other.hasRecord) {
    [self mergeRecord:other.record];
  }
  if (other.hasClientVersionEtagMatch) {
    [self setClientVersionEtagMatch:other.clientVersionEtagMatch];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordRetrieveResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordRetrieveResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Record_Builder* subBuilder = [Record builder];
        if (self.hasRecord) {
          [subBuilder mergeFrom:self.record];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecord:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientVersionEtagMatch:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasRecord {
  return result.hasRecord;
}
- (Record*) record {
  return result.record;
}
- (RecordRetrieveResponse_Builder*) setRecord:(Record*) value {
  result.hasRecord = YES;
  result.record = value;
  return self;
}
- (RecordRetrieveResponse_Builder*) setRecordBuilder:(Record_Builder*) builderForValue {
  return [self setRecord:[builderForValue build]];
}
- (RecordRetrieveResponse_Builder*) mergeRecord:(Record*) value {
  if (result.hasRecord &&
      result.record != [Record defaultInstance]) {
    result.record =
      [[[Record builderWithPrototype:result.record] mergeFrom:value] buildPartial];
  } else {
    result.record = value;
  }
  result.hasRecord = YES;
  return self;
}
- (RecordRetrieveResponse_Builder*) clearRecord {
  result.hasRecord = NO;
  result.record = [Record defaultInstance];
  return self;
}
- (BOOL) hasClientVersionEtagMatch {
  return result.hasClientVersionEtagMatch;
}
- (BOOL) clientVersionEtagMatch {
  return result.clientVersionEtagMatch;
}
- (RecordRetrieveResponse_Builder*) setClientVersionEtagMatch:(BOOL) value {
  result.hasClientVersionEtagMatch = YES;
  result.clientVersionEtagMatch = value;
  return self;
}
- (RecordRetrieveResponse_Builder*) clearClientVersionEtagMatch {
  result.hasClientVersionEtagMatch = NO;
  result.clientVersionEtagMatch = NO;
  return self;
}
@end

@interface RequestedFields ()
@property (retain) NSMutableArray* mutableFieldList;
@end

@implementation RequestedFields

@synthesize mutableFieldList;
- (void) dealloc {
  self.mutableFieldList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static RequestedFields* defaultRequestedFieldsInstance = nil;
+ (void) initialize {
  if (self == [RequestedFields class]) {
    defaultRequestedFieldsInstance = [[RequestedFields alloc] init];
  }
}
+ (RequestedFields*) defaultInstance {
  return defaultRequestedFieldsInstance;
}
- (RequestedFields*) defaultInstance {
  return defaultRequestedFieldsInstance;
}
- (NSArray*) fieldList {
  return mutableFieldList;
}
- (NSString*) fieldAtIndex:(int32_t) index {
  id value = [mutableFieldList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSString* element in self.mutableFieldList) {
    [output writeString:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableFieldList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableFieldList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestedFields*) parseFromData:(NSData*) data {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromData:data] build];
}
+ (RequestedFields*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestedFields*) parseFromInputStream:(NSInputStream*) input {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromInputStream:input] build];
}
+ (RequestedFields*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RequestedFields*)[[[RequestedFields builder] mergeDelimitedFromInputStream:input] build];
}
+ (RequestedFields*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestedFields*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromCodedInputStream:input] build];
}
+ (RequestedFields*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestedFields*)[[[RequestedFields builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestedFields_Builder*) builder {
  return [[[RequestedFields_Builder alloc] init] autorelease];
}
+ (RequestedFields_Builder*) builderWithPrototype:(RequestedFields*) prototype {
  return [[RequestedFields builder] mergeFrom:prototype];
}
- (RequestedFields_Builder*) builder {
  return [RequestedFields builder];
}
@end

@interface RequestedFields_Builder()
@property (retain) RequestedFields* result;
@end

@implementation RequestedFields_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestedFields alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestedFields_Builder*) clear {
  self.result = [[[RequestedFields alloc] init] autorelease];
  return self;
}
- (RequestedFields_Builder*) clone {
  return [RequestedFields builderWithPrototype:result];
}
- (RequestedFields*) defaultInstance {
  return [RequestedFields defaultInstance];
}
- (RequestedFields*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestedFields*) buildPartial {
  RequestedFields* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestedFields_Builder*) mergeFrom:(RequestedFields*) other {
  if (other == [RequestedFields defaultInstance]) {
    return self;
  }
  if (other.mutableFieldList.count > 0) {
    if (result.mutableFieldList == nil) {
      result.mutableFieldList = [NSMutableArray array];
    }
    [result.mutableFieldList addObjectsFromArray:other.mutableFieldList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestedFields_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestedFields_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addField:[input readString]];
        break;
      }
    }
  }
}
- (NSArray*) fieldList {
  if (result.mutableFieldList == nil) {
    return [NSArray array];
  }
  return result.mutableFieldList;
}
- (NSString*) fieldAtIndex:(int32_t) index {
  return [result fieldAtIndex:index];
}
- (RequestedFields_Builder*) replaceFieldAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RequestedFields_Builder*) addField:(NSString*) value {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObject:value];
  return self;
}
- (RequestedFields_Builder*) addAllField:(NSArray*) values {
  if (result.mutableFieldList == nil) {
    result.mutableFieldList = [NSMutableArray array];
  }
  [result.mutableFieldList addObjectsFromArray:values];
  return self;
}
- (RequestedFields_Builder*) clearFieldList {
  result.mutableFieldList = nil;
  return self;
}
@end

@interface ResponseOperationResult ()
@property int32_t code;
@property (retain) Error* error;
@end

@implementation ResponseOperationResult

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasError {
  return !!hasError_;
}
- (void) setHasError:(BOOL) value {
  hasError_ = !!value;
}
@synthesize error;
- (void) dealloc {
  self.error = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = 0;
    self.error = [Error defaultInstance];
  }
  return self;
}
static ResponseOperationResult* defaultResponseOperationResultInstance = nil;
+ (void) initialize {
  if (self == [ResponseOperationResult class]) {
    defaultResponseOperationResultInstance = [[ResponseOperationResult alloc] init];
  }
}
+ (ResponseOperationResult*) defaultInstance {
  return defaultResponseOperationResultInstance;
}
- (ResponseOperationResult*) defaultInstance {
  return defaultResponseOperationResultInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeUInt32:1 value:self.code];
  }
  if (self.hasError) {
    [output writeMessage:2 value:self.error];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeUInt32Size(1, self.code);
  }
  if (self.hasError) {
    size += computeMessageSize(2, self.error);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResponseOperationResult*) parseFromData:(NSData*) data {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromData:data] build];
}
+ (ResponseOperationResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperationResult*) parseFromInputStream:(NSInputStream*) input {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromInputStream:input] build];
}
+ (ResponseOperationResult*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeDelimitedFromInputStream:input] build];
}
+ (ResponseOperationResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperationResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromCodedInputStream:input] build];
}
+ (ResponseOperationResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResponseOperationResult*)[[[ResponseOperationResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResponseOperationResult_Builder*) builder {
  return [[[ResponseOperationResult_Builder alloc] init] autorelease];
}
+ (ResponseOperationResult_Builder*) builderWithPrototype:(ResponseOperationResult*) prototype {
  return [[ResponseOperationResult builder] mergeFrom:prototype];
}
- (ResponseOperationResult_Builder*) builder {
  return [ResponseOperationResult builder];
}
@end

@interface ResponseOperationResult_Builder()
@property (retain) ResponseOperationResult* result;
@end

@implementation ResponseOperationResult_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ResponseOperationResult alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResponseOperationResult_Builder*) clear {
  self.result = [[[ResponseOperationResult alloc] init] autorelease];
  return self;
}
- (ResponseOperationResult_Builder*) clone {
  return [ResponseOperationResult builderWithPrototype:result];
}
- (ResponseOperationResult*) defaultInstance {
  return [ResponseOperationResult defaultInstance];
}
- (ResponseOperationResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResponseOperationResult*) buildPartial {
  ResponseOperationResult* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ResponseOperationResult_Builder*) mergeFrom:(ResponseOperationResult*) other {
  if (other == [ResponseOperationResult defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasError) {
    [self mergeError:other.error];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResponseOperationResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResponseOperationResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readUInt32]];
        break;
      }
      case 18: {
        Error_Builder* subBuilder = [Error builder];
        if (self.hasError) {
          [subBuilder mergeFrom:self.error];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setError:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (int32_t) code {
  return result.code;
}
- (ResponseOperationResult_Builder*) setCode:(int32_t) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (ResponseOperationResult_Builder*) clearCode {
  result.hasCode = NO;
  result.code = 0;
  return self;
}
- (BOOL) hasError {
  return result.hasError;
}
- (Error*) error {
  return result.error;
}
- (ResponseOperationResult_Builder*) setError:(Error*) value {
  result.hasError = YES;
  result.error = value;
  return self;
}
- (ResponseOperationResult_Builder*) setErrorBuilder:(Error_Builder*) builderForValue {
  return [self setError:[builderForValue build]];
}
- (ResponseOperationResult_Builder*) mergeError:(Error*) value {
  if (result.hasError &&
      result.error != [Error defaultInstance]) {
    result.error =
      [[[Error builderWithPrototype:result.error] mergeFrom:value] buildPartial];
  } else {
    result.error = value;
  }
  result.hasError = YES;
  return self;
}
- (ResponseOperationResult_Builder*) clearError {
  result.hasError = NO;
  result.error = [Error defaultInstance];
  return self;
}
@end

@interface Error ()
@property (retain) UInt32Ex* code;
@property (retain) NSString* message;
@property (retain) NSString* id;
@end

@implementation Error

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value {
  hasMessage_ = !!value;
}
@synthesize message;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (void) dealloc {
  self.code = nil;
  self.message = nil;
  self.id = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = [UInt32Ex defaultInstance];
    self.message = @"";
    self.id = @"";
  }
  return self;
}
static Error* defaultErrorInstance = nil;
+ (void) initialize {
  if (self == [Error class]) {
    defaultErrorInstance = [[Error alloc] init];
  }
}
+ (Error*) defaultInstance {
  return defaultErrorInstance;
}
- (Error*) defaultInstance {
  return defaultErrorInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeMessage:1 value:self.code];
  }
  if (self.hasMessage) {
    [output writeString:4 value:self.message];
  }
  if (self.hasId) {
    [output writeString:5 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeMessageSize(1, self.code);
  }
  if (self.hasMessage) {
    size += computeStringSize(4, self.message);
  }
  if (self.hasId) {
    size += computeStringSize(5, self.id);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Error*) parseFromData:(NSData*) data {
  return (Error*)[[[Error builder] mergeFromData:data] build];
}
+ (Error*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Error*)[[[Error builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Error*) parseFromInputStream:(NSInputStream*) input {
  return (Error*)[[[Error builder] mergeFromInputStream:input] build];
}
+ (Error*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Error*)[[[Error builder] mergeDelimitedFromInputStream:input] build];
}
+ (Error*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Error*)[[[Error builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Error*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Error*)[[[Error builder] mergeFromCodedInputStream:input] build];
}
+ (Error*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Error*)[[[Error builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Error_Builder*) builder {
  return [[[Error_Builder alloc] init] autorelease];
}
+ (Error_Builder*) builderWithPrototype:(Error*) prototype {
  return [[Error builder] mergeFrom:prototype];
}
- (Error_Builder*) builder {
  return [Error builder];
}
@end

@interface Error_Builder()
@property (retain) Error* result;
@end

@implementation Error_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Error alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Error_Builder*) clear {
  self.result = [[[Error alloc] init] autorelease];
  return self;
}
- (Error_Builder*) clone {
  return [Error builderWithPrototype:result];
}
- (Error*) defaultInstance {
  return [Error defaultInstance];
}
- (Error*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Error*) buildPartial {
  Error* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Error_Builder*) mergeFrom:(Error*) other {
  if (other == [Error defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self mergeCode:other.code];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        UInt32Ex_Builder* subBuilder = [UInt32Ex builder];
        if (self.hasCode) {
          [subBuilder mergeFrom:self.code];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCode:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setMessage:[input readString]];
        break;
      }
      case 42: {
        [self setId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (UInt32Ex*) code {
  return result.code;
}
- (Error_Builder*) setCode:(UInt32Ex*) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (Error_Builder*) setCodeBuilder:(UInt32Ex_Builder*) builderForValue {
  return [self setCode:[builderForValue build]];
}
- (Error_Builder*) mergeCode:(UInt32Ex*) value {
  if (result.hasCode &&
      result.code != [UInt32Ex defaultInstance]) {
    result.code =
      [[[UInt32Ex builderWithPrototype:result.code] mergeFrom:value] buildPartial];
  } else {
    result.code = value;
  }
  result.hasCode = YES;
  return self;
}
- (Error_Builder*) clearCode {
  result.hasCode = NO;
  result.code = [UInt32Ex defaultInstance];
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (Error_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (Error_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (Error_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Error_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
@end

@interface DateStatistics ()
@property (retain) Date* creation;
@property (retain) Date* modification;
@end

@implementation DateStatistics

- (BOOL) hasCreation {
  return !!hasCreation_;
}
- (void) setHasCreation:(BOOL) value {
  hasCreation_ = !!value;
}
@synthesize creation;
- (BOOL) hasModification {
  return !!hasModification_;
}
- (void) setHasModification:(BOOL) value {
  hasModification_ = !!value;
}
@synthesize modification;
- (void) dealloc {
  self.creation = nil;
  self.modification = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.creation = [Date defaultInstance];
    self.modification = [Date defaultInstance];
  }
  return self;
}
static DateStatistics* defaultDateStatisticsInstance = nil;
+ (void) initialize {
  if (self == [DateStatistics class]) {
    defaultDateStatisticsInstance = [[DateStatistics alloc] init];
  }
}
+ (DateStatistics*) defaultInstance {
  return defaultDateStatisticsInstance;
}
- (DateStatistics*) defaultInstance {
  return defaultDateStatisticsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCreation) {
    [output writeMessage:1 value:self.creation];
  }
  if (self.hasModification) {
    [output writeMessage:2 value:self.modification];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCreation) {
    size += computeMessageSize(1, self.creation);
  }
  if (self.hasModification) {
    size += computeMessageSize(2, self.modification);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DateStatistics*) parseFromData:(NSData*) data {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromData:data] build];
}
+ (DateStatistics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DateStatistics*) parseFromInputStream:(NSInputStream*) input {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromInputStream:input] build];
}
+ (DateStatistics*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (DateStatistics*)[[[DateStatistics builder] mergeDelimitedFromInputStream:input] build];
}
+ (DateStatistics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DateStatistics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromCodedInputStream:input] build];
}
+ (DateStatistics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DateStatistics*)[[[DateStatistics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DateStatistics_Builder*) builder {
  return [[[DateStatistics_Builder alloc] init] autorelease];
}
+ (DateStatistics_Builder*) builderWithPrototype:(DateStatistics*) prototype {
  return [[DateStatistics builder] mergeFrom:prototype];
}
- (DateStatistics_Builder*) builder {
  return [DateStatistics builder];
}
@end

@interface DateStatistics_Builder()
@property (retain) DateStatistics* result;
@end

@implementation DateStatistics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DateStatistics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DateStatistics_Builder*) clear {
  self.result = [[[DateStatistics alloc] init] autorelease];
  return self;
}
- (DateStatistics_Builder*) clone {
  return [DateStatistics builderWithPrototype:result];
}
- (DateStatistics*) defaultInstance {
  return [DateStatistics defaultInstance];
}
- (DateStatistics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DateStatistics*) buildPartial {
  DateStatistics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DateStatistics_Builder*) mergeFrom:(DateStatistics*) other {
  if (other == [DateStatistics defaultInstance]) {
    return self;
  }
  if (other.hasCreation) {
    [self mergeCreation:other.creation];
  }
  if (other.hasModification) {
    [self mergeModification:other.modification];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DateStatistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DateStatistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Date_Builder* subBuilder = [Date builder];
        if (self.hasCreation) {
          [subBuilder mergeFrom:self.creation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreation:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Date_Builder* subBuilder = [Date builder];
        if (self.hasModification) {
          [subBuilder mergeFrom:self.modification];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setModification:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCreation {
  return result.hasCreation;
}
- (Date*) creation {
  return result.creation;
}
- (DateStatistics_Builder*) setCreation:(Date*) value {
  result.hasCreation = YES;
  result.creation = value;
  return self;
}
- (DateStatistics_Builder*) setCreationBuilder:(Date_Builder*) builderForValue {
  return [self setCreation:[builderForValue build]];
}
- (DateStatistics_Builder*) mergeCreation:(Date*) value {
  if (result.hasCreation &&
      result.creation != [Date defaultInstance]) {
    result.creation =
      [[[Date builderWithPrototype:result.creation] mergeFrom:value] buildPartial];
  } else {
    result.creation = value;
  }
  result.hasCreation = YES;
  return self;
}
- (DateStatistics_Builder*) clearCreation {
  result.hasCreation = NO;
  result.creation = [Date defaultInstance];
  return self;
}
- (BOOL) hasModification {
  return result.hasModification;
}
- (Date*) modification {
  return result.modification;
}
- (DateStatistics_Builder*) setModification:(Date*) value {
  result.hasModification = YES;
  result.modification = value;
  return self;
}
- (DateStatistics_Builder*) setModificationBuilder:(Date_Builder*) builderForValue {
  return [self setModification:[builderForValue build]];
}
- (DateStatistics_Builder*) mergeModification:(Date*) value {
  if (result.hasModification &&
      result.modification != [Date defaultInstance]) {
    result.modification =
      [[[Date builderWithPrototype:result.modification] mergeFrom:value] buildPartial];
  } else {
    result.modification = value;
  }
  result.hasModification = YES;
  return self;
}
- (DateStatistics_Builder*) clearModification {
  result.hasModification = NO;
  result.modification = [Date defaultInstance];
  return self;
}
@end

@interface Date ()
@property Float64 time;
@end

@implementation Date

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) value {
  hasTime_ = !!value;
}
@synthesize time;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.time = 0;
  }
  return self;
}
static Date* defaultDateInstance = nil;
+ (void) initialize {
  if (self == [Date class]) {
    defaultDateInstance = [[Date alloc] init];
  }
}
+ (Date*) defaultInstance {
  return defaultDateInstance;
}
- (Date*) defaultInstance {
  return defaultDateInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeDouble:1 value:self.time];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTime) {
    size += computeDoubleSize(1, self.time);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Date*) parseFromData:(NSData*) data {
  return (Date*)[[[Date builder] mergeFromData:data] build];
}
+ (Date*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Date*)[[[Date builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Date*) parseFromInputStream:(NSInputStream*) input {
  return (Date*)[[[Date builder] mergeFromInputStream:input] build];
}
+ (Date*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Date*)[[[Date builder] mergeDelimitedFromInputStream:input] build];
}
+ (Date*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Date*)[[[Date builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Date*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Date*)[[[Date builder] mergeFromCodedInputStream:input] build];
}
+ (Date*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Date*)[[[Date builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Date_Builder*) builder {
  return [[[Date_Builder alloc] init] autorelease];
}
+ (Date_Builder*) builderWithPrototype:(Date*) prototype {
  return [[Date builder] mergeFrom:prototype];
}
- (Date_Builder*) builder {
  return [Date builder];
}
@end

@interface Date_Builder()
@property (retain) Date* result;
@end

@implementation Date_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Date alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Date_Builder*) clear {
  self.result = [[[Date alloc] init] autorelease];
  return self;
}
- (Date_Builder*) clone {
  return [Date builderWithPrototype:result];
}
- (Date*) defaultInstance {
  return [Date defaultInstance];
}
- (Date*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Date*) buildPartial {
  Date* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Date_Builder*) mergeFrom:(Date*) other {
  if (other == [Date defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Date_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Date_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setTime:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return result.hasTime;
}
- (Float64) time {
  return result.time;
}
- (Date_Builder*) setTime:(Float64) value {
  result.hasTime = YES;
  result.time = value;
  return self;
}
- (Date_Builder*) clearTime {
  result.hasTime = NO;
  result.time = 0;
  return self;
}
@end

@interface Identifier ()
@property (retain) NSString* name;
@property int32_t type;
@end

@implementation Identifier

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.type = 0;
  }
  return self;
}
static Identifier* defaultIdentifierInstance = nil;
+ (void) initialize {
  if (self == [Identifier class]) {
    defaultIdentifierInstance = [[Identifier alloc] init];
  }
}
+ (Identifier*) defaultInstance {
  return defaultIdentifierInstance;
}
- (Identifier*) defaultInstance {
  return defaultIdentifierInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasType) {
    [output writeUInt32:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasType) {
    size += computeUInt32Size(2, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Identifier*) parseFromData:(NSData*) data {
  return (Identifier*)[[[Identifier builder] mergeFromData:data] build];
}
+ (Identifier*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Identifier*)[[[Identifier builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Identifier*) parseFromInputStream:(NSInputStream*) input {
  return (Identifier*)[[[Identifier builder] mergeFromInputStream:input] build];
}
+ (Identifier*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Identifier*)[[[Identifier builder] mergeDelimitedFromInputStream:input] build];
}
+ (Identifier*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Identifier*)[[[Identifier builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Identifier*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Identifier*)[[[Identifier builder] mergeFromCodedInputStream:input] build];
}
+ (Identifier*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Identifier*)[[[Identifier builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Identifier_Builder*) builder {
  return [[[Identifier_Builder alloc] init] autorelease];
}
+ (Identifier_Builder*) builderWithPrototype:(Identifier*) prototype {
  return [[Identifier builder] mergeFrom:prototype];
}
- (Identifier_Builder*) builder {
  return [Identifier builder];
}
@end

@interface Identifier_Builder()
@property (retain) Identifier* result;
@end

@implementation Identifier_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Identifier alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Identifier_Builder*) clear {
  self.result = [[[Identifier alloc] init] autorelease];
  return self;
}
- (Identifier_Builder*) clone {
  return [Identifier builderWithPrototype:result];
}
- (Identifier*) defaultInstance {
  return [Identifier defaultInstance];
}
- (Identifier*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Identifier*) buildPartial {
  Identifier* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Identifier_Builder*) mergeFrom:(Identifier*) other {
  if (other == [Identifier defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Identifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Identifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Identifier_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Identifier_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (Identifier_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Identifier_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
@end

@interface Locale ()
@property (retain) NSString* languageCode;
@property (retain) NSString* regionCode;
@property (retain) NSMutableArray* mutableEnabledKeyboardList;
@property (retain) NSString* activeKeyboard;
@end

@implementation Locale

- (BOOL) hasLanguageCode {
  return !!hasLanguageCode_;
}
- (void) setHasLanguageCode:(BOOL) value {
  hasLanguageCode_ = !!value;
}
@synthesize languageCode;
- (BOOL) hasRegionCode {
  return !!hasRegionCode_;
}
- (void) setHasRegionCode:(BOOL) value {
  hasRegionCode_ = !!value;
}
@synthesize regionCode;
@synthesize mutableEnabledKeyboardList;
- (BOOL) hasActiveKeyboard {
  return !!hasActiveKeyboard_;
}
- (void) setHasActiveKeyboard:(BOOL) value {
  hasActiveKeyboard_ = !!value;
}
@synthesize activeKeyboard;
- (void) dealloc {
  self.languageCode = nil;
  self.regionCode = nil;
  self.mutableEnabledKeyboardList = nil;
  self.activeKeyboard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.languageCode = @"";
    self.regionCode = @"";
    self.activeKeyboard = @"";
  }
  return self;
}
static Locale* defaultLocaleInstance = nil;
+ (void) initialize {
  if (self == [Locale class]) {
    defaultLocaleInstance = [[Locale alloc] init];
  }
}
+ (Locale*) defaultInstance {
  return defaultLocaleInstance;
}
- (Locale*) defaultInstance {
  return defaultLocaleInstance;
}
- (NSArray*) enabledKeyboardList {
  return mutableEnabledKeyboardList;
}
- (NSString*) enabledKeyboardAtIndex:(int32_t) index {
  id value = [mutableEnabledKeyboardList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLanguageCode) {
    [output writeString:1 value:self.languageCode];
  }
  if (self.hasRegionCode) {
    [output writeString:2 value:self.regionCode];
  }
  for (NSString* element in self.mutableEnabledKeyboardList) {
    [output writeString:3 value:element];
  }
  if (self.hasActiveKeyboard) {
    [output writeString:4 value:self.activeKeyboard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLanguageCode) {
    size += computeStringSize(1, self.languageCode);
  }
  if (self.hasRegionCode) {
    size += computeStringSize(2, self.regionCode);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableEnabledKeyboardList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableEnabledKeyboardList.count;
  }
  if (self.hasActiveKeyboard) {
    size += computeStringSize(4, self.activeKeyboard);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Locale*) parseFromData:(NSData*) data {
  return (Locale*)[[[Locale builder] mergeFromData:data] build];
}
+ (Locale*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Locale*)[[[Locale builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Locale*) parseFromInputStream:(NSInputStream*) input {
  return (Locale*)[[[Locale builder] mergeFromInputStream:input] build];
}
+ (Locale*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Locale*)[[[Locale builder] mergeDelimitedFromInputStream:input] build];
}
+ (Locale*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Locale*)[[[Locale builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Locale*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Locale*)[[[Locale builder] mergeFromCodedInputStream:input] build];
}
+ (Locale*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Locale*)[[[Locale builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Locale_Builder*) builder {
  return [[[Locale_Builder alloc] init] autorelease];
}
+ (Locale_Builder*) builderWithPrototype:(Locale*) prototype {
  return [[Locale builder] mergeFrom:prototype];
}
- (Locale_Builder*) builder {
  return [Locale builder];
}
@end

@interface Locale_Builder()
@property (retain) Locale* result;
@end

@implementation Locale_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Locale alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Locale_Builder*) clear {
  self.result = [[[Locale alloc] init] autorelease];
  return self;
}
- (Locale_Builder*) clone {
  return [Locale builderWithPrototype:result];
}
- (Locale*) defaultInstance {
  return [Locale defaultInstance];
}
- (Locale*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Locale*) buildPartial {
  Locale* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Locale_Builder*) mergeFrom:(Locale*) other {
  if (other == [Locale defaultInstance]) {
    return self;
  }
  if (other.hasLanguageCode) {
    [self setLanguageCode:other.languageCode];
  }
  if (other.hasRegionCode) {
    [self setRegionCode:other.regionCode];
  }
  if (other.mutableEnabledKeyboardList.count > 0) {
    if (result.mutableEnabledKeyboardList == nil) {
      result.mutableEnabledKeyboardList = [NSMutableArray array];
    }
    [result.mutableEnabledKeyboardList addObjectsFromArray:other.mutableEnabledKeyboardList];
  }
  if (other.hasActiveKeyboard) {
    [self setActiveKeyboard:other.activeKeyboard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Locale_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Locale_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setLanguageCode:[input readString]];
        break;
      }
      case 18: {
        [self setRegionCode:[input readString]];
        break;
      }
      case 26: {
        [self addEnabledKeyboard:[input readString]];
        break;
      }
      case 34: {
        [self setActiveKeyboard:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLanguageCode {
  return result.hasLanguageCode;
}
- (NSString*) languageCode {
  return result.languageCode;
}
- (Locale_Builder*) setLanguageCode:(NSString*) value {
  result.hasLanguageCode = YES;
  result.languageCode = value;
  return self;
}
- (Locale_Builder*) clearLanguageCode {
  result.hasLanguageCode = NO;
  result.languageCode = @"";
  return self;
}
- (BOOL) hasRegionCode {
  return result.hasRegionCode;
}
- (NSString*) regionCode {
  return result.regionCode;
}
- (Locale_Builder*) setRegionCode:(NSString*) value {
  result.hasRegionCode = YES;
  result.regionCode = value;
  return self;
}
- (Locale_Builder*) clearRegionCode {
  result.hasRegionCode = NO;
  result.regionCode = @"";
  return self;
}
- (NSArray*) enabledKeyboardList {
  if (result.mutableEnabledKeyboardList == nil) {
    return [NSArray array];
  }
  return result.mutableEnabledKeyboardList;
}
- (NSString*) enabledKeyboardAtIndex:(int32_t) index {
  return [result enabledKeyboardAtIndex:index];
}
- (Locale_Builder*) replaceEnabledKeyboardAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableEnabledKeyboardList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Locale_Builder*) addEnabledKeyboard:(NSString*) value {
  if (result.mutableEnabledKeyboardList == nil) {
    result.mutableEnabledKeyboardList = [NSMutableArray array];
  }
  [result.mutableEnabledKeyboardList addObject:value];
  return self;
}
- (Locale_Builder*) addAllEnabledKeyboard:(NSArray*) values {
  if (result.mutableEnabledKeyboardList == nil) {
    result.mutableEnabledKeyboardList = [NSMutableArray array];
  }
  [result.mutableEnabledKeyboardList addObjectsFromArray:values];
  return self;
}
- (Locale_Builder*) clearEnabledKeyboardList {
  result.mutableEnabledKeyboardList = nil;
  return self;
}
- (BOOL) hasActiveKeyboard {
  return result.hasActiveKeyboard;
}
- (NSString*) activeKeyboard {
  return result.activeKeyboard;
}
- (Locale_Builder*) setActiveKeyboard:(NSString*) value {
  result.hasActiveKeyboard = YES;
  result.activeKeyboard = value;
  return self;
}
- (Locale_Builder*) clearActiveKeyboard {
  result.hasActiveKeyboard = NO;
  result.activeKeyboard = @"";
  return self;
}
@end

@interface ProtectionInfo ()
@property (retain) NSData* protectionInfo;
@property (retain) NSString* protectionInfoTag;
@end

@implementation ProtectionInfo

- (BOOL) hasProtectionInfo {
  return !!hasProtectionInfo_;
}
- (void) setHasProtectionInfo:(BOOL) value {
  hasProtectionInfo_ = !!value;
}
@synthesize protectionInfo;
- (BOOL) hasProtectionInfoTag {
  return !!hasProtectionInfoTag_;
}
- (void) setHasProtectionInfoTag:(BOOL) value {
  hasProtectionInfoTag_ = !!value;
}
@synthesize protectionInfoTag;
- (void) dealloc {
  self.protectionInfo = nil;
  self.protectionInfoTag = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.protectionInfo = [NSData data];
    self.protectionInfoTag = @"";
  }
  return self;
}
static ProtectionInfo* defaultProtectionInfoInstance = nil;
+ (void) initialize {
  if (self == [ProtectionInfo class]) {
    defaultProtectionInfoInstance = [[ProtectionInfo alloc] init];
  }
}
+ (ProtectionInfo*) defaultInstance {
  return defaultProtectionInfoInstance;
}
- (ProtectionInfo*) defaultInstance {
  return defaultProtectionInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProtectionInfo) {
    [output writeData:1 value:self.protectionInfo];
  }
  if (self.hasProtectionInfoTag) {
    [output writeString:2 value:self.protectionInfoTag];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasProtectionInfo) {
    size += computeDataSize(1, self.protectionInfo);
  }
  if (self.hasProtectionInfoTag) {
    size += computeStringSize(2, self.protectionInfoTag);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProtectionInfo*) parseFromData:(NSData*) data {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromData:data] build];
}
+ (ProtectionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtectionInfo*) parseFromInputStream:(NSInputStream*) input {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromInputStream:input] build];
}
+ (ProtectionInfo*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeDelimitedFromInputStream:input] build];
}
+ (ProtectionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtectionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromCodedInputStream:input] build];
}
+ (ProtectionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtectionInfo*)[[[ProtectionInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtectionInfo_Builder*) builder {
  return [[[ProtectionInfo_Builder alloc] init] autorelease];
}
+ (ProtectionInfo_Builder*) builderWithPrototype:(ProtectionInfo*) prototype {
  return [[ProtectionInfo builder] mergeFrom:prototype];
}
- (ProtectionInfo_Builder*) builder {
  return [ProtectionInfo builder];
}
@end

@interface ProtectionInfo_Builder()
@property (retain) ProtectionInfo* result;
@end

@implementation ProtectionInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProtectionInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProtectionInfo_Builder*) clear {
  self.result = [[[ProtectionInfo alloc] init] autorelease];
  return self;
}
- (ProtectionInfo_Builder*) clone {
  return [ProtectionInfo builderWithPrototype:result];
}
- (ProtectionInfo*) defaultInstance {
  return [ProtectionInfo defaultInstance];
}
- (ProtectionInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtectionInfo*) buildPartial {
  ProtectionInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProtectionInfo_Builder*) mergeFrom:(ProtectionInfo*) other {
  if (other == [ProtectionInfo defaultInstance]) {
    return self;
  }
  if (other.hasProtectionInfo) {
    [self setProtectionInfo:other.protectionInfo];
  }
  if (other.hasProtectionInfoTag) {
    [self setProtectionInfoTag:other.protectionInfoTag];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtectionInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtectionInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setProtectionInfo:[input readData]];
        break;
      }
      case 18: {
        [self setProtectionInfoTag:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasProtectionInfo {
  return result.hasProtectionInfo;
}
- (NSData*) protectionInfo {
  return result.protectionInfo;
}
- (ProtectionInfo_Builder*) setProtectionInfo:(NSData*) value {
  result.hasProtectionInfo = YES;
  result.protectionInfo = value;
  return self;
}
- (ProtectionInfo_Builder*) clearProtectionInfo {
  result.hasProtectionInfo = NO;
  result.protectionInfo = [NSData data];
  return self;
}
- (BOOL) hasProtectionInfoTag {
  return result.hasProtectionInfoTag;
}
- (NSString*) protectionInfoTag {
  return result.protectionInfoTag;
}
- (ProtectionInfo_Builder*) setProtectionInfoTag:(NSString*) value {
  result.hasProtectionInfoTag = YES;
  result.protectionInfoTag = value;
  return self;
}
- (ProtectionInfo_Builder*) clearProtectionInfoTag {
  result.hasProtectionInfoTag = NO;
  result.protectionInfoTag = @"";
  return self;
}
@end

@interface Query ()
@property (retain) NSMutableArray* mutableTypeList;
@property (retain) NSMutableArray* mutableFilterList;
@property int32_t queryOperator;
@end

@implementation Query

@synthesize mutableTypeList;
@synthesize mutableFilterList;
- (BOOL) hasQueryOperator {
  return !!hasQueryOperator_;
}
- (void) setHasQueryOperator:(BOOL) value {
  hasQueryOperator_ = !!value;
}
@synthesize queryOperator;
- (void) dealloc {
  self.mutableTypeList = nil;
  self.mutableFilterList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.queryOperator = 0;
  }
  return self;
}
static Query* defaultQueryInstance = nil;
+ (void) initialize {
  if (self == [Query class]) {
    defaultQueryInstance = [[Query alloc] init];
  }
}
+ (Query*) defaultInstance {
  return defaultQueryInstance;
}
- (Query*) defaultInstance {
  return defaultQueryInstance;
}
- (NSArray*) typeList {
  return mutableTypeList;
}
- (RecordType*) typeAtIndex:(int32_t) index {
  id value = [mutableTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) filterList {
  return mutableFilterList;
}
- (QueryFilter*) filterAtIndex:(int32_t) index {
  id value = [mutableFilterList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (RecordType* element in self.typeList) {
    [output writeMessage:1 value:element];
  }
  for (QueryFilter* element in self.filterList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasQueryOperator) {
    [output writeUInt32:4 value:self.queryOperator];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (RecordType* element in self.typeList) {
    size += computeMessageSize(1, element);
  }
  for (QueryFilter* element in self.filterList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasQueryOperator) {
    size += computeUInt32Size(4, self.queryOperator);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Query*) parseFromData:(NSData*) data {
  return (Query*)[[[Query builder] mergeFromData:data] build];
}
+ (Query*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Query*)[[[Query builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Query*) parseFromInputStream:(NSInputStream*) input {
  return (Query*)[[[Query builder] mergeFromInputStream:input] build];
}
+ (Query*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Query*)[[[Query builder] mergeDelimitedFromInputStream:input] build];
}
+ (Query*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Query*)[[[Query builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Query*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Query*)[[[Query builder] mergeFromCodedInputStream:input] build];
}
+ (Query*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Query*)[[[Query builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Query_Builder*) builder {
  return [[[Query_Builder alloc] init] autorelease];
}
+ (Query_Builder*) builderWithPrototype:(Query*) prototype {
  return [[Query builder] mergeFrom:prototype];
}
- (Query_Builder*) builder {
  return [Query builder];
}
@end

@interface Query_Builder()
@property (retain) Query* result;
@end

@implementation Query_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Query alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Query_Builder*) clear {
  self.result = [[[Query alloc] init] autorelease];
  return self;
}
- (Query_Builder*) clone {
  return [Query builderWithPrototype:result];
}
- (Query*) defaultInstance {
  return [Query defaultInstance];
}
- (Query*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Query*) buildPartial {
  Query* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Query_Builder*) mergeFrom:(Query*) other {
  if (other == [Query defaultInstance]) {
    return self;
  }
  if (other.mutableTypeList.count > 0) {
    if (result.mutableTypeList == nil) {
      result.mutableTypeList = [NSMutableArray array];
    }
    [result.mutableTypeList addObjectsFromArray:other.mutableTypeList];
  }
  if (other.mutableFilterList.count > 0) {
    if (result.mutableFilterList == nil) {
      result.mutableFilterList = [NSMutableArray array];
    }
    [result.mutableFilterList addObjectsFromArray:other.mutableFilterList];
  }
  if (other.hasQueryOperator) {
    [self setQueryOperator:other.queryOperator];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordType_Builder* subBuilder = [RecordType builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addType:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        QueryFilter_Builder* subBuilder = [QueryFilter builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFilter:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setQueryOperator:[input readUInt32]];
        break;
      }
    }
  }
}
- (NSArray*) typeList {
  if (result.mutableTypeList == nil) { return [NSArray array]; }
  return result.mutableTypeList;
}
- (RecordType*) typeAtIndex:(int32_t) index {
  return [result typeAtIndex:index];
}
- (Query_Builder*) replaceTypeAtIndex:(int32_t) index with:(RecordType*) value {
  [result.mutableTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Query_Builder*) addAllType:(NSArray*) values {
  if (result.mutableTypeList == nil) {
    result.mutableTypeList = [NSMutableArray array];
  }
  [result.mutableTypeList addObjectsFromArray:values];
  return self;
}
- (Query_Builder*) clearTypeList {
  result.mutableTypeList = nil;
  return self;
}
- (Query_Builder*) addType:(RecordType*) value {
  if (result.mutableTypeList == nil) {
    result.mutableTypeList = [NSMutableArray array];
  }
  [result.mutableTypeList addObject:value];
  return self;
}
- (NSArray*) filterList {
  if (result.mutableFilterList == nil) { return [NSArray array]; }
  return result.mutableFilterList;
}
- (QueryFilter*) filterAtIndex:(int32_t) index {
  return [result filterAtIndex:index];
}
- (Query_Builder*) replaceFilterAtIndex:(int32_t) index with:(QueryFilter*) value {
  [result.mutableFilterList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Query_Builder*) addAllFilter:(NSArray*) values {
  if (result.mutableFilterList == nil) {
    result.mutableFilterList = [NSMutableArray array];
  }
  [result.mutableFilterList addObjectsFromArray:values];
  return self;
}
- (Query_Builder*) clearFilterList {
  result.mutableFilterList = nil;
  return self;
}
- (Query_Builder*) addFilter:(QueryFilter*) value {
  if (result.mutableFilterList == nil) {
    result.mutableFilterList = [NSMutableArray array];
  }
  [result.mutableFilterList addObject:value];
  return self;
}
- (BOOL) hasQueryOperator {
  return result.hasQueryOperator;
}
- (int32_t) queryOperator {
  return result.queryOperator;
}
- (Query_Builder*) setQueryOperator:(int32_t) value {
  result.hasQueryOperator = YES;
  result.queryOperator = value;
  return self;
}
- (Query_Builder*) clearQueryOperator {
  result.hasQueryOperator = NO;
  result.queryOperator = 0;
  return self;
}
@end

@interface QueryFilter ()
@property (retain) RecordFieldIdentifier* fieldName;
@property (retain) RecordFieldValue* fieldValue;
@property int32_t type;
@end

@implementation QueryFilter

- (BOOL) hasFieldName {
  return !!hasFieldName_;
}
- (void) setHasFieldName:(BOOL) value {
  hasFieldName_ = !!value;
}
@synthesize fieldName;
- (BOOL) hasFieldValue {
  return !!hasFieldValue_;
}
- (void) setHasFieldValue:(BOOL) value {
  hasFieldValue_ = !!value;
}
@synthesize fieldValue;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.fieldName = nil;
  self.fieldValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fieldName = [RecordFieldIdentifier defaultInstance];
    self.fieldValue = [RecordFieldValue defaultInstance];
    self.type = 0;
  }
  return self;
}
static QueryFilter* defaultQueryFilterInstance = nil;
+ (void) initialize {
  if (self == [QueryFilter class]) {
    defaultQueryFilterInstance = [[QueryFilter alloc] init];
  }
}
+ (QueryFilter*) defaultInstance {
  return defaultQueryFilterInstance;
}
- (QueryFilter*) defaultInstance {
  return defaultQueryFilterInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFieldName) {
    [output writeMessage:1 value:self.fieldName];
  }
  if (self.hasFieldValue) {
    [output writeMessage:2 value:self.fieldValue];
  }
  if (self.hasType) {
    [output writeUInt32:4 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFieldName) {
    size += computeMessageSize(1, self.fieldName);
  }
  if (self.hasFieldValue) {
    size += computeMessageSize(2, self.fieldValue);
  }
  if (self.hasType) {
    size += computeUInt32Size(4, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QueryFilter*) parseFromData:(NSData*) data {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromData:data] build];
}
+ (QueryFilter*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QueryFilter*) parseFromInputStream:(NSInputStream*) input {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromInputStream:input] build];
}
+ (QueryFilter*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (QueryFilter*)[[[QueryFilter builder] mergeDelimitedFromInputStream:input] build];
}
+ (QueryFilter*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryFilter*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromCodedInputStream:input] build];
}
+ (QueryFilter*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QueryFilter*)[[[QueryFilter builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QueryFilter_Builder*) builder {
  return [[[QueryFilter_Builder alloc] init] autorelease];
}
+ (QueryFilter_Builder*) builderWithPrototype:(QueryFilter*) prototype {
  return [[QueryFilter builder] mergeFrom:prototype];
}
- (QueryFilter_Builder*) builder {
  return [QueryFilter builder];
}
@end

@interface QueryFilter_Builder()
@property (retain) QueryFilter* result;
@end

@implementation QueryFilter_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QueryFilter alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QueryFilter_Builder*) clear {
  self.result = [[[QueryFilter alloc] init] autorelease];
  return self;
}
- (QueryFilter_Builder*) clone {
  return [QueryFilter builderWithPrototype:result];
}
- (QueryFilter*) defaultInstance {
  return [QueryFilter defaultInstance];
}
- (QueryFilter*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QueryFilter*) buildPartial {
  QueryFilter* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QueryFilter_Builder*) mergeFrom:(QueryFilter*) other {
  if (other == [QueryFilter defaultInstance]) {
    return self;
  }
  if (other.hasFieldName) {
    [self mergeFieldName:other.fieldName];
  }
  if (other.hasFieldValue) {
    [self mergeFieldValue:other.fieldValue];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QueryFilter_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QueryFilter_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordFieldIdentifier_Builder* subBuilder = [RecordFieldIdentifier builder];
        if (self.hasFieldName) {
          [subBuilder mergeFrom:self.fieldName];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFieldName:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        RecordFieldValue_Builder* subBuilder = [RecordFieldValue builder];
        if (self.hasFieldValue) {
          [subBuilder mergeFrom:self.fieldValue];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFieldValue:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFieldName {
  return result.hasFieldName;
}
- (RecordFieldIdentifier*) fieldName {
  return result.fieldName;
}
- (QueryFilter_Builder*) setFieldName:(RecordFieldIdentifier*) value {
  result.hasFieldName = YES;
  result.fieldName = value;
  return self;
}
- (QueryFilter_Builder*) setFieldNameBuilder:(RecordFieldIdentifier_Builder*) builderForValue {
  return [self setFieldName:[builderForValue build]];
}
- (QueryFilter_Builder*) mergeFieldName:(RecordFieldIdentifier*) value {
  if (result.hasFieldName &&
      result.fieldName != [RecordFieldIdentifier defaultInstance]) {
    result.fieldName =
      [[[RecordFieldIdentifier builderWithPrototype:result.fieldName] mergeFrom:value] buildPartial];
  } else {
    result.fieldName = value;
  }
  result.hasFieldName = YES;
  return self;
}
- (QueryFilter_Builder*) clearFieldName {
  result.hasFieldName = NO;
  result.fieldName = [RecordFieldIdentifier defaultInstance];
  return self;
}
- (BOOL) hasFieldValue {
  return result.hasFieldValue;
}
- (RecordFieldValue*) fieldValue {
  return result.fieldValue;
}
- (QueryFilter_Builder*) setFieldValue:(RecordFieldValue*) value {
  result.hasFieldValue = YES;
  result.fieldValue = value;
  return self;
}
- (QueryFilter_Builder*) setFieldValueBuilder:(RecordFieldValue_Builder*) builderForValue {
  return [self setFieldValue:[builderForValue build]];
}
- (QueryFilter_Builder*) mergeFieldValue:(RecordFieldValue*) value {
  if (result.hasFieldValue &&
      result.fieldValue != [RecordFieldValue defaultInstance]) {
    result.fieldValue =
      [[[RecordFieldValue builderWithPrototype:result.fieldValue] mergeFrom:value] buildPartial];
  } else {
    result.fieldValue = value;
  }
  result.hasFieldValue = YES;
  return self;
}
- (QueryFilter_Builder*) clearFieldValue {
  result.hasFieldValue = NO;
  result.fieldValue = [RecordFieldValue defaultInstance];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (QueryFilter_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (QueryFilter_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
@end

@interface Record ()
@property (retain) NSString* etag;
@property (retain) RecordIdentifier* recordIdentifier;
@property (retain) RecordType* type;
@property (retain) Identifier* createdBy;
@property (retain) DateStatistics* timeStatistics;
@property (retain) NSMutableArray* mutableRecordFieldList;
@property (retain) Identifier* modifiedBy;
@property (retain) NSString* modifiedByDevice;
@property (retain) ProtectionInfo* protectionInfo;
@property int32_t permission;
@end

@implementation Record

- (BOOL) hasEtag {
  return !!hasEtag_;
}
- (void) setHasEtag:(BOOL) value {
  hasEtag_ = !!value;
}
@synthesize etag;
- (BOOL) hasRecordIdentifier {
  return !!hasRecordIdentifier_;
}
- (void) setHasRecordIdentifier:(BOOL) value {
  hasRecordIdentifier_ = !!value;
}
@synthesize recordIdentifier;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCreatedBy {
  return !!hasCreatedBy_;
}
- (void) setHasCreatedBy:(BOOL) value {
  hasCreatedBy_ = !!value;
}
@synthesize createdBy;
- (BOOL) hasTimeStatistics {
  return !!hasTimeStatistics_;
}
- (void) setHasTimeStatistics:(BOOL) value {
  hasTimeStatistics_ = !!value;
}
@synthesize timeStatistics;
@synthesize mutableRecordFieldList;
- (BOOL) hasModifiedBy {
  return !!hasModifiedBy_;
}
- (void) setHasModifiedBy:(BOOL) value {
  hasModifiedBy_ = !!value;
}
@synthesize modifiedBy;
- (BOOL) hasModifiedByDevice {
  return !!hasModifiedByDevice_;
}
- (void) setHasModifiedByDevice:(BOOL) value {
  hasModifiedByDevice_ = !!value;
}
@synthesize modifiedByDevice;
- (BOOL) hasProtectionInfo {
  return !!hasProtectionInfo_;
}
- (void) setHasProtectionInfo:(BOOL) value {
  hasProtectionInfo_ = !!value;
}
@synthesize protectionInfo;
- (BOOL) hasPermission {
  return !!hasPermission_;
}
- (void) setHasPermission:(BOOL) value {
  hasPermission_ = !!value;
}
@synthesize permission;
- (void) dealloc {
  self.etag = nil;
  self.recordIdentifier = nil;
  self.type = nil;
  self.createdBy = nil;
  self.timeStatistics = nil;
  self.mutableRecordFieldList = nil;
  self.modifiedBy = nil;
  self.modifiedByDevice = nil;
  self.protectionInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.etag = @"";
    self.recordIdentifier = [RecordIdentifier defaultInstance];
    self.type = [RecordType defaultInstance];
    self.createdBy = [Identifier defaultInstance];
    self.timeStatistics = [DateStatistics defaultInstance];
    self.modifiedBy = [Identifier defaultInstance];
    self.modifiedByDevice = @"";
    self.protectionInfo = [ProtectionInfo defaultInstance];
    self.permission = 0;
  }
  return self;
}
static Record* defaultRecordInstance = nil;
+ (void) initialize {
  if (self == [Record class]) {
    defaultRecordInstance = [[Record alloc] init];
  }
}
+ (Record*) defaultInstance {
  return defaultRecordInstance;
}
- (Record*) defaultInstance {
  return defaultRecordInstance;
}
- (NSArray*) recordFieldList {
  return mutableRecordFieldList;
}
- (RecordField*) recordFieldAtIndex:(int32_t) index {
  id value = [mutableRecordFieldList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEtag) {
    [output writeString:1 value:self.etag];
  }
  if (self.hasRecordIdentifier) {
    [output writeMessage:2 value:self.recordIdentifier];
  }
  if (self.hasType) {
    [output writeMessage:3 value:self.type];
  }
  if (self.hasCreatedBy) {
    [output writeMessage:4 value:self.createdBy];
  }
  if (self.hasTimeStatistics) {
    [output writeMessage:5 value:self.timeStatistics];
  }
  for (RecordField* element in self.recordFieldList) {
    [output writeMessage:7 value:element];
  }
  if (self.hasModifiedBy) {
    [output writeMessage:9 value:self.modifiedBy];
  }
  if (self.hasModifiedByDevice) {
    [output writeString:11 value:self.modifiedByDevice];
  }
  if (self.hasProtectionInfo) {
    [output writeMessage:13 value:self.protectionInfo];
  }
  if (self.hasPermission) {
    [output writeUInt32:15 value:self.permission];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEtag) {
    size += computeStringSize(1, self.etag);
  }
  if (self.hasRecordIdentifier) {
    size += computeMessageSize(2, self.recordIdentifier);
  }
  if (self.hasType) {
    size += computeMessageSize(3, self.type);
  }
  if (self.hasCreatedBy) {
    size += computeMessageSize(4, self.createdBy);
  }
  if (self.hasTimeStatistics) {
    size += computeMessageSize(5, self.timeStatistics);
  }
  for (RecordField* element in self.recordFieldList) {
    size += computeMessageSize(7, element);
  }
  if (self.hasModifiedBy) {
    size += computeMessageSize(9, self.modifiedBy);
  }
  if (self.hasModifiedByDevice) {
    size += computeStringSize(11, self.modifiedByDevice);
  }
  if (self.hasProtectionInfo) {
    size += computeMessageSize(13, self.protectionInfo);
  }
  if (self.hasPermission) {
    size += computeUInt32Size(15, self.permission);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Record*) parseFromData:(NSData*) data {
  return (Record*)[[[Record builder] mergeFromData:data] build];
}
+ (Record*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Record*)[[[Record builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Record*) parseFromInputStream:(NSInputStream*) input {
  return (Record*)[[[Record builder] mergeFromInputStream:input] build];
}
+ (Record*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Record*)[[[Record builder] mergeDelimitedFromInputStream:input] build];
}
+ (Record*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Record*)[[[Record builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Record*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Record*)[[[Record builder] mergeFromCodedInputStream:input] build];
}
+ (Record*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Record*)[[[Record builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Record_Builder*) builder {
  return [[[Record_Builder alloc] init] autorelease];
}
+ (Record_Builder*) builderWithPrototype:(Record*) prototype {
  return [[Record builder] mergeFrom:prototype];
}
- (Record_Builder*) builder {
  return [Record builder];
}
@end

@interface Record_Builder()
@property (retain) Record* result;
@end

@implementation Record_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Record alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Record_Builder*) clear {
  self.result = [[[Record alloc] init] autorelease];
  return self;
}
- (Record_Builder*) clone {
  return [Record builderWithPrototype:result];
}
- (Record*) defaultInstance {
  return [Record defaultInstance];
}
- (Record*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Record*) buildPartial {
  Record* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Record_Builder*) mergeFrom:(Record*) other {
  if (other == [Record defaultInstance]) {
    return self;
  }
  if (other.hasEtag) {
    [self setEtag:other.etag];
  }
  if (other.hasRecordIdentifier) {
    [self mergeRecordIdentifier:other.recordIdentifier];
  }
  if (other.hasType) {
    [self mergeType:other.type];
  }
  if (other.hasCreatedBy) {
    [self mergeCreatedBy:other.createdBy];
  }
  if (other.hasTimeStatistics) {
    [self mergeTimeStatistics:other.timeStatistics];
  }
  if (other.mutableRecordFieldList.count > 0) {
    if (result.mutableRecordFieldList == nil) {
      result.mutableRecordFieldList = [NSMutableArray array];
    }
    [result.mutableRecordFieldList addObjectsFromArray:other.mutableRecordFieldList];
  }
  if (other.hasModifiedBy) {
    [self mergeModifiedBy:other.modifiedBy];
  }
  if (other.hasModifiedByDevice) {
    [self setModifiedByDevice:other.modifiedByDevice];
  }
  if (other.hasProtectionInfo) {
    [self mergeProtectionInfo:other.protectionInfo];
  }
  if (other.hasPermission) {
    [self setPermission:other.permission];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Record_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Record_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setEtag:[input readString]];
        break;
      }
      case 18: {
        RecordIdentifier_Builder* subBuilder = [RecordIdentifier builder];
        if (self.hasRecordIdentifier) {
          [subBuilder mergeFrom:self.recordIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        RecordType_Builder* subBuilder = [RecordType builder];
        if (self.hasType) {
          [subBuilder mergeFrom:self.type];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setType:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasCreatedBy) {
          [subBuilder mergeFrom:self.createdBy];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreatedBy:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        DateStatistics_Builder* subBuilder = [DateStatistics builder];
        if (self.hasTimeStatistics) {
          [subBuilder mergeFrom:self.timeStatistics];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTimeStatistics:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        RecordField_Builder* subBuilder = [RecordField builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecordField:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasModifiedBy) {
          [subBuilder mergeFrom:self.modifiedBy];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setModifiedBy:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        [self setModifiedByDevice:[input readString]];
        break;
      }
      case 106: {
        ProtectionInfo_Builder* subBuilder = [ProtectionInfo builder];
        if (self.hasProtectionInfo) {
          [subBuilder mergeFrom:self.protectionInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProtectionInfo:[subBuilder buildPartial]];
        break;
      }
      case 120: {
        [self setPermission:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasEtag {
  return result.hasEtag;
}
- (NSString*) etag {
  return result.etag;
}
- (Record_Builder*) setEtag:(NSString*) value {
  result.hasEtag = YES;
  result.etag = value;
  return self;
}
- (Record_Builder*) clearEtag {
  result.hasEtag = NO;
  result.etag = @"";
  return self;
}
- (BOOL) hasRecordIdentifier {
  return result.hasRecordIdentifier;
}
- (RecordIdentifier*) recordIdentifier {
  return result.recordIdentifier;
}
- (Record_Builder*) setRecordIdentifier:(RecordIdentifier*) value {
  result.hasRecordIdentifier = YES;
  result.recordIdentifier = value;
  return self;
}
- (Record_Builder*) setRecordIdentifierBuilder:(RecordIdentifier_Builder*) builderForValue {
  return [self setRecordIdentifier:[builderForValue build]];
}
- (Record_Builder*) mergeRecordIdentifier:(RecordIdentifier*) value {
  if (result.hasRecordIdentifier &&
      result.recordIdentifier != [RecordIdentifier defaultInstance]) {
    result.recordIdentifier =
      [[[RecordIdentifier builderWithPrototype:result.recordIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.recordIdentifier = value;
  }
  result.hasRecordIdentifier = YES;
  return self;
}
- (Record_Builder*) clearRecordIdentifier {
  result.hasRecordIdentifier = NO;
  result.recordIdentifier = [RecordIdentifier defaultInstance];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (RecordType*) type {
  return result.type;
}
- (Record_Builder*) setType:(RecordType*) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Record_Builder*) setTypeBuilder:(RecordType_Builder*) builderForValue {
  return [self setType:[builderForValue build]];
}
- (Record_Builder*) mergeType:(RecordType*) value {
  if (result.hasType &&
      result.type != [RecordType defaultInstance]) {
    result.type =
      [[[RecordType builderWithPrototype:result.type] mergeFrom:value] buildPartial];
  } else {
    result.type = value;
  }
  result.hasType = YES;
  return self;
}
- (Record_Builder*) clearType {
  result.hasType = NO;
  result.type = [RecordType defaultInstance];
  return self;
}
- (BOOL) hasCreatedBy {
  return result.hasCreatedBy;
}
- (Identifier*) createdBy {
  return result.createdBy;
}
- (Record_Builder*) setCreatedBy:(Identifier*) value {
  result.hasCreatedBy = YES;
  result.createdBy = value;
  return self;
}
- (Record_Builder*) setCreatedByBuilder:(Identifier_Builder*) builderForValue {
  return [self setCreatedBy:[builderForValue build]];
}
- (Record_Builder*) mergeCreatedBy:(Identifier*) value {
  if (result.hasCreatedBy &&
      result.createdBy != [Identifier defaultInstance]) {
    result.createdBy =
      [[[Identifier builderWithPrototype:result.createdBy] mergeFrom:value] buildPartial];
  } else {
    result.createdBy = value;
  }
  result.hasCreatedBy = YES;
  return self;
}
- (Record_Builder*) clearCreatedBy {
  result.hasCreatedBy = NO;
  result.createdBy = [Identifier defaultInstance];
  return self;
}
- (BOOL) hasTimeStatistics {
  return result.hasTimeStatistics;
}
- (DateStatistics*) timeStatistics {
  return result.timeStatistics;
}
- (Record_Builder*) setTimeStatistics:(DateStatistics*) value {
  result.hasTimeStatistics = YES;
  result.timeStatistics = value;
  return self;
}
- (Record_Builder*) setTimeStatisticsBuilder:(DateStatistics_Builder*) builderForValue {
  return [self setTimeStatistics:[builderForValue build]];
}
- (Record_Builder*) mergeTimeStatistics:(DateStatistics*) value {
  if (result.hasTimeStatistics &&
      result.timeStatistics != [DateStatistics defaultInstance]) {
    result.timeStatistics =
      [[[DateStatistics builderWithPrototype:result.timeStatistics] mergeFrom:value] buildPartial];
  } else {
    result.timeStatistics = value;
  }
  result.hasTimeStatistics = YES;
  return self;
}
- (Record_Builder*) clearTimeStatistics {
  result.hasTimeStatistics = NO;
  result.timeStatistics = [DateStatistics defaultInstance];
  return self;
}
- (NSArray*) recordFieldList {
  if (result.mutableRecordFieldList == nil) { return [NSArray array]; }
  return result.mutableRecordFieldList;
}
- (RecordField*) recordFieldAtIndex:(int32_t) index {
  return [result recordFieldAtIndex:index];
}
- (Record_Builder*) replaceRecordFieldAtIndex:(int32_t) index with:(RecordField*) value {
  [result.mutableRecordFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Record_Builder*) addAllRecordField:(NSArray*) values {
  if (result.mutableRecordFieldList == nil) {
    result.mutableRecordFieldList = [NSMutableArray array];
  }
  [result.mutableRecordFieldList addObjectsFromArray:values];
  return self;
}
- (Record_Builder*) clearRecordFieldList {
  result.mutableRecordFieldList = nil;
  return self;
}
- (Record_Builder*) addRecordField:(RecordField*) value {
  if (result.mutableRecordFieldList == nil) {
    result.mutableRecordFieldList = [NSMutableArray array];
  }
  [result.mutableRecordFieldList addObject:value];
  return self;
}
- (BOOL) hasModifiedBy {
  return result.hasModifiedBy;
}
- (Identifier*) modifiedBy {
  return result.modifiedBy;
}
- (Record_Builder*) setModifiedBy:(Identifier*) value {
  result.hasModifiedBy = YES;
  result.modifiedBy = value;
  return self;
}
- (Record_Builder*) setModifiedByBuilder:(Identifier_Builder*) builderForValue {
  return [self setModifiedBy:[builderForValue build]];
}
- (Record_Builder*) mergeModifiedBy:(Identifier*) value {
  if (result.hasModifiedBy &&
      result.modifiedBy != [Identifier defaultInstance]) {
    result.modifiedBy =
      [[[Identifier builderWithPrototype:result.modifiedBy] mergeFrom:value] buildPartial];
  } else {
    result.modifiedBy = value;
  }
  result.hasModifiedBy = YES;
  return self;
}
- (Record_Builder*) clearModifiedBy {
  result.hasModifiedBy = NO;
  result.modifiedBy = [Identifier defaultInstance];
  return self;
}
- (BOOL) hasModifiedByDevice {
  return result.hasModifiedByDevice;
}
- (NSString*) modifiedByDevice {
  return result.modifiedByDevice;
}
- (Record_Builder*) setModifiedByDevice:(NSString*) value {
  result.hasModifiedByDevice = YES;
  result.modifiedByDevice = value;
  return self;
}
- (Record_Builder*) clearModifiedByDevice {
  result.hasModifiedByDevice = NO;
  result.modifiedByDevice = @"";
  return self;
}
- (BOOL) hasProtectionInfo {
  return result.hasProtectionInfo;
}
- (ProtectionInfo*) protectionInfo {
  return result.protectionInfo;
}
- (Record_Builder*) setProtectionInfo:(ProtectionInfo*) value {
  result.hasProtectionInfo = YES;
  result.protectionInfo = value;
  return self;
}
- (Record_Builder*) setProtectionInfoBuilder:(ProtectionInfo_Builder*) builderForValue {
  return [self setProtectionInfo:[builderForValue build]];
}
- (Record_Builder*) mergeProtectionInfo:(ProtectionInfo*) value {
  if (result.hasProtectionInfo &&
      result.protectionInfo != [ProtectionInfo defaultInstance]) {
    result.protectionInfo =
      [[[ProtectionInfo builderWithPrototype:result.protectionInfo] mergeFrom:value] buildPartial];
  } else {
    result.protectionInfo = value;
  }
  result.hasProtectionInfo = YES;
  return self;
}
- (Record_Builder*) clearProtectionInfo {
  result.hasProtectionInfo = NO;
  result.protectionInfo = [ProtectionInfo defaultInstance];
  return self;
}
- (BOOL) hasPermission {
  return result.hasPermission;
}
- (int32_t) permission {
  return result.permission;
}
- (Record_Builder*) setPermission:(int32_t) value {
  result.hasPermission = YES;
  result.permission = value;
  return self;
}
- (Record_Builder*) clearPermission {
  result.hasPermission = NO;
  result.permission = 0;
  return self;
}
@end

@interface RecordField ()
@property (retain) RecordFieldIdentifier* identifier;
@property (retain) RecordFieldValue* value;
@end

@implementation RecordField

- (BOOL) hasIdentifier {
  return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value {
  hasIdentifier_ = !!value;
}
@synthesize identifier;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  self.identifier = nil;
  self.value = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.identifier = [RecordFieldIdentifier defaultInstance];
    self.value = [RecordFieldValue defaultInstance];
  }
  return self;
}
static RecordField* defaultRecordFieldInstance = nil;
+ (void) initialize {
  if (self == [RecordField class]) {
    defaultRecordFieldInstance = [[RecordField alloc] init];
  }
}
+ (RecordField*) defaultInstance {
  return defaultRecordFieldInstance;
}
- (RecordField*) defaultInstance {
  return defaultRecordFieldInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIdentifier) {
    [output writeMessage:1 value:self.identifier];
  }
  if (self.hasValue) {
    [output writeMessage:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIdentifier) {
    size += computeMessageSize(1, self.identifier);
  }
  if (self.hasValue) {
    size += computeMessageSize(2, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordField*) parseFromData:(NSData*) data {
  return (RecordField*)[[[RecordField builder] mergeFromData:data] build];
}
+ (RecordField*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordField*)[[[RecordField builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordField*) parseFromInputStream:(NSInputStream*) input {
  return (RecordField*)[[[RecordField builder] mergeFromInputStream:input] build];
}
+ (RecordField*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordField*)[[[RecordField builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordField*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordField*)[[[RecordField builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordField*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordField*)[[[RecordField builder] mergeFromCodedInputStream:input] build];
}
+ (RecordField*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordField*)[[[RecordField builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordField_Builder*) builder {
  return [[[RecordField_Builder alloc] init] autorelease];
}
+ (RecordField_Builder*) builderWithPrototype:(RecordField*) prototype {
  return [[RecordField builder] mergeFrom:prototype];
}
- (RecordField_Builder*) builder {
  return [RecordField builder];
}
@end

@interface RecordField_Builder()
@property (retain) RecordField* result;
@end

@implementation RecordField_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordField alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordField_Builder*) clear {
  self.result = [[[RecordField alloc] init] autorelease];
  return self;
}
- (RecordField_Builder*) clone {
  return [RecordField builderWithPrototype:result];
}
- (RecordField*) defaultInstance {
  return [RecordField defaultInstance];
}
- (RecordField*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordField*) buildPartial {
  RecordField* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordField_Builder*) mergeFrom:(RecordField*) other {
  if (other == [RecordField defaultInstance]) {
    return self;
  }
  if (other.hasIdentifier) {
    [self mergeIdentifier:other.identifier];
  }
  if (other.hasValue) {
    [self mergeValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordField_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordField_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordFieldIdentifier_Builder* subBuilder = [RecordFieldIdentifier builder];
        if (self.hasIdentifier) {
          [subBuilder mergeFrom:self.identifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        RecordFieldValue_Builder* subBuilder = [RecordFieldValue builder];
        if (self.hasValue) {
          [subBuilder mergeFrom:self.value];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setValue:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIdentifier {
  return result.hasIdentifier;
}
- (RecordFieldIdentifier*) identifier {
  return result.identifier;
}
- (RecordField_Builder*) setIdentifier:(RecordFieldIdentifier*) value {
  result.hasIdentifier = YES;
  result.identifier = value;
  return self;
}
- (RecordField_Builder*) setIdentifierBuilder:(RecordFieldIdentifier_Builder*) builderForValue {
  return [self setIdentifier:[builderForValue build]];
}
- (RecordField_Builder*) mergeIdentifier:(RecordFieldIdentifier*) value {
  if (result.hasIdentifier &&
      result.identifier != [RecordFieldIdentifier defaultInstance]) {
    result.identifier =
      [[[RecordFieldIdentifier builderWithPrototype:result.identifier] mergeFrom:value] buildPartial];
  } else {
    result.identifier = value;
  }
  result.hasIdentifier = YES;
  return self;
}
- (RecordField_Builder*) clearIdentifier {
  result.hasIdentifier = NO;
  result.identifier = [RecordFieldIdentifier defaultInstance];
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (RecordFieldValue*) value {
  return result.value;
}
- (RecordField_Builder*) setValue:(RecordFieldValue*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (RecordField_Builder*) setValueBuilder:(RecordFieldValue_Builder*) builderForValue {
  return [self setValue:[builderForValue build]];
}
- (RecordField_Builder*) mergeValue:(RecordFieldValue*) value {
  if (result.hasValue &&
      result.value != [RecordFieldValue defaultInstance]) {
    result.value =
      [[[RecordFieldValue builderWithPrototype:result.value] mergeFrom:value] buildPartial];
  } else {
    result.value = value;
  }
  result.hasValue = YES;
  return self;
}
- (RecordField_Builder*) clearValue {
  result.hasValue = NO;
  result.value = [RecordFieldValue defaultInstance];
  return self;
}
@end

@interface RecordReference ()
@property int32_t type;
@property (retain) RecordIdentifier* recordIdentifier;
@end

@implementation RecordReference

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasRecordIdentifier {
  return !!hasRecordIdentifier_;
}
- (void) setHasRecordIdentifier:(BOOL) value {
  hasRecordIdentifier_ = !!value;
}
@synthesize recordIdentifier;
- (void) dealloc {
  self.recordIdentifier = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.recordIdentifier = [RecordIdentifier defaultInstance];
  }
  return self;
}
static RecordReference* defaultRecordReferenceInstance = nil;
+ (void) initialize {
  if (self == [RecordReference class]) {
    defaultRecordReferenceInstance = [[RecordReference alloc] init];
  }
}
+ (RecordReference*) defaultInstance {
  return defaultRecordReferenceInstance;
}
- (RecordReference*) defaultInstance {
  return defaultRecordReferenceInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasRecordIdentifier) {
    [output writeMessage:2 value:self.recordIdentifier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeUInt32Size(1, self.type);
  }
  if (self.hasRecordIdentifier) {
    size += computeMessageSize(2, self.recordIdentifier);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordReference*) parseFromData:(NSData*) data {
  return (RecordReference*)[[[RecordReference builder] mergeFromData:data] build];
}
+ (RecordReference*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordReference*)[[[RecordReference builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordReference*) parseFromInputStream:(NSInputStream*) input {
  return (RecordReference*)[[[RecordReference builder] mergeFromInputStream:input] build];
}
+ (RecordReference*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordReference*)[[[RecordReference builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordReference*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordReference*)[[[RecordReference builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordReference*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordReference*)[[[RecordReference builder] mergeFromCodedInputStream:input] build];
}
+ (RecordReference*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordReference*)[[[RecordReference builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordReference_Builder*) builder {
  return [[[RecordReference_Builder alloc] init] autorelease];
}
+ (RecordReference_Builder*) builderWithPrototype:(RecordReference*) prototype {
  return [[RecordReference builder] mergeFrom:prototype];
}
- (RecordReference_Builder*) builder {
  return [RecordReference builder];
}
@end

@interface RecordReference_Builder()
@property (retain) RecordReference* result;
@end

@implementation RecordReference_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordReference alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordReference_Builder*) clear {
  self.result = [[[RecordReference alloc] init] autorelease];
  return self;
}
- (RecordReference_Builder*) clone {
  return [RecordReference builderWithPrototype:result];
}
- (RecordReference*) defaultInstance {
  return [RecordReference defaultInstance];
}
- (RecordReference*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordReference*) buildPartial {
  RecordReference* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordReference_Builder*) mergeFrom:(RecordReference*) other {
  if (other == [RecordReference defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasRecordIdentifier) {
    [self mergeRecordIdentifier:other.recordIdentifier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordReference_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordReference_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        RecordIdentifier_Builder* subBuilder = [RecordIdentifier builder];
        if (self.hasRecordIdentifier) {
          [subBuilder mergeFrom:self.recordIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordIdentifier:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (RecordReference_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (RecordReference_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasRecordIdentifier {
  return result.hasRecordIdentifier;
}
- (RecordIdentifier*) recordIdentifier {
  return result.recordIdentifier;
}
- (RecordReference_Builder*) setRecordIdentifier:(RecordIdentifier*) value {
  result.hasRecordIdentifier = YES;
  result.recordIdentifier = value;
  return self;
}
- (RecordReference_Builder*) setRecordIdentifierBuilder:(RecordIdentifier_Builder*) builderForValue {
  return [self setRecordIdentifier:[builderForValue build]];
}
- (RecordReference_Builder*) mergeRecordIdentifier:(RecordIdentifier*) value {
  if (result.hasRecordIdentifier &&
      result.recordIdentifier != [RecordIdentifier defaultInstance]) {
    result.recordIdentifier =
      [[[RecordIdentifier builderWithPrototype:result.recordIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.recordIdentifier = value;
  }
  result.hasRecordIdentifier = YES;
  return self;
}
- (RecordReference_Builder*) clearRecordIdentifier {
  result.hasRecordIdentifier = NO;
  result.recordIdentifier = [RecordIdentifier defaultInstance];
  return self;
}
@end

@interface RecordFieldValue ()
@property int32_t type;
@property (retain) NSData* bytesValue;
@property int64_t signedValue;
@property (retain) Date* dateValue;
@property (retain) NSString* stringValue;
@property (retain) RecordReference* referenceValue;
@property (retain) Asset* assetValue;
@property (retain) NSMutableArray* mutableRecordFieldValueList;
@end

@implementation RecordFieldValue

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasBytesValue {
  return !!hasBytesValue_;
}
- (void) setHasBytesValue:(BOOL) value {
  hasBytesValue_ = !!value;
}
@synthesize bytesValue;
- (BOOL) hasSignedValue {
  return !!hasSignedValue_;
}
- (void) setHasSignedValue:(BOOL) value {
  hasSignedValue_ = !!value;
}
@synthesize signedValue;
- (BOOL) hasDateValue {
  return !!hasDateValue_;
}
- (void) setHasDateValue:(BOOL) value {
  hasDateValue_ = !!value;
}
@synthesize dateValue;
- (BOOL) hasStringValue {
  return !!hasStringValue_;
}
- (void) setHasStringValue:(BOOL) value {
  hasStringValue_ = !!value;
}
@synthesize stringValue;
- (BOOL) hasReferenceValue {
  return !!hasReferenceValue_;
}
- (void) setHasReferenceValue:(BOOL) value {
  hasReferenceValue_ = !!value;
}
@synthesize referenceValue;
- (BOOL) hasAssetValue {
  return !!hasAssetValue_;
}
- (void) setHasAssetValue:(BOOL) value {
  hasAssetValue_ = !!value;
}
@synthesize assetValue;
@synthesize mutableRecordFieldValueList;
- (void) dealloc {
  self.bytesValue = nil;
  self.dateValue = nil;
  self.stringValue = nil;
  self.referenceValue = nil;
  self.assetValue = nil;
  self.mutableRecordFieldValueList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.bytesValue = [NSData data];
    self.signedValue = 0L;
    self.dateValue = [Date defaultInstance];
    self.stringValue = @"";
    self.referenceValue = [RecordReference defaultInstance];
    self.assetValue = [Asset defaultInstance];
  }
  return self;
}
static RecordFieldValue* defaultRecordFieldValueInstance = nil;
+ (void) initialize {
  if (self == [RecordFieldValue class]) {
    defaultRecordFieldValueInstance = [[RecordFieldValue alloc] init];
  }
}
+ (RecordFieldValue*) defaultInstance {
  return defaultRecordFieldValueInstance;
}
- (RecordFieldValue*) defaultInstance {
  return defaultRecordFieldValueInstance;
}
- (NSArray*) recordFieldValueList {
  return mutableRecordFieldValueList;
}
- (RecordFieldValue*) recordFieldValueAtIndex:(int32_t) index {
  id value = [mutableRecordFieldValueList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasBytesValue) {
    [output writeData:2 value:self.bytesValue];
  }
  if (self.hasSignedValue) {
    [output writeUInt64:4 value:self.signedValue];
  }
  if (self.hasDateValue) {
    [output writeMessage:6 value:self.dateValue];
  }
  if (self.hasStringValue) {
    [output writeString:7 value:self.stringValue];
  }
  if (self.hasReferenceValue) {
    [output writeMessage:9 value:self.referenceValue];
  }
  if (self.hasAssetValue) {
    [output writeMessage:10 value:self.assetValue];
  }
  for (RecordFieldValue* element in self.recordFieldValueList) {
    [output writeMessage:11 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeUInt32Size(1, self.type);
  }
  if (self.hasBytesValue) {
    size += computeDataSize(2, self.bytesValue);
  }
  if (self.hasSignedValue) {
    size += computeUInt64Size(4, self.signedValue);
  }
  if (self.hasDateValue) {
    size += computeMessageSize(6, self.dateValue);
  }
  if (self.hasStringValue) {
    size += computeStringSize(7, self.stringValue);
  }
  if (self.hasReferenceValue) {
    size += computeMessageSize(9, self.referenceValue);
  }
  if (self.hasAssetValue) {
    size += computeMessageSize(10, self.assetValue);
  }
  for (RecordFieldValue* element in self.recordFieldValueList) {
    size += computeMessageSize(11, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordFieldValue*) parseFromData:(NSData*) data {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromData:data] build];
}
+ (RecordFieldValue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldValue*) parseFromInputStream:(NSInputStream*) input {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromInputStream:input] build];
}
+ (RecordFieldValue*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordFieldValue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldValue*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromCodedInputStream:input] build];
}
+ (RecordFieldValue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldValue*)[[[RecordFieldValue builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldValue_Builder*) builder {
  return [[[RecordFieldValue_Builder alloc] init] autorelease];
}
+ (RecordFieldValue_Builder*) builderWithPrototype:(RecordFieldValue*) prototype {
  return [[RecordFieldValue builder] mergeFrom:prototype];
}
- (RecordFieldValue_Builder*) builder {
  return [RecordFieldValue builder];
}
@end

@interface RecordFieldValue_Builder()
@property (retain) RecordFieldValue* result;
@end

@implementation RecordFieldValue_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordFieldValue alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordFieldValue_Builder*) clear {
  self.result = [[[RecordFieldValue alloc] init] autorelease];
  return self;
}
- (RecordFieldValue_Builder*) clone {
  return [RecordFieldValue builderWithPrototype:result];
}
- (RecordFieldValue*) defaultInstance {
  return [RecordFieldValue defaultInstance];
}
- (RecordFieldValue*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordFieldValue*) buildPartial {
  RecordFieldValue* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordFieldValue_Builder*) mergeFrom:(RecordFieldValue*) other {
  if (other == [RecordFieldValue defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasBytesValue) {
    [self setBytesValue:other.bytesValue];
  }
  if (other.hasSignedValue) {
    [self setSignedValue:other.signedValue];
  }
  if (other.hasDateValue) {
    [self mergeDateValue:other.dateValue];
  }
  if (other.hasStringValue) {
    [self setStringValue:other.stringValue];
  }
  if (other.hasReferenceValue) {
    [self mergeReferenceValue:other.referenceValue];
  }
  if (other.hasAssetValue) {
    [self mergeAssetValue:other.assetValue];
  }
  if (other.mutableRecordFieldValueList.count > 0) {
    if (result.mutableRecordFieldValueList == nil) {
      result.mutableRecordFieldValueList = [NSMutableArray array];
    }
    [result.mutableRecordFieldValueList addObjectsFromArray:other.mutableRecordFieldValueList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordFieldValue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordFieldValue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        [self setBytesValue:[input readData]];
        break;
      }
      case 32: {
        [self setSignedValue:[input readUInt64]];
        break;
      }
      case 50: {
        Date_Builder* subBuilder = [Date builder];
        if (self.hasDateValue) {
          [subBuilder mergeFrom:self.dateValue];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDateValue:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setStringValue:[input readString]];
        break;
      }
      case 74: {
        RecordReference_Builder* subBuilder = [RecordReference builder];
        if (self.hasReferenceValue) {
          [subBuilder mergeFrom:self.referenceValue];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReferenceValue:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        Asset_Builder* subBuilder = [Asset builder];
        if (self.hasAssetValue) {
          [subBuilder mergeFrom:self.assetValue];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAssetValue:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        RecordFieldValue_Builder* subBuilder = [RecordFieldValue builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecordFieldValue:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (RecordFieldValue_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (RecordFieldValue_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasBytesValue {
  return result.hasBytesValue;
}
- (NSData*) bytesValue {
  return result.bytesValue;
}
- (RecordFieldValue_Builder*) setBytesValue:(NSData*) value {
  result.hasBytesValue = YES;
  result.bytesValue = value;
  return self;
}
- (RecordFieldValue_Builder*) clearBytesValue {
  result.hasBytesValue = NO;
  result.bytesValue = [NSData data];
  return self;
}
- (BOOL) hasSignedValue {
  return result.hasSignedValue;
}
- (int64_t) signedValue {
  return result.signedValue;
}
- (RecordFieldValue_Builder*) setSignedValue:(int64_t) value {
  result.hasSignedValue = YES;
  result.signedValue = value;
  return self;
}
- (RecordFieldValue_Builder*) clearSignedValue {
  result.hasSignedValue = NO;
  result.signedValue = 0L;
  return self;
}
- (BOOL) hasDateValue {
  return result.hasDateValue;
}
- (Date*) dateValue {
  return result.dateValue;
}
- (RecordFieldValue_Builder*) setDateValue:(Date*) value {
  result.hasDateValue = YES;
  result.dateValue = value;
  return self;
}
- (RecordFieldValue_Builder*) setDateValueBuilder:(Date_Builder*) builderForValue {
  return [self setDateValue:[builderForValue build]];
}
- (RecordFieldValue_Builder*) mergeDateValue:(Date*) value {
  if (result.hasDateValue &&
      result.dateValue != [Date defaultInstance]) {
    result.dateValue =
      [[[Date builderWithPrototype:result.dateValue] mergeFrom:value] buildPartial];
  } else {
    result.dateValue = value;
  }
  result.hasDateValue = YES;
  return self;
}
- (RecordFieldValue_Builder*) clearDateValue {
  result.hasDateValue = NO;
  result.dateValue = [Date defaultInstance];
  return self;
}
- (BOOL) hasStringValue {
  return result.hasStringValue;
}
- (NSString*) stringValue {
  return result.stringValue;
}
- (RecordFieldValue_Builder*) setStringValue:(NSString*) value {
  result.hasStringValue = YES;
  result.stringValue = value;
  return self;
}
- (RecordFieldValue_Builder*) clearStringValue {
  result.hasStringValue = NO;
  result.stringValue = @"";
  return self;
}
- (BOOL) hasReferenceValue {
  return result.hasReferenceValue;
}
- (RecordReference*) referenceValue {
  return result.referenceValue;
}
- (RecordFieldValue_Builder*) setReferenceValue:(RecordReference*) value {
  result.hasReferenceValue = YES;
  result.referenceValue = value;
  return self;
}
- (RecordFieldValue_Builder*) setReferenceValueBuilder:(RecordReference_Builder*) builderForValue {
  return [self setReferenceValue:[builderForValue build]];
}
- (RecordFieldValue_Builder*) mergeReferenceValue:(RecordReference*) value {
  if (result.hasReferenceValue &&
      result.referenceValue != [RecordReference defaultInstance]) {
    result.referenceValue =
      [[[RecordReference builderWithPrototype:result.referenceValue] mergeFrom:value] buildPartial];
  } else {
    result.referenceValue = value;
  }
  result.hasReferenceValue = YES;
  return self;
}
- (RecordFieldValue_Builder*) clearReferenceValue {
  result.hasReferenceValue = NO;
  result.referenceValue = [RecordReference defaultInstance];
  return self;
}
- (BOOL) hasAssetValue {
  return result.hasAssetValue;
}
- (Asset*) assetValue {
  return result.assetValue;
}
- (RecordFieldValue_Builder*) setAssetValue:(Asset*) value {
  result.hasAssetValue = YES;
  result.assetValue = value;
  return self;
}
- (RecordFieldValue_Builder*) setAssetValueBuilder:(Asset_Builder*) builderForValue {
  return [self setAssetValue:[builderForValue build]];
}
- (RecordFieldValue_Builder*) mergeAssetValue:(Asset*) value {
  if (result.hasAssetValue &&
      result.assetValue != [Asset defaultInstance]) {
    result.assetValue =
      [[[Asset builderWithPrototype:result.assetValue] mergeFrom:value] buildPartial];
  } else {
    result.assetValue = value;
  }
  result.hasAssetValue = YES;
  return self;
}
- (RecordFieldValue_Builder*) clearAssetValue {
  result.hasAssetValue = NO;
  result.assetValue = [Asset defaultInstance];
  return self;
}
- (NSArray*) recordFieldValueList {
  if (result.mutableRecordFieldValueList == nil) { return [NSArray array]; }
  return result.mutableRecordFieldValueList;
}
- (RecordFieldValue*) recordFieldValueAtIndex:(int32_t) index {
  return [result recordFieldValueAtIndex:index];
}
- (RecordFieldValue_Builder*) replaceRecordFieldValueAtIndex:(int32_t) index with:(RecordFieldValue*) value {
  [result.mutableRecordFieldValueList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RecordFieldValue_Builder*) addAllRecordFieldValue:(NSArray*) values {
  if (result.mutableRecordFieldValueList == nil) {
    result.mutableRecordFieldValueList = [NSMutableArray array];
  }
  [result.mutableRecordFieldValueList addObjectsFromArray:values];
  return self;
}
- (RecordFieldValue_Builder*) clearRecordFieldValueList {
  result.mutableRecordFieldValueList = nil;
  return self;
}
- (RecordFieldValue_Builder*) addRecordFieldValue:(RecordFieldValue*) value {
  if (result.mutableRecordFieldValueList == nil) {
    result.mutableRecordFieldValueList = [NSMutableArray array];
  }
  [result.mutableRecordFieldValueList addObject:value];
  return self;
}
@end

@interface RecordType ()
@property (retain) NSString* name;
@end

@implementation RecordType

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
  }
  return self;
}
static RecordType* defaultRecordTypeInstance = nil;
+ (void) initialize {
  if (self == [RecordType class]) {
    defaultRecordTypeInstance = [[RecordType alloc] init];
  }
}
+ (RecordType*) defaultInstance {
  return defaultRecordTypeInstance;
}
- (RecordType*) defaultInstance {
  return defaultRecordTypeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordType*) parseFromData:(NSData*) data {
  return (RecordType*)[[[RecordType builder] mergeFromData:data] build];
}
+ (RecordType*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordType*)[[[RecordType builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordType*) parseFromInputStream:(NSInputStream*) input {
  return (RecordType*)[[[RecordType builder] mergeFromInputStream:input] build];
}
+ (RecordType*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordType*)[[[RecordType builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordType*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordType*)[[[RecordType builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordType*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordType*)[[[RecordType builder] mergeFromCodedInputStream:input] build];
}
+ (RecordType*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordType*)[[[RecordType builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordType_Builder*) builder {
  return [[[RecordType_Builder alloc] init] autorelease];
}
+ (RecordType_Builder*) builderWithPrototype:(RecordType*) prototype {
  return [[RecordType builder] mergeFrom:prototype];
}
- (RecordType_Builder*) builder {
  return [RecordType builder];
}
@end

@interface RecordType_Builder()
@property (retain) RecordType* result;
@end

@implementation RecordType_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordType alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordType_Builder*) clear {
  self.result = [[[RecordType alloc] init] autorelease];
  return self;
}
- (RecordType_Builder*) clone {
  return [RecordType builderWithPrototype:result];
}
- (RecordType*) defaultInstance {
  return [RecordType defaultInstance];
}
- (RecordType*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordType*) buildPartial {
  RecordType* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordType_Builder*) mergeFrom:(RecordType*) other {
  if (other == [RecordType defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordType_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordType_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (RecordType_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (RecordType_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
@end

@interface RecordIdentifier ()
@property (retain) Identifier* value;
@property (retain) RecordZoneIdentifier* zoneIdentifier;
@end

@implementation RecordIdentifier

- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (BOOL) hasZoneIdentifier {
  return !!hasZoneIdentifier_;
}
- (void) setHasZoneIdentifier:(BOOL) value {
  hasZoneIdentifier_ = !!value;
}
@synthesize zoneIdentifier;
- (void) dealloc {
  self.value = nil;
  self.zoneIdentifier = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.value = [Identifier defaultInstance];
    self.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  }
  return self;
}
static RecordIdentifier* defaultRecordIdentifierInstance = nil;
+ (void) initialize {
  if (self == [RecordIdentifier class]) {
    defaultRecordIdentifierInstance = [[RecordIdentifier alloc] init];
  }
}
+ (RecordIdentifier*) defaultInstance {
  return defaultRecordIdentifierInstance;
}
- (RecordIdentifier*) defaultInstance {
  return defaultRecordIdentifierInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasValue) {
    [output writeMessage:1 value:self.value];
  }
  if (self.hasZoneIdentifier) {
    [output writeMessage:2 value:self.zoneIdentifier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasValue) {
    size += computeMessageSize(1, self.value);
  }
  if (self.hasZoneIdentifier) {
    size += computeMessageSize(2, self.zoneIdentifier);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordIdentifier*) parseFromData:(NSData*) data {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromData:data] build];
}
+ (RecordIdentifier*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordIdentifier*) parseFromInputStream:(NSInputStream*) input {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromInputStream:input] build];
}
+ (RecordIdentifier*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordIdentifier*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromCodedInputStream:input] build];
}
+ (RecordIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordIdentifier*)[[[RecordIdentifier builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordIdentifier_Builder*) builder {
  return [[[RecordIdentifier_Builder alloc] init] autorelease];
}
+ (RecordIdentifier_Builder*) builderWithPrototype:(RecordIdentifier*) prototype {
  return [[RecordIdentifier builder] mergeFrom:prototype];
}
- (RecordIdentifier_Builder*) builder {
  return [RecordIdentifier builder];
}
@end

@interface RecordIdentifier_Builder()
@property (retain) RecordIdentifier* result;
@end

@implementation RecordIdentifier_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordIdentifier alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordIdentifier_Builder*) clear {
  self.result = [[[RecordIdentifier alloc] init] autorelease];
  return self;
}
- (RecordIdentifier_Builder*) clone {
  return [RecordIdentifier builderWithPrototype:result];
}
- (RecordIdentifier*) defaultInstance {
  return [RecordIdentifier defaultInstance];
}
- (RecordIdentifier*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordIdentifier*) buildPartial {
  RecordIdentifier* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordIdentifier_Builder*) mergeFrom:(RecordIdentifier*) other {
  if (other == [RecordIdentifier defaultInstance]) {
    return self;
  }
  if (other.hasValue) {
    [self mergeValue:other.value];
  }
  if (other.hasZoneIdentifier) {
    [self mergeZoneIdentifier:other.zoneIdentifier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasValue) {
          [subBuilder mergeFrom:self.value];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setValue:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        RecordZoneIdentifier_Builder* subBuilder = [RecordZoneIdentifier builder];
        if (self.hasZoneIdentifier) {
          [subBuilder mergeFrom:self.zoneIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneIdentifier:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (Identifier*) value {
  return result.value;
}
- (RecordIdentifier_Builder*) setValue:(Identifier*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (RecordIdentifier_Builder*) setValueBuilder:(Identifier_Builder*) builderForValue {
  return [self setValue:[builderForValue build]];
}
- (RecordIdentifier_Builder*) mergeValue:(Identifier*) value {
  if (result.hasValue &&
      result.value != [Identifier defaultInstance]) {
    result.value =
      [[[Identifier builderWithPrototype:result.value] mergeFrom:value] buildPartial];
  } else {
    result.value = value;
  }
  result.hasValue = YES;
  return self;
}
- (RecordIdentifier_Builder*) clearValue {
  result.hasValue = NO;
  result.value = [Identifier defaultInstance];
  return self;
}
- (BOOL) hasZoneIdentifier {
  return result.hasZoneIdentifier;
}
- (RecordZoneIdentifier*) zoneIdentifier {
  return result.zoneIdentifier;
}
- (RecordIdentifier_Builder*) setZoneIdentifier:(RecordZoneIdentifier*) value {
  result.hasZoneIdentifier = YES;
  result.zoneIdentifier = value;
  return self;
}
- (RecordIdentifier_Builder*) setZoneIdentifierBuilder:(RecordZoneIdentifier_Builder*) builderForValue {
  return [self setZoneIdentifier:[builderForValue build]];
}
- (RecordIdentifier_Builder*) mergeZoneIdentifier:(RecordZoneIdentifier*) value {
  if (result.hasZoneIdentifier &&
      result.zoneIdentifier != [RecordZoneIdentifier defaultInstance]) {
    result.zoneIdentifier =
      [[[RecordZoneIdentifier builderWithPrototype:result.zoneIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.zoneIdentifier = value;
  }
  result.hasZoneIdentifier = YES;
  return self;
}
- (RecordIdentifier_Builder*) clearZoneIdentifier {
  result.hasZoneIdentifier = NO;
  result.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  return self;
}
@end

@interface RecordFieldIdentifier ()
@property (retain) NSString* name;
@end

@implementation RecordFieldIdentifier

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
  }
  return self;
}
static RecordFieldIdentifier* defaultRecordFieldIdentifierInstance = nil;
+ (void) initialize {
  if (self == [RecordFieldIdentifier class]) {
    defaultRecordFieldIdentifierInstance = [[RecordFieldIdentifier alloc] init];
  }
}
+ (RecordFieldIdentifier*) defaultInstance {
  return defaultRecordFieldIdentifierInstance;
}
- (RecordFieldIdentifier*) defaultInstance {
  return defaultRecordFieldIdentifierInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordFieldIdentifier*) parseFromData:(NSData*) data {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromData:data] build];
}
+ (RecordFieldIdentifier*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldIdentifier*) parseFromInputStream:(NSInputStream*) input {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromInputStream:input] build];
}
+ (RecordFieldIdentifier*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordFieldIdentifier*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromCodedInputStream:input] build];
}
+ (RecordFieldIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordFieldIdentifier*)[[[RecordFieldIdentifier builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordFieldIdentifier_Builder*) builder {
  return [[[RecordFieldIdentifier_Builder alloc] init] autorelease];
}
+ (RecordFieldIdentifier_Builder*) builderWithPrototype:(RecordFieldIdentifier*) prototype {
  return [[RecordFieldIdentifier builder] mergeFrom:prototype];
}
- (RecordFieldIdentifier_Builder*) builder {
  return [RecordFieldIdentifier builder];
}
@end

@interface RecordFieldIdentifier_Builder()
@property (retain) RecordFieldIdentifier* result;
@end

@implementation RecordFieldIdentifier_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordFieldIdentifier alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordFieldIdentifier_Builder*) clear {
  self.result = [[[RecordFieldIdentifier alloc] init] autorelease];
  return self;
}
- (RecordFieldIdentifier_Builder*) clone {
  return [RecordFieldIdentifier builderWithPrototype:result];
}
- (RecordFieldIdentifier*) defaultInstance {
  return [RecordFieldIdentifier defaultInstance];
}
- (RecordFieldIdentifier*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordFieldIdentifier*) buildPartial {
  RecordFieldIdentifier* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordFieldIdentifier_Builder*) mergeFrom:(RecordFieldIdentifier*) other {
  if (other == [RecordFieldIdentifier defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordFieldIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordFieldIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (RecordFieldIdentifier_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (RecordFieldIdentifier_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
@end

@interface RecordZoneIdentifier ()
@property (retain) Identifier* value;
@property (retain) Identifier* ownerIdentifier;
@end

@implementation RecordZoneIdentifier

- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (BOOL) hasOwnerIdentifier {
  return !!hasOwnerIdentifier_;
}
- (void) setHasOwnerIdentifier:(BOOL) value {
  hasOwnerIdentifier_ = !!value;
}
@synthesize ownerIdentifier;
- (void) dealloc {
  self.value = nil;
  self.ownerIdentifier = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.value = [Identifier defaultInstance];
    self.ownerIdentifier = [Identifier defaultInstance];
  }
  return self;
}
static RecordZoneIdentifier* defaultRecordZoneIdentifierInstance = nil;
+ (void) initialize {
  if (self == [RecordZoneIdentifier class]) {
    defaultRecordZoneIdentifierInstance = [[RecordZoneIdentifier alloc] init];
  }
}
+ (RecordZoneIdentifier*) defaultInstance {
  return defaultRecordZoneIdentifierInstance;
}
- (RecordZoneIdentifier*) defaultInstance {
  return defaultRecordZoneIdentifierInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasValue) {
    [output writeMessage:1 value:self.value];
  }
  if (self.hasOwnerIdentifier) {
    [output writeMessage:2 value:self.ownerIdentifier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasValue) {
    size += computeMessageSize(1, self.value);
  }
  if (self.hasOwnerIdentifier) {
    size += computeMessageSize(2, self.ownerIdentifier);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordZoneIdentifier*) parseFromData:(NSData*) data {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromData:data] build];
}
+ (RecordZoneIdentifier*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordZoneIdentifier*) parseFromInputStream:(NSInputStream*) input {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromInputStream:input] build];
}
+ (RecordZoneIdentifier*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeDelimitedFromInputStream:input] build];
}
+ (RecordZoneIdentifier*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordZoneIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromCodedInputStream:input] build];
}
+ (RecordZoneIdentifier*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordZoneIdentifier*)[[[RecordZoneIdentifier builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordZoneIdentifier_Builder*) builder {
  return [[[RecordZoneIdentifier_Builder alloc] init] autorelease];
}
+ (RecordZoneIdentifier_Builder*) builderWithPrototype:(RecordZoneIdentifier*) prototype {
  return [[RecordZoneIdentifier builder] mergeFrom:prototype];
}
- (RecordZoneIdentifier_Builder*) builder {
  return [RecordZoneIdentifier builder];
}
@end

@interface RecordZoneIdentifier_Builder()
@property (retain) RecordZoneIdentifier* result;
@end

@implementation RecordZoneIdentifier_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordZoneIdentifier alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordZoneIdentifier_Builder*) clear {
  self.result = [[[RecordZoneIdentifier alloc] init] autorelease];
  return self;
}
- (RecordZoneIdentifier_Builder*) clone {
  return [RecordZoneIdentifier builderWithPrototype:result];
}
- (RecordZoneIdentifier*) defaultInstance {
  return [RecordZoneIdentifier defaultInstance];
}
- (RecordZoneIdentifier*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordZoneIdentifier*) buildPartial {
  RecordZoneIdentifier* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordZoneIdentifier_Builder*) mergeFrom:(RecordZoneIdentifier*) other {
  if (other == [RecordZoneIdentifier defaultInstance]) {
    return self;
  }
  if (other.hasValue) {
    [self mergeValue:other.value];
  }
  if (other.hasOwnerIdentifier) {
    [self mergeOwnerIdentifier:other.ownerIdentifier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordZoneIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordZoneIdentifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasValue) {
          [subBuilder mergeFrom:self.value];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setValue:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Identifier_Builder* subBuilder = [Identifier builder];
        if (self.hasOwnerIdentifier) {
          [subBuilder mergeFrom:self.ownerIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOwnerIdentifier:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (Identifier*) value {
  return result.value;
}
- (RecordZoneIdentifier_Builder*) setValue:(Identifier*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (RecordZoneIdentifier_Builder*) setValueBuilder:(Identifier_Builder*) builderForValue {
  return [self setValue:[builderForValue build]];
}
- (RecordZoneIdentifier_Builder*) mergeValue:(Identifier*) value {
  if (result.hasValue &&
      result.value != [Identifier defaultInstance]) {
    result.value =
      [[[Identifier builderWithPrototype:result.value] mergeFrom:value] buildPartial];
  } else {
    result.value = value;
  }
  result.hasValue = YES;
  return self;
}
- (RecordZoneIdentifier_Builder*) clearValue {
  result.hasValue = NO;
  result.value = [Identifier defaultInstance];
  return self;
}
- (BOOL) hasOwnerIdentifier {
  return result.hasOwnerIdentifier;
}
- (Identifier*) ownerIdentifier {
  return result.ownerIdentifier;
}
- (RecordZoneIdentifier_Builder*) setOwnerIdentifier:(Identifier*) value {
  result.hasOwnerIdentifier = YES;
  result.ownerIdentifier = value;
  return self;
}
- (RecordZoneIdentifier_Builder*) setOwnerIdentifierBuilder:(Identifier_Builder*) builderForValue {
  return [self setOwnerIdentifier:[builderForValue build]];
}
- (RecordZoneIdentifier_Builder*) mergeOwnerIdentifier:(Identifier*) value {
  if (result.hasOwnerIdentifier &&
      result.ownerIdentifier != [Identifier defaultInstance]) {
    result.ownerIdentifier =
      [[[Identifier builderWithPrototype:result.ownerIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.ownerIdentifier = value;
  }
  result.hasOwnerIdentifier = YES;
  return self;
}
- (RecordZoneIdentifier_Builder*) clearOwnerIdentifier {
  result.hasOwnerIdentifier = NO;
  result.ownerIdentifier = [Identifier defaultInstance];
  return self;
}
@end

@interface FileTokens ()
@property (retain) NSMutableArray* mutableFileTokensList;
@end

@implementation FileTokens

@synthesize mutableFileTokensList;
- (void) dealloc {
  self.mutableFileTokensList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static FileTokens* defaultFileTokensInstance = nil;
+ (void) initialize {
  if (self == [FileTokens class]) {
    defaultFileTokensInstance = [[FileTokens alloc] init];
  }
}
+ (FileTokens*) defaultInstance {
  return defaultFileTokensInstance;
}
- (FileTokens*) defaultInstance {
  return defaultFileTokensInstance;
}
- (NSArray*) fileTokensList {
  return mutableFileTokensList;
}
- (FileToken*) fileTokensAtIndex:(int32_t) index {
  id value = [mutableFileTokensList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (FileToken* element in self.fileTokensList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (FileToken* element in self.fileTokensList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileTokens*) parseFromData:(NSData*) data {
  return (FileTokens*)[[[FileTokens builder] mergeFromData:data] build];
}
+ (FileTokens*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileTokens*)[[[FileTokens builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileTokens*) parseFromInputStream:(NSInputStream*) input {
  return (FileTokens*)[[[FileTokens builder] mergeFromInputStream:input] build];
}
+ (FileTokens*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (FileTokens*)[[[FileTokens builder] mergeDelimitedFromInputStream:input] build];
}
+ (FileTokens*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileTokens*)[[[FileTokens builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileTokens*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileTokens*)[[[FileTokens builder] mergeFromCodedInputStream:input] build];
}
+ (FileTokens*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileTokens*)[[[FileTokens builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileTokens_Builder*) builder {
  return [[[FileTokens_Builder alloc] init] autorelease];
}
+ (FileTokens_Builder*) builderWithPrototype:(FileTokens*) prototype {
  return [[FileTokens builder] mergeFrom:prototype];
}
- (FileTokens_Builder*) builder {
  return [FileTokens builder];
}
@end

@interface FileTokens_Builder()
@property (retain) FileTokens* result;
@end

@implementation FileTokens_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileTokens alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileTokens_Builder*) clear {
  self.result = [[[FileTokens alloc] init] autorelease];
  return self;
}
- (FileTokens_Builder*) clone {
  return [FileTokens builderWithPrototype:result];
}
- (FileTokens*) defaultInstance {
  return [FileTokens defaultInstance];
}
- (FileTokens*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileTokens*) buildPartial {
  FileTokens* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileTokens_Builder*) mergeFrom:(FileTokens*) other {
  if (other == [FileTokens defaultInstance]) {
    return self;
  }
  if (other.mutableFileTokensList.count > 0) {
    if (result.mutableFileTokensList == nil) {
      result.mutableFileTokensList = [NSMutableArray array];
    }
    [result.mutableFileTokensList addObjectsFromArray:other.mutableFileTokensList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileTokens_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileTokens_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FileToken_Builder* subBuilder = [FileToken builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFileTokens:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) fileTokensList {
  if (result.mutableFileTokensList == nil) { return [NSArray array]; }
  return result.mutableFileTokensList;
}
- (FileToken*) fileTokensAtIndex:(int32_t) index {
  return [result fileTokensAtIndex:index];
}
- (FileTokens_Builder*) replaceFileTokensAtIndex:(int32_t) index with:(FileToken*) value {
  [result.mutableFileTokensList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FileTokens_Builder*) addAllFileTokens:(NSArray*) values {
  if (result.mutableFileTokensList == nil) {
    result.mutableFileTokensList = [NSMutableArray array];
  }
  [result.mutableFileTokensList addObjectsFromArray:values];
  return self;
}
- (FileTokens_Builder*) clearFileTokensList {
  result.mutableFileTokensList = nil;
  return self;
}
- (FileTokens_Builder*) addFileTokens:(FileToken*) value {
  if (result.mutableFileTokensList == nil) {
    result.mutableFileTokensList = [NSMutableArray array];
  }
  [result.mutableFileTokensList addObject:value];
  return self;
}
@end

@interface FileToken ()
@property (retain) NSData* fileChecksum;
@property (retain) NSString* token;
@property int64_t size;
@property (retain) NSData* fileSignature;
@end

@implementation FileToken

- (BOOL) hasFileChecksum {
  return !!hasFileChecksum_;
}
- (void) setHasFileChecksum:(BOOL) value {
  hasFileChecksum_ = !!value;
}
@synthesize fileChecksum;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (BOOL) hasFileSignature {
  return !!hasFileSignature_;
}
- (void) setHasFileSignature:(BOOL) value {
  hasFileSignature_ = !!value;
}
@synthesize fileSignature;
- (void) dealloc {
  self.fileChecksum = nil;
  self.token = nil;
  self.fileSignature = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fileChecksum = [NSData data];
    self.token = @"";
    self.size = 0L;
    self.fileSignature = [NSData data];
  }
  return self;
}
static FileToken* defaultFileTokenInstance = nil;
+ (void) initialize {
  if (self == [FileToken class]) {
    defaultFileTokenInstance = [[FileToken alloc] init];
  }
}
+ (FileToken*) defaultInstance {
  return defaultFileTokenInstance;
}
- (FileToken*) defaultInstance {
  return defaultFileTokenInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileChecksum) {
    [output writeData:1 value:self.fileChecksum];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  if (self.hasSize) {
    [output writeUInt64:3 value:self.size];
  }
  if (self.hasFileSignature) {
    [output writeData:4 value:self.fileSignature];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFileChecksum) {
    size += computeDataSize(1, self.fileChecksum);
  }
  if (self.hasToken) {
    size += computeStringSize(2, self.token);
  }
  if (self.hasSize) {
    size += computeUInt64Size(3, self.size);
  }
  if (self.hasFileSignature) {
    size += computeDataSize(4, self.fileSignature);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileToken*) parseFromData:(NSData*) data {
  return (FileToken*)[[[FileToken builder] mergeFromData:data] build];
}
+ (FileToken*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileToken*)[[[FileToken builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileToken*) parseFromInputStream:(NSInputStream*) input {
  return (FileToken*)[[[FileToken builder] mergeFromInputStream:input] build];
}
+ (FileToken*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (FileToken*)[[[FileToken builder] mergeDelimitedFromInputStream:input] build];
}
+ (FileToken*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileToken*)[[[FileToken builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileToken*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileToken*)[[[FileToken builder] mergeFromCodedInputStream:input] build];
}
+ (FileToken*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileToken*)[[[FileToken builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileToken_Builder*) builder {
  return [[[FileToken_Builder alloc] init] autorelease];
}
+ (FileToken_Builder*) builderWithPrototype:(FileToken*) prototype {
  return [[FileToken builder] mergeFrom:prototype];
}
- (FileToken_Builder*) builder {
  return [FileToken builder];
}
@end

@interface FileToken_Builder()
@property (retain) FileToken* result;
@end

@implementation FileToken_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileToken alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileToken_Builder*) clear {
  self.result = [[[FileToken alloc] init] autorelease];
  return self;
}
- (FileToken_Builder*) clone {
  return [FileToken builderWithPrototype:result];
}
- (FileToken*) defaultInstance {
  return [FileToken defaultInstance];
}
- (FileToken*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileToken*) buildPartial {
  FileToken* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileToken_Builder*) mergeFrom:(FileToken*) other {
  if (other == [FileToken defaultInstance]) {
    return self;
  }
  if (other.hasFileChecksum) {
    [self setFileChecksum:other.fileChecksum];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  if (other.hasFileSignature) {
    [self setFileSignature:other.fileSignature];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileToken_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileToken_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFileChecksum:[input readData]];
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
      case 24: {
        [self setSize:[input readUInt64]];
        break;
      }
      case 34: {
        [self setFileSignature:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFileChecksum {
  return result.hasFileChecksum;
}
- (NSData*) fileChecksum {
  return result.fileChecksum;
}
- (FileToken_Builder*) setFileChecksum:(NSData*) value {
  result.hasFileChecksum = YES;
  result.fileChecksum = value;
  return self;
}
- (FileToken_Builder*) clearFileChecksum {
  result.hasFileChecksum = NO;
  result.fileChecksum = [NSData data];
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (FileToken_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (FileToken_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int64_t) size {
  return result.size;
}
- (FileToken_Builder*) setSize:(int64_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (FileToken_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0L;
  return self;
}
- (BOOL) hasFileSignature {
  return result.hasFileSignature;
}
- (NSData*) fileSignature {
  return result.fileSignature;
}
- (FileToken_Builder*) setFileSignature:(NSData*) value {
  result.hasFileSignature = YES;
  result.fileSignature = value;
  return self;
}
- (FileToken_Builder*) clearFileSignature {
  result.hasFileSignature = NO;
  result.fileSignature = [NSData data];
  return self;
}
@end

@interface Asset ()
@property (retain) NSString* dsPrsId;
@property (retain) NSData* fileChecksum;
@property int64_t size;
@property (retain) NSString* downloadToken;
@property (retain) NSString* contentBaseUrl;
@property (retain) NSString* dsid;
@property (retain) RecordIdentifier* recordId;
@property (retain) Data* data;
@property (retain) NSData* fileSignature;
@property int64_t downloadTokenExpiration;
@end

@implementation Asset

- (BOOL) hasDsPrsId {
  return !!hasDsPrsId_;
}
- (void) setHasDsPrsId:(BOOL) value {
  hasDsPrsId_ = !!value;
}
@synthesize dsPrsId;
- (BOOL) hasFileChecksum {
  return !!hasFileChecksum_;
}
- (void) setHasFileChecksum:(BOOL) value {
  hasFileChecksum_ = !!value;
}
@synthesize fileChecksum;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (BOOL) hasDownloadToken {
  return !!hasDownloadToken_;
}
- (void) setHasDownloadToken:(BOOL) value {
  hasDownloadToken_ = !!value;
}
@synthesize downloadToken;
- (BOOL) hasContentBaseUrl {
  return !!hasContentBaseUrl_;
}
- (void) setHasContentBaseUrl:(BOOL) value {
  hasContentBaseUrl_ = !!value;
}
@synthesize contentBaseUrl;
- (BOOL) hasDsid {
  return !!hasDsid_;
}
- (void) setHasDsid:(BOOL) value {
  hasDsid_ = !!value;
}
@synthesize dsid;
- (BOOL) hasRecordId {
  return !!hasRecordId_;
}
- (void) setHasRecordId:(BOOL) value {
  hasRecordId_ = !!value;
}
@synthesize recordId;
- (BOOL) hasData {
  return !!hasData_;
}
- (void) setHasData:(BOOL) value {
  hasData_ = !!value;
}
@synthesize data;
- (BOOL) hasFileSignature {
  return !!hasFileSignature_;
}
- (void) setHasFileSignature:(BOOL) value {
  hasFileSignature_ = !!value;
}
@synthesize fileSignature;
- (BOOL) hasDownloadTokenExpiration {
  return !!hasDownloadTokenExpiration_;
}
- (void) setHasDownloadTokenExpiration:(BOOL) value {
  hasDownloadTokenExpiration_ = !!value;
}
@synthesize downloadTokenExpiration;
- (void) dealloc {
  self.dsPrsId = nil;
  self.fileChecksum = nil;
  self.downloadToken = nil;
  self.contentBaseUrl = nil;
  self.dsid = nil;
  self.recordId = nil;
  self.data = nil;
  self.fileSignature = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.dsPrsId = @"";
    self.fileChecksum = [NSData data];
    self.size = 0L;
    self.downloadToken = @"";
    self.contentBaseUrl = @"";
    self.dsid = @"";
    self.recordId = [RecordIdentifier defaultInstance];
    self.data = [Data defaultInstance];
    self.fileSignature = [NSData data];
    self.downloadTokenExpiration = 0L;
  }
  return self;
}
static Asset* defaultAssetInstance = nil;
+ (void) initialize {
  if (self == [Asset class]) {
    defaultAssetInstance = [[Asset alloc] init];
  }
}
+ (Asset*) defaultInstance {
  return defaultAssetInstance;
}
- (Asset*) defaultInstance {
  return defaultAssetInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDsPrsId) {
    [output writeString:1 value:self.dsPrsId];
  }
  if (self.hasFileChecksum) {
    [output writeData:2 value:self.fileChecksum];
  }
  if (self.hasSize) {
    [output writeUInt64:4 value:self.size];
  }
  if (self.hasDownloadToken) {
    [output writeString:5 value:self.downloadToken];
  }
  if (self.hasContentBaseUrl) {
    [output writeString:8 value:self.contentBaseUrl];
  }
  if (self.hasDsid) {
    [output writeString:9 value:self.dsid];
  }
  if (self.hasRecordId) {
    [output writeMessage:10 value:self.recordId];
  }
  if (self.hasData) {
    [output writeMessage:15 value:self.data];
  }
  if (self.hasFileSignature) {
    [output writeData:17 value:self.fileSignature];
  }
  if (self.hasDownloadTokenExpiration) {
    [output writeUInt64:18 value:self.downloadTokenExpiration];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDsPrsId) {
    size += computeStringSize(1, self.dsPrsId);
  }
  if (self.hasFileChecksum) {
    size += computeDataSize(2, self.fileChecksum);
  }
  if (self.hasSize) {
    size += computeUInt64Size(4, self.size);
  }
  if (self.hasDownloadToken) {
    size += computeStringSize(5, self.downloadToken);
  }
  if (self.hasContentBaseUrl) {
    size += computeStringSize(8, self.contentBaseUrl);
  }
  if (self.hasDsid) {
    size += computeStringSize(9, self.dsid);
  }
  if (self.hasRecordId) {
    size += computeMessageSize(10, self.recordId);
  }
  if (self.hasData) {
    size += computeMessageSize(15, self.data);
  }
  if (self.hasFileSignature) {
    size += computeDataSize(17, self.fileSignature);
  }
  if (self.hasDownloadTokenExpiration) {
    size += computeUInt64Size(18, self.downloadTokenExpiration);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Asset*) parseFromData:(NSData*) data {
  return (Asset*)[[[Asset builder] mergeFromData:data] build];
}
+ (Asset*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Asset*)[[[Asset builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Asset*) parseFromInputStream:(NSInputStream*) input {
  return (Asset*)[[[Asset builder] mergeFromInputStream:input] build];
}
+ (Asset*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Asset*)[[[Asset builder] mergeDelimitedFromInputStream:input] build];
}
+ (Asset*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Asset*)[[[Asset builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Asset*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Asset*)[[[Asset builder] mergeFromCodedInputStream:input] build];
}
+ (Asset*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Asset*)[[[Asset builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Asset_Builder*) builder {
  return [[[Asset_Builder alloc] init] autorelease];
}
+ (Asset_Builder*) builderWithPrototype:(Asset*) prototype {
  return [[Asset builder] mergeFrom:prototype];
}
- (Asset_Builder*) builder {
  return [Asset builder];
}
@end

@interface Asset_Builder()
@property (retain) Asset* result;
@end

@implementation Asset_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Asset alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Asset_Builder*) clear {
  self.result = [[[Asset alloc] init] autorelease];
  return self;
}
- (Asset_Builder*) clone {
  return [Asset builderWithPrototype:result];
}
- (Asset*) defaultInstance {
  return [Asset defaultInstance];
}
- (Asset*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Asset*) buildPartial {
  Asset* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Asset_Builder*) mergeFrom:(Asset*) other {
  if (other == [Asset defaultInstance]) {
    return self;
  }
  if (other.hasDsPrsId) {
    [self setDsPrsId:other.dsPrsId];
  }
  if (other.hasFileChecksum) {
    [self setFileChecksum:other.fileChecksum];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  if (other.hasDownloadToken) {
    [self setDownloadToken:other.downloadToken];
  }
  if (other.hasContentBaseUrl) {
    [self setContentBaseUrl:other.contentBaseUrl];
  }
  if (other.hasDsid) {
    [self setDsid:other.dsid];
  }
  if (other.hasRecordId) {
    [self mergeRecordId:other.recordId];
  }
  if (other.hasData) {
    [self mergeData:other.data];
  }
  if (other.hasFileSignature) {
    [self setFileSignature:other.fileSignature];
  }
  if (other.hasDownloadTokenExpiration) {
    [self setDownloadTokenExpiration:other.downloadTokenExpiration];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Asset_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Asset_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDsPrsId:[input readString]];
        break;
      }
      case 18: {
        [self setFileChecksum:[input readData]];
        break;
      }
      case 32: {
        [self setSize:[input readUInt64]];
        break;
      }
      case 42: {
        [self setDownloadToken:[input readString]];
        break;
      }
      case 66: {
        [self setContentBaseUrl:[input readString]];
        break;
      }
      case 74: {
        [self setDsid:[input readString]];
        break;
      }
      case 82: {
        RecordIdentifier_Builder* subBuilder = [RecordIdentifier builder];
        if (self.hasRecordId) {
          [subBuilder mergeFrom:self.recordId];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecordId:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        Data_Builder* subBuilder = [Data builder];
        if (self.hasData) {
          [subBuilder mergeFrom:self.data];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setData:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        [self setFileSignature:[input readData]];
        break;
      }
      case 144: {
        [self setDownloadTokenExpiration:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasDsPrsId {
  return result.hasDsPrsId;
}
- (NSString*) dsPrsId {
  return result.dsPrsId;
}
- (Asset_Builder*) setDsPrsId:(NSString*) value {
  result.hasDsPrsId = YES;
  result.dsPrsId = value;
  return self;
}
- (Asset_Builder*) clearDsPrsId {
  result.hasDsPrsId = NO;
  result.dsPrsId = @"";
  return self;
}
- (BOOL) hasFileChecksum {
  return result.hasFileChecksum;
}
- (NSData*) fileChecksum {
  return result.fileChecksum;
}
- (Asset_Builder*) setFileChecksum:(NSData*) value {
  result.hasFileChecksum = YES;
  result.fileChecksum = value;
  return self;
}
- (Asset_Builder*) clearFileChecksum {
  result.hasFileChecksum = NO;
  result.fileChecksum = [NSData data];
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int64_t) size {
  return result.size;
}
- (Asset_Builder*) setSize:(int64_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (Asset_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0L;
  return self;
}
- (BOOL) hasDownloadToken {
  return result.hasDownloadToken;
}
- (NSString*) downloadToken {
  return result.downloadToken;
}
- (Asset_Builder*) setDownloadToken:(NSString*) value {
  result.hasDownloadToken = YES;
  result.downloadToken = value;
  return self;
}
- (Asset_Builder*) clearDownloadToken {
  result.hasDownloadToken = NO;
  result.downloadToken = @"";
  return self;
}
- (BOOL) hasContentBaseUrl {
  return result.hasContentBaseUrl;
}
- (NSString*) contentBaseUrl {
  return result.contentBaseUrl;
}
- (Asset_Builder*) setContentBaseUrl:(NSString*) value {
  result.hasContentBaseUrl = YES;
  result.contentBaseUrl = value;
  return self;
}
- (Asset_Builder*) clearContentBaseUrl {
  result.hasContentBaseUrl = NO;
  result.contentBaseUrl = @"";
  return self;
}
- (BOOL) hasDsid {
  return result.hasDsid;
}
- (NSString*) dsid {
  return result.dsid;
}
- (Asset_Builder*) setDsid:(NSString*) value {
  result.hasDsid = YES;
  result.dsid = value;
  return self;
}
- (Asset_Builder*) clearDsid {
  result.hasDsid = NO;
  result.dsid = @"";
  return self;
}
- (BOOL) hasRecordId {
  return result.hasRecordId;
}
- (RecordIdentifier*) recordId {
  return result.recordId;
}
- (Asset_Builder*) setRecordId:(RecordIdentifier*) value {
  result.hasRecordId = YES;
  result.recordId = value;
  return self;
}
- (Asset_Builder*) setRecordIdBuilder:(RecordIdentifier_Builder*) builderForValue {
  return [self setRecordId:[builderForValue build]];
}
- (Asset_Builder*) mergeRecordId:(RecordIdentifier*) value {
  if (result.hasRecordId &&
      result.recordId != [RecordIdentifier defaultInstance]) {
    result.recordId =
      [[[RecordIdentifier builderWithPrototype:result.recordId] mergeFrom:value] buildPartial];
  } else {
    result.recordId = value;
  }
  result.hasRecordId = YES;
  return self;
}
- (Asset_Builder*) clearRecordId {
  result.hasRecordId = NO;
  result.recordId = [RecordIdentifier defaultInstance];
  return self;
}
- (BOOL) hasData {
  return result.hasData;
}
- (Data*) data {
  return result.data;
}
- (Asset_Builder*) setData:(Data*) value {
  result.hasData = YES;
  result.data = value;
  return self;
}
- (Asset_Builder*) setDataBuilder:(Data_Builder*) builderForValue {
  return [self setData:[builderForValue build]];
}
- (Asset_Builder*) mergeData:(Data*) value {
  if (result.hasData &&
      result.data != [Data defaultInstance]) {
    result.data =
      [[[Data builderWithPrototype:result.data] mergeFrom:value] buildPartial];
  } else {
    result.data = value;
  }
  result.hasData = YES;
  return self;
}
- (Asset_Builder*) clearData {
  result.hasData = NO;
  result.data = [Data defaultInstance];
  return self;
}
- (BOOL) hasFileSignature {
  return result.hasFileSignature;
}
- (NSData*) fileSignature {
  return result.fileSignature;
}
- (Asset_Builder*) setFileSignature:(NSData*) value {
  result.hasFileSignature = YES;
  result.fileSignature = value;
  return self;
}
- (Asset_Builder*) clearFileSignature {
  result.hasFileSignature = NO;
  result.fileSignature = [NSData data];
  return self;
}
- (BOOL) hasDownloadTokenExpiration {
  return result.hasDownloadTokenExpiration;
}
- (int64_t) downloadTokenExpiration {
  return result.downloadTokenExpiration;
}
- (Asset_Builder*) setDownloadTokenExpiration:(int64_t) value {
  result.hasDownloadTokenExpiration = YES;
  result.downloadTokenExpiration = value;
  return self;
}
- (Asset_Builder*) clearDownloadTokenExpiration {
  result.hasDownloadTokenExpiration = NO;
  result.downloadTokenExpiration = 0L;
  return self;
}
@end

@interface UInt32Ex ()
@property int32_t value;
@end

@implementation UInt32Ex

- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.value = 0;
  }
  return self;
}
static UInt32Ex* defaultUInt32ExInstance = nil;
+ (void) initialize {
  if (self == [UInt32Ex class]) {
    defaultUInt32ExInstance = [[UInt32Ex alloc] init];
  }
}
+ (UInt32Ex*) defaultInstance {
  return defaultUInt32ExInstance;
}
- (UInt32Ex*) defaultInstance {
  return defaultUInt32ExInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasValue) {
    [output writeUInt32:1 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasValue) {
    size += computeUInt32Size(1, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UInt32Ex*) parseFromData:(NSData*) data {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromData:data] build];
}
+ (UInt32Ex*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UInt32Ex*) parseFromInputStream:(NSInputStream*) input {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromInputStream:input] build];
}
+ (UInt32Ex*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeDelimitedFromInputStream:input] build];
}
+ (UInt32Ex*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UInt32Ex*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromCodedInputStream:input] build];
}
+ (UInt32Ex*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UInt32Ex*)[[[UInt32Ex builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UInt32Ex_Builder*) builder {
  return [[[UInt32Ex_Builder alloc] init] autorelease];
}
+ (UInt32Ex_Builder*) builderWithPrototype:(UInt32Ex*) prototype {
  return [[UInt32Ex builder] mergeFrom:prototype];
}
- (UInt32Ex_Builder*) builder {
  return [UInt32Ex builder];
}
@end

@interface UInt32Ex_Builder()
@property (retain) UInt32Ex* result;
@end

@implementation UInt32Ex_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UInt32Ex alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UInt32Ex_Builder*) clear {
  self.result = [[[UInt32Ex alloc] init] autorelease];
  return self;
}
- (UInt32Ex_Builder*) clone {
  return [UInt32Ex builderWithPrototype:result];
}
- (UInt32Ex*) defaultInstance {
  return [UInt32Ex defaultInstance];
}
- (UInt32Ex*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UInt32Ex*) buildPartial {
  UInt32Ex* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UInt32Ex_Builder*) mergeFrom:(UInt32Ex*) other {
  if (other == [UInt32Ex defaultInstance]) {
    return self;
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UInt32Ex_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UInt32Ex_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setValue:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (int32_t) value {
  return result.value;
}
- (UInt32Ex_Builder*) setValue:(int32_t) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (UInt32Ex_Builder*) clearValue {
  result.hasValue = NO;
  result.value = 0;
  return self;
}
@end

@interface Data ()
@property (retain) NSData* value;
@end

@implementation Data

- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  self.value = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.value = [NSData data];
  }
  return self;
}
static Data* defaultDataInstance = nil;
+ (void) initialize {
  if (self == [Data class]) {
    defaultDataInstance = [[Data alloc] init];
  }
}
+ (Data*) defaultInstance {
  return defaultDataInstance;
}
- (Data*) defaultInstance {
  return defaultDataInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasValue) {
    [output writeData:1 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasValue) {
    size += computeDataSize(1, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Data*) parseFromData:(NSData*) data {
  return (Data*)[[[Data builder] mergeFromData:data] build];
}
+ (Data*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Data*)[[[Data builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Data*) parseFromInputStream:(NSInputStream*) input {
  return (Data*)[[[Data builder] mergeFromInputStream:input] build];
}
+ (Data*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Data*)[[[Data builder] mergeDelimitedFromInputStream:input] build];
}
+ (Data*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Data*)[[[Data builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Data*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Data*)[[[Data builder] mergeFromCodedInputStream:input] build];
}
+ (Data*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Data*)[[[Data builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Data_Builder*) builder {
  return [[[Data_Builder alloc] init] autorelease];
}
+ (Data_Builder*) builderWithPrototype:(Data*) prototype {
  return [[Data builder] mergeFrom:prototype];
}
- (Data_Builder*) builder {
  return [Data builder];
}
@end

@interface Data_Builder()
@property (retain) Data* result;
@end

@implementation Data_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Data alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Data_Builder*) clear {
  self.result = [[[Data alloc] init] autorelease];
  return self;
}
- (Data_Builder*) clone {
  return [Data builderWithPrototype:result];
}
- (Data*) defaultInstance {
  return [Data defaultInstance];
}
- (Data*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Data*) buildPartial {
  Data* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Data_Builder*) mergeFrom:(Data*) other {
  if (other == [Data defaultInstance]) {
    return self;
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Data_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Data_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setValue:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSData*) value {
  return result.value;
}
- (Data_Builder*) setValue:(NSData*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (Data_Builder*) clearValue {
  result.hasValue = NO;
  result.value = [NSData data];
  return self;
}
@end

@interface ZoneRetrieveRequest ()
@property (retain) RecordZoneIdentifier* zoneIdentifier;
@end

@implementation ZoneRetrieveRequest

- (BOOL) hasZoneIdentifier {
  return !!hasZoneIdentifier_;
}
- (void) setHasZoneIdentifier:(BOOL) value {
  hasZoneIdentifier_ = !!value;
}
@synthesize zoneIdentifier;
- (void) dealloc {
  self.zoneIdentifier = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  }
  return self;
}
static ZoneRetrieveRequest* defaultZoneRetrieveRequestInstance = nil;
+ (void) initialize {
  if (self == [ZoneRetrieveRequest class]) {
    defaultZoneRetrieveRequestInstance = [[ZoneRetrieveRequest alloc] init];
  }
}
+ (ZoneRetrieveRequest*) defaultInstance {
  return defaultZoneRetrieveRequestInstance;
}
- (ZoneRetrieveRequest*) defaultInstance {
  return defaultZoneRetrieveRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasZoneIdentifier) {
    [output writeMessage:1 value:self.zoneIdentifier];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasZoneIdentifier) {
    size += computeMessageSize(1, self.zoneIdentifier);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ZoneRetrieveRequest*) parseFromData:(NSData*) data {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromData:data] build];
}
+ (ZoneRetrieveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromInputStream:input] build];
}
+ (ZoneRetrieveRequest*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeDelimitedFromInputStream:input] build];
}
+ (ZoneRetrieveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ZoneRetrieveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveRequest*)[[[ZoneRetrieveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveRequest_Builder*) builder {
  return [[[ZoneRetrieveRequest_Builder alloc] init] autorelease];
}
+ (ZoneRetrieveRequest_Builder*) builderWithPrototype:(ZoneRetrieveRequest*) prototype {
  return [[ZoneRetrieveRequest builder] mergeFrom:prototype];
}
- (ZoneRetrieveRequest_Builder*) builder {
  return [ZoneRetrieveRequest builder];
}
@end

@interface ZoneRetrieveRequest_Builder()
@property (retain) ZoneRetrieveRequest* result;
@end

@implementation ZoneRetrieveRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ZoneRetrieveRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ZoneRetrieveRequest_Builder*) clear {
  self.result = [[[ZoneRetrieveRequest alloc] init] autorelease];
  return self;
}
- (ZoneRetrieveRequest_Builder*) clone {
  return [ZoneRetrieveRequest builderWithPrototype:result];
}
- (ZoneRetrieveRequest*) defaultInstance {
  return [ZoneRetrieveRequest defaultInstance];
}
- (ZoneRetrieveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ZoneRetrieveRequest*) buildPartial {
  ZoneRetrieveRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ZoneRetrieveRequest_Builder*) mergeFrom:(ZoneRetrieveRequest*) other {
  if (other == [ZoneRetrieveRequest defaultInstance]) {
    return self;
  }
  if (other.hasZoneIdentifier) {
    [self mergeZoneIdentifier:other.zoneIdentifier];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ZoneRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ZoneRetrieveRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordZoneIdentifier_Builder* subBuilder = [RecordZoneIdentifier builder];
        if (self.hasZoneIdentifier) {
          [subBuilder mergeFrom:self.zoneIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneIdentifier:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasZoneIdentifier {
  return result.hasZoneIdentifier;
}
- (RecordZoneIdentifier*) zoneIdentifier {
  return result.zoneIdentifier;
}
- (ZoneRetrieveRequest_Builder*) setZoneIdentifier:(RecordZoneIdentifier*) value {
  result.hasZoneIdentifier = YES;
  result.zoneIdentifier = value;
  return self;
}
- (ZoneRetrieveRequest_Builder*) setZoneIdentifierBuilder:(RecordZoneIdentifier_Builder*) builderForValue {
  return [self setZoneIdentifier:[builderForValue build]];
}
- (ZoneRetrieveRequest_Builder*) mergeZoneIdentifier:(RecordZoneIdentifier*) value {
  if (result.hasZoneIdentifier &&
      result.zoneIdentifier != [RecordZoneIdentifier defaultInstance]) {
    result.zoneIdentifier =
      [[[RecordZoneIdentifier builderWithPrototype:result.zoneIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.zoneIdentifier = value;
  }
  result.hasZoneIdentifier = YES;
  return self;
}
- (ZoneRetrieveRequest_Builder*) clearZoneIdentifier {
  result.hasZoneIdentifier = NO;
  result.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  return self;
}
@end

@interface ZoneRetrieveResponse ()
@property (retain) NSMutableArray* mutableZoneSummarysList;
@end

@implementation ZoneRetrieveResponse

@synthesize mutableZoneSummarysList;
- (void) dealloc {
  self.mutableZoneSummarysList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ZoneRetrieveResponse* defaultZoneRetrieveResponseInstance = nil;
+ (void) initialize {
  if (self == [ZoneRetrieveResponse class]) {
    defaultZoneRetrieveResponseInstance = [[ZoneRetrieveResponse alloc] init];
  }
}
+ (ZoneRetrieveResponse*) defaultInstance {
  return defaultZoneRetrieveResponseInstance;
}
- (ZoneRetrieveResponse*) defaultInstance {
  return defaultZoneRetrieveResponseInstance;
}
- (NSArray*) zoneSummarysList {
  return mutableZoneSummarysList;
}
- (ZoneRetrieveResponseZoneSummary*) zoneSummarysAtIndex:(int32_t) index {
  id value = [mutableZoneSummarysList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (ZoneRetrieveResponseZoneSummary* element in self.zoneSummarysList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (ZoneRetrieveResponseZoneSummary* element in self.zoneSummarysList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ZoneRetrieveResponse*) parseFromData:(NSData*) data {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromData:data] build];
}
+ (ZoneRetrieveResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromInputStream:input] build];
}
+ (ZoneRetrieveResponse*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeDelimitedFromInputStream:input] build];
}
+ (ZoneRetrieveResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ZoneRetrieveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponse*)[[[ZoneRetrieveResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponse_Builder*) builder {
  return [[[ZoneRetrieveResponse_Builder alloc] init] autorelease];
}
+ (ZoneRetrieveResponse_Builder*) builderWithPrototype:(ZoneRetrieveResponse*) prototype {
  return [[ZoneRetrieveResponse builder] mergeFrom:prototype];
}
- (ZoneRetrieveResponse_Builder*) builder {
  return [ZoneRetrieveResponse builder];
}
@end

@interface ZoneRetrieveResponse_Builder()
@property (retain) ZoneRetrieveResponse* result;
@end

@implementation ZoneRetrieveResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ZoneRetrieveResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ZoneRetrieveResponse_Builder*) clear {
  self.result = [[[ZoneRetrieveResponse alloc] init] autorelease];
  return self;
}
- (ZoneRetrieveResponse_Builder*) clone {
  return [ZoneRetrieveResponse builderWithPrototype:result];
}
- (ZoneRetrieveResponse*) defaultInstance {
  return [ZoneRetrieveResponse defaultInstance];
}
- (ZoneRetrieveResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ZoneRetrieveResponse*) buildPartial {
  ZoneRetrieveResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ZoneRetrieveResponse_Builder*) mergeFrom:(ZoneRetrieveResponse*) other {
  if (other == [ZoneRetrieveResponse defaultInstance]) {
    return self;
  }
  if (other.mutableZoneSummarysList.count > 0) {
    if (result.mutableZoneSummarysList == nil) {
      result.mutableZoneSummarysList = [NSMutableArray array];
    }
    [result.mutableZoneSummarysList addObjectsFromArray:other.mutableZoneSummarysList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ZoneRetrieveResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ZoneRetrieveResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ZoneRetrieveResponseZoneSummary_Builder* subBuilder = [ZoneRetrieveResponseZoneSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addZoneSummarys:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) zoneSummarysList {
  if (result.mutableZoneSummarysList == nil) { return [NSArray array]; }
  return result.mutableZoneSummarysList;
}
- (ZoneRetrieveResponseZoneSummary*) zoneSummarysAtIndex:(int32_t) index {
  return [result zoneSummarysAtIndex:index];
}
- (ZoneRetrieveResponse_Builder*) replaceZoneSummarysAtIndex:(int32_t) index with:(ZoneRetrieveResponseZoneSummary*) value {
  [result.mutableZoneSummarysList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ZoneRetrieveResponse_Builder*) addAllZoneSummarys:(NSArray*) values {
  if (result.mutableZoneSummarysList == nil) {
    result.mutableZoneSummarysList = [NSMutableArray array];
  }
  [result.mutableZoneSummarysList addObjectsFromArray:values];
  return self;
}
- (ZoneRetrieveResponse_Builder*) clearZoneSummarysList {
  result.mutableZoneSummarysList = nil;
  return self;
}
- (ZoneRetrieveResponse_Builder*) addZoneSummarys:(ZoneRetrieveResponseZoneSummary*) value {
  if (result.mutableZoneSummarysList == nil) {
    result.mutableZoneSummarysList = [NSMutableArray array];
  }
  [result.mutableZoneSummarysList addObject:value];
  return self;
}
@end

@interface ZoneRetrieveResponseZoneSummary ()
@property (retain) ZoneEx* targetZone;
@end

@implementation ZoneRetrieveResponseZoneSummary

- (BOOL) hasTargetZone {
  return !!hasTargetZone_;
}
- (void) setHasTargetZone:(BOOL) value {
  hasTargetZone_ = !!value;
}
@synthesize targetZone;
- (void) dealloc {
  self.targetZone = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.targetZone = [ZoneEx defaultInstance];
  }
  return self;
}
static ZoneRetrieveResponseZoneSummary* defaultZoneRetrieveResponseZoneSummaryInstance = nil;
+ (void) initialize {
  if (self == [ZoneRetrieveResponseZoneSummary class]) {
    defaultZoneRetrieveResponseZoneSummaryInstance = [[ZoneRetrieveResponseZoneSummary alloc] init];
  }
}
+ (ZoneRetrieveResponseZoneSummary*) defaultInstance {
  return defaultZoneRetrieveResponseZoneSummaryInstance;
}
- (ZoneRetrieveResponseZoneSummary*) defaultInstance {
  return defaultZoneRetrieveResponseZoneSummaryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTargetZone) {
    [output writeMessage:1 value:self.targetZone];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTargetZone) {
    size += computeMessageSize(1, self.targetZone);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromData:(NSData*) data {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromData:data] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromInputStream:input] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeDelimitedFromInputStream:input] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromCodedInputStream:input] build];
}
+ (ZoneRetrieveResponseZoneSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneRetrieveResponseZoneSummary*)[[[ZoneRetrieveResponseZoneSummary builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneRetrieveResponseZoneSummary_Builder*) builder {
  return [[[ZoneRetrieveResponseZoneSummary_Builder alloc] init] autorelease];
}
+ (ZoneRetrieveResponseZoneSummary_Builder*) builderWithPrototype:(ZoneRetrieveResponseZoneSummary*) prototype {
  return [[ZoneRetrieveResponseZoneSummary builder] mergeFrom:prototype];
}
- (ZoneRetrieveResponseZoneSummary_Builder*) builder {
  return [ZoneRetrieveResponseZoneSummary builder];
}
@end

@interface ZoneRetrieveResponseZoneSummary_Builder()
@property (retain) ZoneRetrieveResponseZoneSummary* result;
@end

@implementation ZoneRetrieveResponseZoneSummary_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ZoneRetrieveResponseZoneSummary alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) clear {
  self.result = [[[ZoneRetrieveResponseZoneSummary alloc] init] autorelease];
  return self;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) clone {
  return [ZoneRetrieveResponseZoneSummary builderWithPrototype:result];
}
- (ZoneRetrieveResponseZoneSummary*) defaultInstance {
  return [ZoneRetrieveResponseZoneSummary defaultInstance];
}
- (ZoneRetrieveResponseZoneSummary*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ZoneRetrieveResponseZoneSummary*) buildPartial {
  ZoneRetrieveResponseZoneSummary* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) mergeFrom:(ZoneRetrieveResponseZoneSummary*) other {
  if (other == [ZoneRetrieveResponseZoneSummary defaultInstance]) {
    return self;
  }
  if (other.hasTargetZone) {
    [self mergeTargetZone:other.targetZone];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ZoneRetrieveResponseZoneSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ZoneEx_Builder* subBuilder = [ZoneEx builder];
        if (self.hasTargetZone) {
          [subBuilder mergeFrom:self.targetZone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTargetZone:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTargetZone {
  return result.hasTargetZone;
}
- (ZoneEx*) targetZone {
  return result.targetZone;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) setTargetZone:(ZoneEx*) value {
  result.hasTargetZone = YES;
  result.targetZone = value;
  return self;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) setTargetZoneBuilder:(ZoneEx_Builder*) builderForValue {
  return [self setTargetZone:[builderForValue build]];
}
- (ZoneRetrieveResponseZoneSummary_Builder*) mergeTargetZone:(ZoneEx*) value {
  if (result.hasTargetZone &&
      result.targetZone != [ZoneEx defaultInstance]) {
    result.targetZone =
      [[[ZoneEx builderWithPrototype:result.targetZone] mergeFrom:value] buildPartial];
  } else {
    result.targetZone = value;
  }
  result.hasTargetZone = YES;
  return self;
}
- (ZoneRetrieveResponseZoneSummary_Builder*) clearTargetZone {
  result.hasTargetZone = NO;
  result.targetZone = [ZoneEx defaultInstance];
  return self;
}
@end

@interface ZoneEx ()
@property (retain) RecordZoneIdentifier* zoneIdentifier;
@property (retain) ProtectionInfo* protectionInfo;
@end

@implementation ZoneEx

- (BOOL) hasZoneIdentifier {
  return !!hasZoneIdentifier_;
}
- (void) setHasZoneIdentifier:(BOOL) value {
  hasZoneIdentifier_ = !!value;
}
@synthesize zoneIdentifier;
- (BOOL) hasProtectionInfo {
  return !!hasProtectionInfo_;
}
- (void) setHasProtectionInfo:(BOOL) value {
  hasProtectionInfo_ = !!value;
}
@synthesize protectionInfo;
- (void) dealloc {
  self.zoneIdentifier = nil;
  self.protectionInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
    self.protectionInfo = [ProtectionInfo defaultInstance];
  }
  return self;
}
static ZoneEx* defaultZoneExInstance = nil;
+ (void) initialize {
  if (self == [ZoneEx class]) {
    defaultZoneExInstance = [[ZoneEx alloc] init];
  }
}
+ (ZoneEx*) defaultInstance {
  return defaultZoneExInstance;
}
- (ZoneEx*) defaultInstance {
  return defaultZoneExInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasZoneIdentifier) {
    [output writeMessage:1 value:self.zoneIdentifier];
  }
  if (self.hasProtectionInfo) {
    [output writeMessage:3 value:self.protectionInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasZoneIdentifier) {
    size += computeMessageSize(1, self.zoneIdentifier);
  }
  if (self.hasProtectionInfo) {
    size += computeMessageSize(3, self.protectionInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ZoneEx*) parseFromData:(NSData*) data {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromData:data] build];
}
+ (ZoneEx*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ZoneEx*) parseFromInputStream:(NSInputStream*) input {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromInputStream:input] build];
}
+ (ZoneEx*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (ZoneEx*)[[[ZoneEx builder] mergeDelimitedFromInputStream:input] build];
}
+ (ZoneEx*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneEx*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromCodedInputStream:input] build];
}
+ (ZoneEx*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ZoneEx*)[[[ZoneEx builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ZoneEx_Builder*) builder {
  return [[[ZoneEx_Builder alloc] init] autorelease];
}
+ (ZoneEx_Builder*) builderWithPrototype:(ZoneEx*) prototype {
  return [[ZoneEx builder] mergeFrom:prototype];
}
- (ZoneEx_Builder*) builder {
  return [ZoneEx builder];
}
@end

@interface ZoneEx_Builder()
@property (retain) ZoneEx* result;
@end

@implementation ZoneEx_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ZoneEx alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ZoneEx_Builder*) clear {
  self.result = [[[ZoneEx alloc] init] autorelease];
  return self;
}
- (ZoneEx_Builder*) clone {
  return [ZoneEx builderWithPrototype:result];
}
- (ZoneEx*) defaultInstance {
  return [ZoneEx defaultInstance];
}
- (ZoneEx*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ZoneEx*) buildPartial {
  ZoneEx* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ZoneEx_Builder*) mergeFrom:(ZoneEx*) other {
  if (other == [ZoneEx defaultInstance]) {
    return self;
  }
  if (other.hasZoneIdentifier) {
    [self mergeZoneIdentifier:other.zoneIdentifier];
  }
  if (other.hasProtectionInfo) {
    [self mergeProtectionInfo:other.protectionInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ZoneEx_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ZoneEx_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordZoneIdentifier_Builder* subBuilder = [RecordZoneIdentifier builder];
        if (self.hasZoneIdentifier) {
          [subBuilder mergeFrom:self.zoneIdentifier];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setZoneIdentifier:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ProtectionInfo_Builder* subBuilder = [ProtectionInfo builder];
        if (self.hasProtectionInfo) {
          [subBuilder mergeFrom:self.protectionInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProtectionInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasZoneIdentifier {
  return result.hasZoneIdentifier;
}
- (RecordZoneIdentifier*) zoneIdentifier {
  return result.zoneIdentifier;
}
- (ZoneEx_Builder*) setZoneIdentifier:(RecordZoneIdentifier*) value {
  result.hasZoneIdentifier = YES;
  result.zoneIdentifier = value;
  return self;
}
- (ZoneEx_Builder*) setZoneIdentifierBuilder:(RecordZoneIdentifier_Builder*) builderForValue {
  return [self setZoneIdentifier:[builderForValue build]];
}
- (ZoneEx_Builder*) mergeZoneIdentifier:(RecordZoneIdentifier*) value {
  if (result.hasZoneIdentifier &&
      result.zoneIdentifier != [RecordZoneIdentifier defaultInstance]) {
    result.zoneIdentifier =
      [[[RecordZoneIdentifier builderWithPrototype:result.zoneIdentifier] mergeFrom:value] buildPartial];
  } else {
    result.zoneIdentifier = value;
  }
  result.hasZoneIdentifier = YES;
  return self;
}
- (ZoneEx_Builder*) clearZoneIdentifier {
  result.hasZoneIdentifier = NO;
  result.zoneIdentifier = [RecordZoneIdentifier defaultInstance];
  return self;
}
- (BOOL) hasProtectionInfo {
  return result.hasProtectionInfo;
}
- (ProtectionInfo*) protectionInfo {
  return result.protectionInfo;
}
- (ZoneEx_Builder*) setProtectionInfo:(ProtectionInfo*) value {
  result.hasProtectionInfo = YES;
  result.protectionInfo = value;
  return self;
}
- (ZoneEx_Builder*) setProtectionInfoBuilder:(ProtectionInfo_Builder*) builderForValue {
  return [self setProtectionInfo:[builderForValue build]];
}
- (ZoneEx_Builder*) mergeProtectionInfo:(ProtectionInfo*) value {
  if (result.hasProtectionInfo &&
      result.protectionInfo != [ProtectionInfo defaultInstance]) {
    result.protectionInfo =
      [[[ProtectionInfo builderWithPrototype:result.protectionInfo] mergeFrom:value] buildPartial];
  } else {
    result.protectionInfo = value;
  }
  result.hasProtectionInfo = YES;
  return self;
}
- (ZoneEx_Builder*) clearProtectionInfo {
  result.hasProtectionInfo = NO;
  result.protectionInfo = [ProtectionInfo defaultInstance];
  return self;
}
@end

@interface EncryptedAttributes ()
@property (retain) NSString* relativePath;
@property (retain) NSString* domain;
@property int64_t birth;
@property int64_t modified;
@property int64_t statusChanged;
@property int64_t size;
@property int32_t groupId;
@property int32_t userId;
@property int32_t mode;
@property int64_t x;
@property (retain) NSData* encryptionKey;
@property (retain) NSData* checksum;
@end

@implementation EncryptedAttributes

- (BOOL) hasRelativePath {
  return !!hasRelativePath_;
}
- (void) setHasRelativePath:(BOOL) value {
  hasRelativePath_ = !!value;
}
@synthesize relativePath;
- (BOOL) hasDomain {
  return !!hasDomain_;
}
- (void) setHasDomain:(BOOL) value {
  hasDomain_ = !!value;
}
@synthesize domain;
- (BOOL) hasBirth {
  return !!hasBirth_;
}
- (void) setHasBirth:(BOOL) value {
  hasBirth_ = !!value;
}
@synthesize birth;
- (BOOL) hasModified {
  return !!hasModified_;
}
- (void) setHasModified:(BOOL) value {
  hasModified_ = !!value;
}
@synthesize modified;
- (BOOL) hasStatusChanged {
  return !!hasStatusChanged_;
}
- (void) setHasStatusChanged:(BOOL) value {
  hasStatusChanged_ = !!value;
}
@synthesize statusChanged;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value {
  hasGroupId_ = !!value;
}
@synthesize groupId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasMode {
  return !!hasMode_;
}
- (void) setHasMode:(BOOL) value {
  hasMode_ = !!value;
}
@synthesize mode;
- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasEncryptionKey {
  return !!hasEncryptionKey_;
}
- (void) setHasEncryptionKey:(BOOL) value {
  hasEncryptionKey_ = !!value;
}
@synthesize encryptionKey;
- (BOOL) hasChecksum {
  return !!hasChecksum_;
}
- (void) setHasChecksum:(BOOL) value {
  hasChecksum_ = !!value;
}
@synthesize checksum;
- (void) dealloc {
  self.relativePath = nil;
  self.domain = nil;
  self.encryptionKey = nil;
  self.checksum = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.relativePath = @"";
    self.domain = @"";
    self.birth = 0L;
    self.modified = 0L;
    self.statusChanged = 0L;
    self.size = 0L;
    self.groupId = 0;
    self.userId = 0;
    self.mode = 0;
    self.x = 0L;
    self.encryptionKey = [NSData data];
    self.checksum = [NSData data];
  }
  return self;
}
static EncryptedAttributes* defaultEncryptedAttributesInstance = nil;
+ (void) initialize {
  if (self == [EncryptedAttributes class]) {
    defaultEncryptedAttributesInstance = [[EncryptedAttributes alloc] init];
  }
}
+ (EncryptedAttributes*) defaultInstance {
  return defaultEncryptedAttributesInstance;
}
- (EncryptedAttributes*) defaultInstance {
  return defaultEncryptedAttributesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRelativePath) {
    [output writeString:1 value:self.relativePath];
  }
  if (self.hasDomain) {
    [output writeString:2 value:self.domain];
  }
  if (self.hasBirth) {
    [output writeUInt64:3 value:self.birth];
  }
  if (self.hasModified) {
    [output writeUInt64:4 value:self.modified];
  }
  if (self.hasStatusChanged) {
    [output writeUInt64:5 value:self.statusChanged];
  }
  if (self.hasSize) {
    [output writeUInt64:6 value:self.size];
  }
  if (self.hasGroupId) {
    [output writeUInt32:7 value:self.groupId];
  }
  if (self.hasUserId) {
    [output writeUInt32:8 value:self.userId];
  }
  if (self.hasMode) {
    [output writeUInt32:9 value:self.mode];
  }
  if (self.hasX) {
    [output writeUInt64:10 value:self.x];
  }
  if (self.hasEncryptionKey) {
    [output writeData:12 value:self.encryptionKey];
  }
  if (self.hasChecksum) {
    [output writeData:13 value:self.checksum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRelativePath) {
    size += computeStringSize(1, self.relativePath);
  }
  if (self.hasDomain) {
    size += computeStringSize(2, self.domain);
  }
  if (self.hasBirth) {
    size += computeUInt64Size(3, self.birth);
  }
  if (self.hasModified) {
    size += computeUInt64Size(4, self.modified);
  }
  if (self.hasStatusChanged) {
    size += computeUInt64Size(5, self.statusChanged);
  }
  if (self.hasSize) {
    size += computeUInt64Size(6, self.size);
  }
  if (self.hasGroupId) {
    size += computeUInt32Size(7, self.groupId);
  }
  if (self.hasUserId) {
    size += computeUInt32Size(8, self.userId);
  }
  if (self.hasMode) {
    size += computeUInt32Size(9, self.mode);
  }
  if (self.hasX) {
    size += computeUInt64Size(10, self.x);
  }
  if (self.hasEncryptionKey) {
    size += computeDataSize(12, self.encryptionKey);
  }
  if (self.hasChecksum) {
    size += computeDataSize(13, self.checksum);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EncryptedAttributes*) parseFromData:(NSData*) data {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromData:data] build];
}
+ (EncryptedAttributes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EncryptedAttributes*) parseFromInputStream:(NSInputStream*) input {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromInputStream:input] build];
}
+ (EncryptedAttributes*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeDelimitedFromInputStream:input] build];
}
+ (EncryptedAttributes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EncryptedAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromCodedInputStream:input] build];
}
+ (EncryptedAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EncryptedAttributes*)[[[EncryptedAttributes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EncryptedAttributes_Builder*) builder {
  return [[[EncryptedAttributes_Builder alloc] init] autorelease];
}
+ (EncryptedAttributes_Builder*) builderWithPrototype:(EncryptedAttributes*) prototype {
  return [[EncryptedAttributes builder] mergeFrom:prototype];
}
- (EncryptedAttributes_Builder*) builder {
  return [EncryptedAttributes builder];
}
@end

@interface EncryptedAttributes_Builder()
@property (retain) EncryptedAttributes* result;
@end

@implementation EncryptedAttributes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EncryptedAttributes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EncryptedAttributes_Builder*) clear {
  self.result = [[[EncryptedAttributes alloc] init] autorelease];
  return self;
}
- (EncryptedAttributes_Builder*) clone {
  return [EncryptedAttributes builderWithPrototype:result];
}
- (EncryptedAttributes*) defaultInstance {
  return [EncryptedAttributes defaultInstance];
}
- (EncryptedAttributes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EncryptedAttributes*) buildPartial {
  EncryptedAttributes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EncryptedAttributes_Builder*) mergeFrom:(EncryptedAttributes*) other {
  if (other == [EncryptedAttributes defaultInstance]) {
    return self;
  }
  if (other.hasRelativePath) {
    [self setRelativePath:other.relativePath];
  }
  if (other.hasDomain) {
    [self setDomain:other.domain];
  }
  if (other.hasBirth) {
    [self setBirth:other.birth];
  }
  if (other.hasModified) {
    [self setModified:other.modified];
  }
  if (other.hasStatusChanged) {
    [self setStatusChanged:other.statusChanged];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasMode) {
    [self setMode:other.mode];
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasEncryptionKey) {
    [self setEncryptionKey:other.encryptionKey];
  }
  if (other.hasChecksum) {
    [self setChecksum:other.checksum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EncryptedAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EncryptedAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setRelativePath:[input readString]];
        break;
      }
      case 18: {
        [self setDomain:[input readString]];
        break;
      }
      case 24: {
        [self setBirth:[input readUInt64]];
        break;
      }
      case 32: {
        [self setModified:[input readUInt64]];
        break;
      }
      case 40: {
        [self setStatusChanged:[input readUInt64]];
        break;
      }
      case 48: {
        [self setSize:[input readUInt64]];
        break;
      }
      case 56: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 64: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 72: {
        [self setMode:[input readUInt32]];
        break;
      }
      case 80: {
        [self setX:[input readUInt64]];
        break;
      }
      case 98: {
        [self setEncryptionKey:[input readData]];
        break;
      }
      case 106: {
        [self setChecksum:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasRelativePath {
  return result.hasRelativePath;
}
- (NSString*) relativePath {
  return result.relativePath;
}
- (EncryptedAttributes_Builder*) setRelativePath:(NSString*) value {
  result.hasRelativePath = YES;
  result.relativePath = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearRelativePath {
  result.hasRelativePath = NO;
  result.relativePath = @"";
  return self;
}
- (BOOL) hasDomain {
  return result.hasDomain;
}
- (NSString*) domain {
  return result.domain;
}
- (EncryptedAttributes_Builder*) setDomain:(NSString*) value {
  result.hasDomain = YES;
  result.domain = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearDomain {
  result.hasDomain = NO;
  result.domain = @"";
  return self;
}
- (BOOL) hasBirth {
  return result.hasBirth;
}
- (int64_t) birth {
  return result.birth;
}
- (EncryptedAttributes_Builder*) setBirth:(int64_t) value {
  result.hasBirth = YES;
  result.birth = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearBirth {
  result.hasBirth = NO;
  result.birth = 0L;
  return self;
}
- (BOOL) hasModified {
  return result.hasModified;
}
- (int64_t) modified {
  return result.modified;
}
- (EncryptedAttributes_Builder*) setModified:(int64_t) value {
  result.hasModified = YES;
  result.modified = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearModified {
  result.hasModified = NO;
  result.modified = 0L;
  return self;
}
- (BOOL) hasStatusChanged {
  return result.hasStatusChanged;
}
- (int64_t) statusChanged {
  return result.statusChanged;
}
- (EncryptedAttributes_Builder*) setStatusChanged:(int64_t) value {
  result.hasStatusChanged = YES;
  result.statusChanged = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearStatusChanged {
  result.hasStatusChanged = NO;
  result.statusChanged = 0L;
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int64_t) size {
  return result.size;
}
- (EncryptedAttributes_Builder*) setSize:(int64_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (int32_t) groupId {
  return result.groupId;
}
- (EncryptedAttributes_Builder*) setGroupId:(int32_t) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (EncryptedAttributes_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasMode {
  return result.hasMode;
}
- (int32_t) mode {
  return result.mode;
}
- (EncryptedAttributes_Builder*) setMode:(int32_t) value {
  result.hasMode = YES;
  result.mode = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearMode {
  result.hasMode = NO;
  result.mode = 0;
  return self;
}
- (BOOL) hasX {
  return result.hasX;
}
- (int64_t) x {
  return result.x;
}
- (EncryptedAttributes_Builder*) setX:(int64_t) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearX {
  result.hasX = NO;
  result.x = 0L;
  return self;
}
- (BOOL) hasEncryptionKey {
  return result.hasEncryptionKey;
}
- (NSData*) encryptionKey {
  return result.encryptionKey;
}
- (EncryptedAttributes_Builder*) setEncryptionKey:(NSData*) value {
  result.hasEncryptionKey = YES;
  result.encryptionKey = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearEncryptionKey {
  result.hasEncryptionKey = NO;
  result.encryptionKey = [NSData data];
  return self;
}
- (BOOL) hasChecksum {
  return result.hasChecksum;
}
- (NSData*) checksum {
  return result.checksum;
}
- (EncryptedAttributes_Builder*) setChecksum:(NSData*) value {
  result.hasChecksum = YES;
  result.checksum = value;
  return self;
}
- (EncryptedAttributes_Builder*) clearChecksum {
  result.hasChecksum = NO;
  result.checksum = [NSData data];
  return self;
}
@end

