// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class AuthChunkL;
@class AuthChunkL_Builder;
@class BackupInfoL;
@class BackupInfoL_Builder;
@class BackupL;
@class BackupL_Builder;
@class ChunkChecksumListL;
@class ChunkChecksumListL_Builder;
@class ChunkErrorIndexL;
@class ChunkErrorIndexL_Builder;
@class ChunkErrorL;
@class ChunkErrorL_Builder;
@class ChunkInfoL;
@class ChunkInfoL_Builder;
@class ChunkReferenceL;
@class ChunkReferenceL_Builder;
@class DeviceInfoL;
@class DeviceInfoL_Builder;
@class DeviceL;
@class DeviceL_Builder;
@class DeviceUdidsL;
@class DeviceUdidsL_Builder;
@class ErrorResponseL;
@class ErrorResponseL_Builder;
@class FileAttributeL;
@class FileAttributeL_Builder;
@class FileAuthL;
@class FileAuthL_Builder;
@class FileChecksumAuthorizationL;
@class FileChecksumAuthorizationL_Builder;
@class FileChecksumAuthorizationListL;
@class FileChecksumAuthorizationListL_Builder;
@class FileChecksumChunkReferencesL;
@class FileChecksumChunkReferencesL_Builder;
@class FileChecksumStorageHostChunkListsL;
@class FileChecksumStorageHostChunkListsL_Builder;
@class FileChunkErrorL;
@class FileChunkErrorL_Builder;
@class FileChunkListL;
@class FileChunkListL_Builder;
@class FileChunkListsL;
@class FileChunkListsL_Builder;
@class FileErrorL;
@class FileErrorL_Builder;
@class FileGroupsL;
@class FileGroupsL_Builder;
@class FileInfoL;
@class FileInfoL_Builder;
@class FileL;
@class FileL_Builder;
@class GetFilesL;
@class GetFilesL_Builder;
@class HeaderL;
@class HeaderL_Builder;
@class HostInfoL;
@class HostInfoL_Builder;
@class KeyL;
@class KeyL_Builder;
@class KeysL;
@class KeysL_Builder;
@class MethodCompletionInfoL;
@class MethodCompletionInfoL_Builder;
@class MethodCompletionInfoListL;
@class MethodCompletionInfoListL_Builder;
@class NameValuePairL;
@class NameValuePairL_Builder;
@class StorageContainerChunkListL;
@class StorageContainerChunkListL_Builder;
@class StorageContainerChunkListsL;
@class StorageContainerChunkListsL_Builder;
@class StorageContainerErrorL;
@class StorageContainerErrorL_Builder;
@class StorageContainerErrorListL;
@class StorageContainerErrorListL_Builder;
@class StorageHostChunkListL;
@class StorageHostChunkListL_Builder;
@class StorageHostChunkListsL;
@class StorageHostChunkListsL_Builder;

@interface ProtocolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface DeviceUdidsL : PBGeneratedMessage {
@private
  BOOL hasUsuallyFalse_:1;
  BOOL hasPsid_:1;
  BOOL usuallyFalse_:1;
  NSString* psid;
  NSMutableArray* mutableUdidsList;
}
- (BOOL) hasPsid;
- (BOOL) hasUsuallyFalse;
@property (readonly, retain) NSString* psid;
- (BOOL) usuallyFalse;
- (NSArray*) udidsList;
- (NSData*) udidsAtIndex:(int32_t) index;

+ (DeviceUdidsL*) defaultInstance;
- (DeviceUdidsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DeviceUdidsL_Builder*) builder;
+ (DeviceUdidsL_Builder*) builder;
+ (DeviceUdidsL_Builder*) builderWithPrototype:(DeviceUdidsL*) prototype;

+ (DeviceUdidsL*) parseFromData:(NSData*) data;
+ (DeviceUdidsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceUdidsL*) parseFromInputStream:(NSInputStream*) input;
+ (DeviceUdidsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceUdidsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DeviceUdidsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DeviceUdidsL_Builder : PBGeneratedMessage_Builder {
@private
  DeviceUdidsL* result;
}

- (DeviceUdidsL*) defaultInstance;

- (DeviceUdidsL_Builder*) clear;
- (DeviceUdidsL_Builder*) clone;

- (DeviceUdidsL*) build;
- (DeviceUdidsL*) buildPartial;

- (DeviceUdidsL_Builder*) mergeFrom:(DeviceUdidsL*) other;
- (DeviceUdidsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DeviceUdidsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPsid;
- (NSString*) psid;
- (DeviceUdidsL_Builder*) setPsid:(NSString*) value;
- (DeviceUdidsL_Builder*) clearPsid;

- (NSArray*) udidsList;
- (NSData*) udidsAtIndex:(int32_t) index;
- (DeviceUdidsL_Builder*) replaceUdidsAtIndex:(int32_t) index with:(NSData*) value;
- (DeviceUdidsL_Builder*) addUdids:(NSData*) value;
- (DeviceUdidsL_Builder*) addAllUdids:(NSArray*) values;
- (DeviceUdidsL_Builder*) clearUdidsList;

- (BOOL) hasUsuallyFalse;
- (BOOL) usuallyFalse;
- (DeviceUdidsL_Builder*) setUsuallyFalse:(BOOL) value;
- (DeviceUdidsL_Builder*) clearUsuallyFalse;
@end

@interface DeviceL : PBGeneratedMessage {
@private
  BOOL hasFullSize_:1;
  BOOL hasKeysLastModified_:1;
  BOOL hasDevice_:1;
  BOOL hasUdid_:1;
  int64_t fullSize;
  int64_t keysLastModified;
  DeviceInfoL* device;
  NSData* udid;
  NSMutableArray* mutableBackupList;
}
- (BOOL) hasUdid;
- (BOOL) hasFullSize;
- (BOOL) hasDevice;
- (BOOL) hasKeysLastModified;
@property (readonly, retain) NSData* udid;
@property (readonly) int64_t fullSize;
@property (readonly, retain) DeviceInfoL* device;
@property (readonly) int64_t keysLastModified;
- (NSArray*) backupList;
- (BackupL*) backupAtIndex:(int32_t) index;

+ (DeviceL*) defaultInstance;
- (DeviceL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DeviceL_Builder*) builder;
+ (DeviceL_Builder*) builder;
+ (DeviceL_Builder*) builderWithPrototype:(DeviceL*) prototype;

+ (DeviceL*) parseFromData:(NSData*) data;
+ (DeviceL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceL*) parseFromInputStream:(NSInputStream*) input;
+ (DeviceL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DeviceL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DeviceL_Builder : PBGeneratedMessage_Builder {
@private
  DeviceL* result;
}

- (DeviceL*) defaultInstance;

- (DeviceL_Builder*) clear;
- (DeviceL_Builder*) clone;

- (DeviceL*) build;
- (DeviceL*) buildPartial;

- (DeviceL_Builder*) mergeFrom:(DeviceL*) other;
- (DeviceL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DeviceL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUdid;
- (NSData*) udid;
- (DeviceL_Builder*) setUdid:(NSData*) value;
- (DeviceL_Builder*) clearUdid;

- (BOOL) hasFullSize;
- (int64_t) fullSize;
- (DeviceL_Builder*) setFullSize:(int64_t) value;
- (DeviceL_Builder*) clearFullSize;

- (NSArray*) backupList;
- (BackupL*) backupAtIndex:(int32_t) index;
- (DeviceL_Builder*) replaceBackupAtIndex:(int32_t) index with:(BackupL*) value;
- (DeviceL_Builder*) addBackup:(BackupL*) value;
- (DeviceL_Builder*) addAllBackup:(NSArray*) values;
- (DeviceL_Builder*) clearBackupList;

- (BOOL) hasDevice;
- (DeviceInfoL*) device;
- (DeviceL_Builder*) setDevice:(DeviceInfoL*) value;
- (DeviceL_Builder*) setDeviceBuilder:(DeviceInfoL_Builder*) builderForValue;
- (DeviceL_Builder*) mergeDevice:(DeviceInfoL*) value;
- (DeviceL_Builder*) clearDevice;

- (BOOL) hasKeysLastModified;
- (int64_t) keysLastModified;
- (DeviceL_Builder*) setKeysLastModified:(int64_t) value;
- (DeviceL_Builder*) clearKeysLastModified;
@end

@interface BackupL : PBGeneratedMessage {
@private
  BOOL hasSize_:1;
  BOOL hasLastModified_:1;
  BOOL hasCommitted_:1;
  BOOL hasSnapshotId_:1;
  BOOL hasInfo_:1;
  int64_t size;
  int64_t lastModified;
  int64_t committed;
  int32_t snapshotId;
  BackupInfoL* info;
}
- (BOOL) hasSnapshotId;
- (BOOL) hasSize;
- (BOOL) hasLastModified;
- (BOOL) hasInfo;
- (BOOL) hasCommitted;
@property (readonly) int32_t snapshotId;
@property (readonly) int64_t size;
@property (readonly) int64_t lastModified;
@property (readonly, retain) BackupInfoL* info;
@property (readonly) int64_t committed;

+ (BackupL*) defaultInstance;
- (BackupL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BackupL_Builder*) builder;
+ (BackupL_Builder*) builder;
+ (BackupL_Builder*) builderWithPrototype:(BackupL*) prototype;

+ (BackupL*) parseFromData:(NSData*) data;
+ (BackupL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BackupL*) parseFromInputStream:(NSInputStream*) input;
+ (BackupL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BackupL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BackupL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BackupL_Builder : PBGeneratedMessage_Builder {
@private
  BackupL* result;
}

- (BackupL*) defaultInstance;

- (BackupL_Builder*) clear;
- (BackupL_Builder*) clone;

- (BackupL*) build;
- (BackupL*) buildPartial;

- (BackupL_Builder*) mergeFrom:(BackupL*) other;
- (BackupL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BackupL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSnapshotId;
- (int32_t) snapshotId;
- (BackupL_Builder*) setSnapshotId:(int32_t) value;
- (BackupL_Builder*) clearSnapshotId;

- (BOOL) hasSize;
- (int64_t) size;
- (BackupL_Builder*) setSize:(int64_t) value;
- (BackupL_Builder*) clearSize;

- (BOOL) hasLastModified;
- (int64_t) lastModified;
- (BackupL_Builder*) setLastModified:(int64_t) value;
- (BackupL_Builder*) clearLastModified;

- (BOOL) hasInfo;
- (BackupInfoL*) info;
- (BackupL_Builder*) setInfo:(BackupInfoL*) value;
- (BackupL_Builder*) setInfoBuilder:(BackupInfoL_Builder*) builderForValue;
- (BackupL_Builder*) mergeInfo:(BackupInfoL*) value;
- (BackupL_Builder*) clearInfo;

- (BOOL) hasCommitted;
- (int64_t) committed;
- (BackupL_Builder*) setCommitted:(int64_t) value;
- (BackupL_Builder*) clearCommitted;
@end

@interface BackupInfoL : PBGeneratedMessage {
@private
  BOOL hasUsually21_:1;
  BOOL hasUsually22_:1;
  BOOL hasUsually1_:1;
  BOOL hasName_:1;
  BOOL hasFirmware_:1;
  BOOL hasBuildEx_:1;
  BOOL hasIdk_:1;
  int32_t usually21;
  int32_t usually22;
  int32_t usually1;
  NSString* name;
  NSString* firmware;
  NSString* buildEx;
  NSData* idk;
}
- (BOOL) hasName;
- (BOOL) hasFirmware;
- (BOOL) hasBuildEx;
- (BOOL) hasUsually21;
- (BOOL) hasIdk;
- (BOOL) hasUsually22;
- (BOOL) hasUsually1;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* firmware;
@property (readonly, retain) NSString* buildEx;
@property (readonly) int32_t usually21;
@property (readonly, retain) NSData* idk;
@property (readonly) int32_t usually22;
@property (readonly) int32_t usually1;

+ (BackupInfoL*) defaultInstance;
- (BackupInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BackupInfoL_Builder*) builder;
+ (BackupInfoL_Builder*) builder;
+ (BackupInfoL_Builder*) builderWithPrototype:(BackupInfoL*) prototype;

+ (BackupInfoL*) parseFromData:(NSData*) data;
+ (BackupInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BackupInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (BackupInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BackupInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BackupInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BackupInfoL_Builder : PBGeneratedMessage_Builder {
@private
  BackupInfoL* result;
}

- (BackupInfoL*) defaultInstance;

- (BackupInfoL_Builder*) clear;
- (BackupInfoL_Builder*) clone;

- (BackupInfoL*) build;
- (BackupInfoL*) buildPartial;

- (BackupInfoL_Builder*) mergeFrom:(BackupInfoL*) other;
- (BackupInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BackupInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (BackupInfoL_Builder*) setName:(NSString*) value;
- (BackupInfoL_Builder*) clearName;

- (BOOL) hasFirmware;
- (NSString*) firmware;
- (BackupInfoL_Builder*) setFirmware:(NSString*) value;
- (BackupInfoL_Builder*) clearFirmware;

- (BOOL) hasBuildEx;
- (NSString*) buildEx;
- (BackupInfoL_Builder*) setBuildEx:(NSString*) value;
- (BackupInfoL_Builder*) clearBuildEx;

- (BOOL) hasUsually21;
- (int32_t) usually21;
- (BackupInfoL_Builder*) setUsually21:(int32_t) value;
- (BackupInfoL_Builder*) clearUsually21;

- (BOOL) hasIdk;
- (NSData*) idk;
- (BackupInfoL_Builder*) setIdk:(NSData*) value;
- (BackupInfoL_Builder*) clearIdk;

- (BOOL) hasUsually22;
- (int32_t) usually22;
- (BackupInfoL_Builder*) setUsually22:(int32_t) value;
- (BackupInfoL_Builder*) clearUsually22;

- (BOOL) hasUsually1;
- (int32_t) usually1;
- (BackupInfoL_Builder*) setUsually1:(int32_t) value;
- (BackupInfoL_Builder*) clearUsually1;
@end

@interface DeviceInfoL : PBGeneratedMessage {
@private
  BOOL hasDeviceClass_:1;
  BOOL hasProductType_:1;
  BOOL hasSerialNumber_:1;
  BOOL hasDeviceColor_:1;
  BOOL hasHardwareModel_:1;
  BOOL hasMarketingName_:1;
  NSString* deviceClass;
  NSString* productType;
  NSString* serialNumber;
  NSString* deviceColor;
  NSString* hardwareModel;
  NSString* marketingName;
}
- (BOOL) hasDeviceClass;
- (BOOL) hasProductType;
- (BOOL) hasSerialNumber;
- (BOOL) hasDeviceColor;
- (BOOL) hasHardwareModel;
- (BOOL) hasMarketingName;
@property (readonly, retain) NSString* deviceClass;
@property (readonly, retain) NSString* productType;
@property (readonly, retain) NSString* serialNumber;
@property (readonly, retain) NSString* deviceColor;
@property (readonly, retain) NSString* hardwareModel;
@property (readonly, retain) NSString* marketingName;

+ (DeviceInfoL*) defaultInstance;
- (DeviceInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DeviceInfoL_Builder*) builder;
+ (DeviceInfoL_Builder*) builder;
+ (DeviceInfoL_Builder*) builderWithPrototype:(DeviceInfoL*) prototype;

+ (DeviceInfoL*) parseFromData:(NSData*) data;
+ (DeviceInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (DeviceInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DeviceInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DeviceInfoL_Builder : PBGeneratedMessage_Builder {
@private
  DeviceInfoL* result;
}

- (DeviceInfoL*) defaultInstance;

- (DeviceInfoL_Builder*) clear;
- (DeviceInfoL_Builder*) clone;

- (DeviceInfoL*) build;
- (DeviceInfoL*) buildPartial;

- (DeviceInfoL_Builder*) mergeFrom:(DeviceInfoL*) other;
- (DeviceInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DeviceInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeviceClass;
- (NSString*) deviceClass;
- (DeviceInfoL_Builder*) setDeviceClass:(NSString*) value;
- (DeviceInfoL_Builder*) clearDeviceClass;

- (BOOL) hasProductType;
- (NSString*) productType;
- (DeviceInfoL_Builder*) setProductType:(NSString*) value;
- (DeviceInfoL_Builder*) clearProductType;

- (BOOL) hasSerialNumber;
- (NSString*) serialNumber;
- (DeviceInfoL_Builder*) setSerialNumber:(NSString*) value;
- (DeviceInfoL_Builder*) clearSerialNumber;

- (BOOL) hasDeviceColor;
- (NSString*) deviceColor;
- (DeviceInfoL_Builder*) setDeviceColor:(NSString*) value;
- (DeviceInfoL_Builder*) clearDeviceColor;

- (BOOL) hasHardwareModel;
- (NSString*) hardwareModel;
- (DeviceInfoL_Builder*) setHardwareModel:(NSString*) value;
- (DeviceInfoL_Builder*) clearHardwareModel;

- (BOOL) hasMarketingName;
- (NSString*) marketingName;
- (DeviceInfoL_Builder*) setMarketingName:(NSString*) value;
- (DeviceInfoL_Builder*) clearMarketingName;
@end

@interface KeysL : PBGeneratedMessage {
@private
  NSMutableArray* mutableKeySetList;
}
- (NSArray*) keySetList;
- (KeyL*) keySetAtIndex:(int32_t) index;

+ (KeysL*) defaultInstance;
- (KeysL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KeysL_Builder*) builder;
+ (KeysL_Builder*) builder;
+ (KeysL_Builder*) builderWithPrototype:(KeysL*) prototype;

+ (KeysL*) parseFromData:(NSData*) data;
+ (KeysL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeysL*) parseFromInputStream:(NSInputStream*) input;
+ (KeysL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeysL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KeysL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KeysL_Builder : PBGeneratedMessage_Builder {
@private
  KeysL* result;
}

- (KeysL*) defaultInstance;

- (KeysL_Builder*) clear;
- (KeysL_Builder*) clone;

- (KeysL*) build;
- (KeysL*) buildPartial;

- (KeysL_Builder*) mergeFrom:(KeysL*) other;
- (KeysL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KeysL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) keySetList;
- (KeyL*) keySetAtIndex:(int32_t) index;
- (KeysL_Builder*) replaceKeySetAtIndex:(int32_t) index with:(KeyL*) value;
- (KeysL_Builder*) addKeySet:(KeyL*) value;
- (KeysL_Builder*) addAllKeySet:(NSArray*) values;
- (KeysL_Builder*) clearKeySetList;
@end

@interface KeyL : PBGeneratedMessage {
@private
  BOOL hasIndex_:1;
  BOOL hasData_:1;
  int32_t index;
  NSData* data;
}
- (BOOL) hasIndex;
- (BOOL) hasData;
@property (readonly) int32_t index;
@property (readonly, retain) NSData* data;

+ (KeyL*) defaultInstance;
- (KeyL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KeyL_Builder*) builder;
+ (KeyL_Builder*) builder;
+ (KeyL_Builder*) builderWithPrototype:(KeyL*) prototype;

+ (KeyL*) parseFromData:(NSData*) data;
+ (KeyL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeyL*) parseFromInputStream:(NSInputStream*) input;
+ (KeyL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeyL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KeyL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KeyL_Builder : PBGeneratedMessage_Builder {
@private
  KeyL* result;
}

- (KeyL*) defaultInstance;

- (KeyL_Builder*) clear;
- (KeyL_Builder*) clone;

- (KeyL*) build;
- (KeyL*) buildPartial;

- (KeyL_Builder*) mergeFrom:(KeyL*) other;
- (KeyL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KeyL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIndex;
- (int32_t) index;
- (KeyL_Builder*) setIndex:(int32_t) value;
- (KeyL_Builder*) clearIndex;

- (BOOL) hasData;
- (NSData*) data;
- (KeyL_Builder*) setData:(NSData*) value;
- (KeyL_Builder*) clearData;
@end

@interface GetFilesL : PBGeneratedMessage {
@private
  BOOL hasHash_:1;
  NSData* hash;
}
- (BOOL) hasHash;
@property (readonly, retain) NSData* hash;

+ (GetFilesL*) defaultInstance;
- (GetFilesL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GetFilesL_Builder*) builder;
+ (GetFilesL_Builder*) builder;
+ (GetFilesL_Builder*) builderWithPrototype:(GetFilesL*) prototype;

+ (GetFilesL*) parseFromData:(NSData*) data;
+ (GetFilesL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetFilesL*) parseFromInputStream:(NSInputStream*) input;
+ (GetFilesL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GetFilesL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GetFilesL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GetFilesL_Builder : PBGeneratedMessage_Builder {
@private
  GetFilesL* result;
}

- (GetFilesL*) defaultInstance;

- (GetFilesL_Builder*) clear;
- (GetFilesL_Builder*) clone;

- (GetFilesL*) build;
- (GetFilesL*) buildPartial;

- (GetFilesL_Builder*) mergeFrom:(GetFilesL*) other;
- (GetFilesL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GetFilesL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHash;
- (NSData*) hash;
- (GetFilesL_Builder*) setHash:(NSData*) value;
- (GetFilesL_Builder*) clearHash;
@end

@interface FileAuthL : PBGeneratedMessage {
@private
  NSMutableArray* mutableMainList;
}
- (NSArray*) mainList;
- (AuthChunkL*) mainAtIndex:(int32_t) index;

+ (FileAuthL*) defaultInstance;
- (FileAuthL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileAuthL_Builder*) builder;
+ (FileAuthL_Builder*) builder;
+ (FileAuthL_Builder*) builderWithPrototype:(FileAuthL*) prototype;

+ (FileAuthL*) parseFromData:(NSData*) data;
+ (FileAuthL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAuthL*) parseFromInputStream:(NSInputStream*) input;
+ (FileAuthL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAuthL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileAuthL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileAuthL_Builder : PBGeneratedMessage_Builder {
@private
  FileAuthL* result;
}

- (FileAuthL*) defaultInstance;

- (FileAuthL_Builder*) clear;
- (FileAuthL_Builder*) clone;

- (FileAuthL*) build;
- (FileAuthL*) buildPartial;

- (FileAuthL_Builder*) mergeFrom:(FileAuthL*) other;
- (FileAuthL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileAuthL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) mainList;
- (AuthChunkL*) mainAtIndex:(int32_t) index;
- (FileAuthL_Builder*) replaceMainAtIndex:(int32_t) index with:(AuthChunkL*) value;
- (FileAuthL_Builder*) addMain:(AuthChunkL*) value;
- (FileAuthL_Builder*) addAllMain:(NSArray*) values;
- (FileAuthL_Builder*) clearMainList;
@end

@interface AuthChunkL : PBGeneratedMessage {
@private
  BOOL hasAuthToken_:1;
  BOOL hasChecksum_:1;
  NSString* authToken;
  NSData* checksum;
}
- (BOOL) hasChecksum;
- (BOOL) hasAuthToken;
@property (readonly, retain) NSData* checksum;
@property (readonly, retain) NSString* authToken;

+ (AuthChunkL*) defaultInstance;
- (AuthChunkL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AuthChunkL_Builder*) builder;
+ (AuthChunkL_Builder*) builder;
+ (AuthChunkL_Builder*) builderWithPrototype:(AuthChunkL*) prototype;

+ (AuthChunkL*) parseFromData:(NSData*) data;
+ (AuthChunkL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthChunkL*) parseFromInputStream:(NSInputStream*) input;
+ (AuthChunkL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthChunkL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AuthChunkL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AuthChunkL_Builder : PBGeneratedMessage_Builder {
@private
  AuthChunkL* result;
}

- (AuthChunkL*) defaultInstance;

- (AuthChunkL_Builder*) clear;
- (AuthChunkL_Builder*) clone;

- (AuthChunkL*) build;
- (AuthChunkL*) buildPartial;

- (AuthChunkL_Builder*) mergeFrom:(AuthChunkL*) other;
- (AuthChunkL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AuthChunkL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChecksum;
- (NSData*) checksum;
- (AuthChunkL_Builder*) setChecksum:(NSData*) value;
- (AuthChunkL_Builder*) clearChecksum;

- (BOOL) hasAuthToken;
- (NSString*) authToken;
- (AuthChunkL_Builder*) setAuthToken:(NSString*) value;
- (AuthChunkL_Builder*) clearAuthToken;
@end

@interface FileAttributeL : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasValue_:1;
  NSString* name;
  NSData* value;
}
- (BOOL) hasName;
- (BOOL) hasValue;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSData* value;

+ (FileAttributeL*) defaultInstance;
- (FileAttributeL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileAttributeL_Builder*) builder;
+ (FileAttributeL_Builder*) builder;
+ (FileAttributeL_Builder*) builderWithPrototype:(FileAttributeL*) prototype;

+ (FileAttributeL*) parseFromData:(NSData*) data;
+ (FileAttributeL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAttributeL*) parseFromInputStream:(NSInputStream*) input;
+ (FileAttributeL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAttributeL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileAttributeL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileAttributeL_Builder : PBGeneratedMessage_Builder {
@private
  FileAttributeL* result;
}

- (FileAttributeL*) defaultInstance;

- (FileAttributeL_Builder*) clear;
- (FileAttributeL_Builder*) clone;

- (FileAttributeL*) build;
- (FileAttributeL*) buildPartial;

- (FileAttributeL_Builder*) mergeFrom:(FileAttributeL*) other;
- (FileAttributeL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileAttributeL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (FileAttributeL_Builder*) setName:(NSString*) value;
- (FileAttributeL_Builder*) clearName;

- (BOOL) hasValue;
- (NSData*) value;
- (FileAttributeL_Builder*) setValue:(NSData*) value;
- (FileAttributeL_Builder*) clearValue;
@end

@interface FileInfoL : PBGeneratedMessage {
@private
  BOOL hasInodeNumber_:1;
  BOOL hasMtime_:1;
  BOOL hasAtime_:1;
  BOOL hasCtime_:1;
  BOOL hasKeybagId_:1;
  BOOL hasMode_:1;
  BOOL hasUser_:1;
  BOOL hasGroup_:1;
  BOOL hasProtectionClass_:1;
  BOOL hasEncryptionKeyVersion_:1;
  BOOL hasDecryptedSize_:1;
  BOOL hasTarget_:1;
  BOOL hasEncryptionKey_:1;
  int64_t inodeNumber;
  int64_t mtime;
  int64_t atime;
  int64_t ctime;
  int32_t keybagId;
  int32_t mode;
  int32_t user;
  int32_t group;
  int32_t protectionClass;
  int32_t encryptionKeyVersion;
  int32_t decryptedSize;
  NSString* target;
  NSData* encryptionKey;
  NSMutableArray* mutableAttributesList;
}
- (BOOL) hasKeybagId;
- (BOOL) hasTarget;
- (BOOL) hasEncryptionKey;
- (BOOL) hasInodeNumber;
- (BOOL) hasMode;
- (BOOL) hasUser;
- (BOOL) hasGroup;
- (BOOL) hasMtime;
- (BOOL) hasAtime;
- (BOOL) hasCtime;
- (BOOL) hasProtectionClass;
- (BOOL) hasEncryptionKeyVersion;
- (BOOL) hasDecryptedSize;
@property (readonly) int32_t keybagId;
@property (readonly, retain) NSString* target;
@property (readonly, retain) NSData* encryptionKey;
@property (readonly) int64_t inodeNumber;
@property (readonly) int32_t mode;
@property (readonly) int32_t user;
@property (readonly) int32_t group;
@property (readonly) int64_t mtime;
@property (readonly) int64_t atime;
@property (readonly) int64_t ctime;
@property (readonly) int32_t protectionClass;
@property (readonly) int32_t encryptionKeyVersion;
@property (readonly) int32_t decryptedSize;
- (NSArray*) attributesList;
- (FileAttributeL*) attributesAtIndex:(int32_t) index;

+ (FileInfoL*) defaultInstance;
- (FileInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileInfoL_Builder*) builder;
+ (FileInfoL_Builder*) builder;
+ (FileInfoL_Builder*) builderWithPrototype:(FileInfoL*) prototype;

+ (FileInfoL*) parseFromData:(NSData*) data;
+ (FileInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (FileInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileInfoL_Builder : PBGeneratedMessage_Builder {
@private
  FileInfoL* result;
}

- (FileInfoL*) defaultInstance;

- (FileInfoL_Builder*) clear;
- (FileInfoL_Builder*) clone;

- (FileInfoL*) build;
- (FileInfoL*) buildPartial;

- (FileInfoL_Builder*) mergeFrom:(FileInfoL*) other;
- (FileInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKeybagId;
- (int32_t) keybagId;
- (FileInfoL_Builder*) setKeybagId:(int32_t) value;
- (FileInfoL_Builder*) clearKeybagId;

- (BOOL) hasTarget;
- (NSString*) target;
- (FileInfoL_Builder*) setTarget:(NSString*) value;
- (FileInfoL_Builder*) clearTarget;

- (BOOL) hasEncryptionKey;
- (NSData*) encryptionKey;
- (FileInfoL_Builder*) setEncryptionKey:(NSData*) value;
- (FileInfoL_Builder*) clearEncryptionKey;

- (BOOL) hasInodeNumber;
- (int64_t) inodeNumber;
- (FileInfoL_Builder*) setInodeNumber:(int64_t) value;
- (FileInfoL_Builder*) clearInodeNumber;

- (BOOL) hasMode;
- (int32_t) mode;
- (FileInfoL_Builder*) setMode:(int32_t) value;
- (FileInfoL_Builder*) clearMode;

- (BOOL) hasUser;
- (int32_t) user;
- (FileInfoL_Builder*) setUser:(int32_t) value;
- (FileInfoL_Builder*) clearUser;

- (BOOL) hasGroup;
- (int32_t) group;
- (FileInfoL_Builder*) setGroup:(int32_t) value;
- (FileInfoL_Builder*) clearGroup;

- (BOOL) hasMtime;
- (int64_t) mtime;
- (FileInfoL_Builder*) setMtime:(int64_t) value;
- (FileInfoL_Builder*) clearMtime;

- (BOOL) hasAtime;
- (int64_t) atime;
- (FileInfoL_Builder*) setAtime:(int64_t) value;
- (FileInfoL_Builder*) clearAtime;

- (BOOL) hasCtime;
- (int64_t) ctime;
- (FileInfoL_Builder*) setCtime:(int64_t) value;
- (FileInfoL_Builder*) clearCtime;

- (BOOL) hasProtectionClass;
- (int32_t) protectionClass;
- (FileInfoL_Builder*) setProtectionClass:(int32_t) value;
- (FileInfoL_Builder*) clearProtectionClass;

- (NSArray*) attributesList;
- (FileAttributeL*) attributesAtIndex:(int32_t) index;
- (FileInfoL_Builder*) replaceAttributesAtIndex:(int32_t) index with:(FileAttributeL*) value;
- (FileInfoL_Builder*) addAttributes:(FileAttributeL*) value;
- (FileInfoL_Builder*) addAllAttributes:(NSArray*) values;
- (FileInfoL_Builder*) clearAttributesList;

- (BOOL) hasEncryptionKeyVersion;
- (int32_t) encryptionKeyVersion;
- (FileInfoL_Builder*) setEncryptionKeyVersion:(int32_t) value;
- (FileInfoL_Builder*) clearEncryptionKeyVersion;

- (BOOL) hasDecryptedSize;
- (int32_t) decryptedSize;
- (FileInfoL_Builder*) setDecryptedSize:(int32_t) value;
- (FileInfoL_Builder*) clearDecryptedSize;
@end

@interface FileL : PBGeneratedMessage {
@private
  BOOL hasBoolVal_:1;
  BOOL hasFileSize_:1;
  BOOL hasDate_:1;
  BOOL hasDomain_:1;
  BOOL hasPath_:1;
  BOOL hasInfo_:1;
  BOOL hasFileName_:1;
  BOOL hasAltFileName_:1;
  BOOL boolVal_:1;
  int64_t fileSize;
  int64_t date;
  NSString* domain;
  NSString* path;
  FileInfoL* info;
  NSData* fileName;
  NSData* altFileName;
}
- (BOOL) hasFileName;
- (BOOL) hasDomain;
- (BOOL) hasPath;
- (BOOL) hasAltFileName;
- (BOOL) hasFileSize;
- (BOOL) hasInfo;
- (BOOL) hasDate;
- (BOOL) hasBoolVal;
@property (readonly, retain) NSData* fileName;
@property (readonly, retain) NSString* domain;
@property (readonly, retain) NSString* path;
@property (readonly, retain) NSData* altFileName;
@property (readonly) int64_t fileSize;
@property (readonly, retain) FileInfoL* info;
@property (readonly) int64_t date;
- (BOOL) boolVal;

+ (FileL*) defaultInstance;
- (FileL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileL_Builder*) builder;
+ (FileL_Builder*) builder;
+ (FileL_Builder*) builderWithPrototype:(FileL*) prototype;

+ (FileL*) parseFromData:(NSData*) data;
+ (FileL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileL*) parseFromInputStream:(NSInputStream*) input;
+ (FileL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileL_Builder : PBGeneratedMessage_Builder {
@private
  FileL* result;
}

- (FileL*) defaultInstance;

- (FileL_Builder*) clear;
- (FileL_Builder*) clone;

- (FileL*) build;
- (FileL*) buildPartial;

- (FileL_Builder*) mergeFrom:(FileL*) other;
- (FileL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileName;
- (NSData*) fileName;
- (FileL_Builder*) setFileName:(NSData*) value;
- (FileL_Builder*) clearFileName;

- (BOOL) hasDomain;
- (NSString*) domain;
- (FileL_Builder*) setDomain:(NSString*) value;
- (FileL_Builder*) clearDomain;

- (BOOL) hasPath;
- (NSString*) path;
- (FileL_Builder*) setPath:(NSString*) value;
- (FileL_Builder*) clearPath;

- (BOOL) hasAltFileName;
- (NSData*) altFileName;
- (FileL_Builder*) setAltFileName:(NSData*) value;
- (FileL_Builder*) clearAltFileName;

- (BOOL) hasFileSize;
- (int64_t) fileSize;
- (FileL_Builder*) setFileSize:(int64_t) value;
- (FileL_Builder*) clearFileSize;

- (BOOL) hasInfo;
- (FileInfoL*) info;
- (FileL_Builder*) setInfo:(FileInfoL*) value;
- (FileL_Builder*) setInfoBuilder:(FileInfoL_Builder*) builderForValue;
- (FileL_Builder*) mergeInfo:(FileInfoL*) value;
- (FileL_Builder*) clearInfo;

- (BOOL) hasDate;
- (int64_t) date;
- (FileL_Builder*) setDate:(int64_t) value;
- (FileL_Builder*) clearDate;

- (BOOL) hasBoolVal;
- (BOOL) boolVal;
- (FileL_Builder*) setBoolVal:(BOOL) value;
- (FileL_Builder*) clearBoolVal;
@end

@interface HeaderL : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  NSString* key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly, retain) NSString* key;
@property (readonly, retain) NSString* value;

+ (HeaderL*) defaultInstance;
- (HeaderL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HeaderL_Builder*) builder;
+ (HeaderL_Builder*) builder;
+ (HeaderL_Builder*) builderWithPrototype:(HeaderL*) prototype;

+ (HeaderL*) parseFromData:(NSData*) data;
+ (HeaderL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeaderL*) parseFromInputStream:(NSInputStream*) input;
+ (HeaderL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeaderL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HeaderL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HeaderL_Builder : PBGeneratedMessage_Builder {
@private
  HeaderL* result;
}

- (HeaderL*) defaultInstance;

- (HeaderL_Builder*) clear;
- (HeaderL_Builder*) clone;

- (HeaderL*) build;
- (HeaderL*) buildPartial;

- (HeaderL_Builder*) mergeFrom:(HeaderL*) other;
- (HeaderL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HeaderL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (HeaderL_Builder*) setKey:(NSString*) value;
- (HeaderL_Builder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (HeaderL_Builder*) setValue:(NSString*) value;
- (HeaderL_Builder*) clearValue;
@end

@interface ChunkInfoL : PBGeneratedMessage {
@private
  BOOL hasChunkChecksum_:1;
  BOOL hasChunkEncryptionKey_:1;
  BOOL hasChunkLength_:1;
  NSData* chunkChecksum;
  NSData* chunkEncryptionKey;
  int32_t chunkLength;
}
- (BOOL) hasChunkChecksum;
- (BOOL) hasChunkEncryptionKey;
- (BOOL) hasChunkLength;
@property (readonly, retain) NSData* chunkChecksum;
@property (readonly, retain) NSData* chunkEncryptionKey;
@property (readonly) int32_t chunkLength;

+ (ChunkInfoL*) defaultInstance;
- (ChunkInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChunkInfoL_Builder*) builder;
+ (ChunkInfoL_Builder*) builder;
+ (ChunkInfoL_Builder*) builderWithPrototype:(ChunkInfoL*) prototype;

+ (ChunkInfoL*) parseFromData:(NSData*) data;
+ (ChunkInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (ChunkInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChunkInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChunkInfoL_Builder : PBGeneratedMessage_Builder {
@private
  ChunkInfoL* result;
}

- (ChunkInfoL*) defaultInstance;

- (ChunkInfoL_Builder*) clear;
- (ChunkInfoL_Builder*) clone;

- (ChunkInfoL*) build;
- (ChunkInfoL*) buildPartial;

- (ChunkInfoL_Builder*) mergeFrom:(ChunkInfoL*) other;
- (ChunkInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChunkInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChunkChecksum;
- (NSData*) chunkChecksum;
- (ChunkInfoL_Builder*) setChunkChecksum:(NSData*) value;
- (ChunkInfoL_Builder*) clearChunkChecksum;

- (BOOL) hasChunkEncryptionKey;
- (NSData*) chunkEncryptionKey;
- (ChunkInfoL_Builder*) setChunkEncryptionKey:(NSData*) value;
- (ChunkInfoL_Builder*) clearChunkEncryptionKey;

- (BOOL) hasChunkLength;
- (int32_t) chunkLength;
- (ChunkInfoL_Builder*) setChunkLength:(int32_t) value;
- (ChunkInfoL_Builder*) clearChunkLength;
@end

@interface NameValuePairL : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasValue_:1;
  NSString* name;
  NSString* value;
}
- (BOOL) hasName;
- (BOOL) hasValue;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* value;

+ (NameValuePairL*) defaultInstance;
- (NameValuePairL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NameValuePairL_Builder*) builder;
+ (NameValuePairL_Builder*) builder;
+ (NameValuePairL_Builder*) builderWithPrototype:(NameValuePairL*) prototype;

+ (NameValuePairL*) parseFromData:(NSData*) data;
+ (NameValuePairL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NameValuePairL*) parseFromInputStream:(NSInputStream*) input;
+ (NameValuePairL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NameValuePairL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NameValuePairL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NameValuePairL_Builder : PBGeneratedMessage_Builder {
@private
  NameValuePairL* result;
}

- (NameValuePairL*) defaultInstance;

- (NameValuePairL_Builder*) clear;
- (NameValuePairL_Builder*) clone;

- (NameValuePairL*) build;
- (NameValuePairL*) buildPartial;

- (NameValuePairL_Builder*) mergeFrom:(NameValuePairL*) other;
- (NameValuePairL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NameValuePairL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (NameValuePairL_Builder*) setName:(NSString*) value;
- (NameValuePairL_Builder*) clearName;

- (BOOL) hasValue;
- (NSString*) value;
- (NameValuePairL_Builder*) setValue:(NSString*) value;
- (NameValuePairL_Builder*) clearValue;
@end

@interface HostInfoL : PBGeneratedMessage {
@private
  BOOL hasHostname_:1;
  BOOL hasMethod_:1;
  BOOL hasUri_:1;
  BOOL hasTransportProtocol_:1;
  BOOL hasTransportProtocolVersion_:1;
  BOOL hasScheme_:1;
  BOOL hasProvider_:1;
  BOOL hasPort_:1;
  NSString* hostname;
  NSString* method;
  NSString* uri;
  NSString* transportProtocol;
  NSString* transportProtocolVersion;
  NSString* scheme;
  NSString* provider;
  int32_t port;
  NSMutableArray* mutableHeadersList;
}
- (BOOL) hasHostname;
- (BOOL) hasPort;
- (BOOL) hasMethod;
- (BOOL) hasUri;
- (BOOL) hasTransportProtocol;
- (BOOL) hasTransportProtocolVersion;
- (BOOL) hasScheme;
- (BOOL) hasProvider;
@property (readonly, retain) NSString* hostname;
@property (readonly) int32_t port;
@property (readonly, retain) NSString* method;
@property (readonly, retain) NSString* uri;
@property (readonly, retain) NSString* transportProtocol;
@property (readonly, retain) NSString* transportProtocolVersion;
@property (readonly, retain) NSString* scheme;
@property (readonly, retain) NSString* provider;
- (NSArray*) headersList;
- (NameValuePairL*) headersAtIndex:(int32_t) index;

+ (HostInfoL*) defaultInstance;
- (HostInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HostInfoL_Builder*) builder;
+ (HostInfoL_Builder*) builder;
+ (HostInfoL_Builder*) builderWithPrototype:(HostInfoL*) prototype;

+ (HostInfoL*) parseFromData:(NSData*) data;
+ (HostInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HostInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (HostInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HostInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HostInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HostInfoL_Builder : PBGeneratedMessage_Builder {
@private
  HostInfoL* result;
}

- (HostInfoL*) defaultInstance;

- (HostInfoL_Builder*) clear;
- (HostInfoL_Builder*) clone;

- (HostInfoL*) build;
- (HostInfoL*) buildPartial;

- (HostInfoL_Builder*) mergeFrom:(HostInfoL*) other;
- (HostInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HostInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHostname;
- (NSString*) hostname;
- (HostInfoL_Builder*) setHostname:(NSString*) value;
- (HostInfoL_Builder*) clearHostname;

- (BOOL) hasPort;
- (int32_t) port;
- (HostInfoL_Builder*) setPort:(int32_t) value;
- (HostInfoL_Builder*) clearPort;

- (BOOL) hasMethod;
- (NSString*) method;
- (HostInfoL_Builder*) setMethod:(NSString*) value;
- (HostInfoL_Builder*) clearMethod;

- (BOOL) hasUri;
- (NSString*) uri;
- (HostInfoL_Builder*) setUri:(NSString*) value;
- (HostInfoL_Builder*) clearUri;

- (BOOL) hasTransportProtocol;
- (NSString*) transportProtocol;
- (HostInfoL_Builder*) setTransportProtocol:(NSString*) value;
- (HostInfoL_Builder*) clearTransportProtocol;

- (BOOL) hasTransportProtocolVersion;
- (NSString*) transportProtocolVersion;
- (HostInfoL_Builder*) setTransportProtocolVersion:(NSString*) value;
- (HostInfoL_Builder*) clearTransportProtocolVersion;

- (BOOL) hasScheme;
- (NSString*) scheme;
- (HostInfoL_Builder*) setScheme:(NSString*) value;
- (HostInfoL_Builder*) clearScheme;

- (NSArray*) headersList;
- (NameValuePairL*) headersAtIndex:(int32_t) index;
- (HostInfoL_Builder*) replaceHeadersAtIndex:(int32_t) index with:(NameValuePairL*) value;
- (HostInfoL_Builder*) addHeaders:(NameValuePairL*) value;
- (HostInfoL_Builder*) addAllHeaders:(NSArray*) values;
- (HostInfoL_Builder*) clearHeadersList;

- (BOOL) hasProvider;
- (NSString*) provider;
- (HostInfoL_Builder*) setProvider:(NSString*) value;
- (HostInfoL_Builder*) clearProvider;
@end

@interface ErrorResponseL : PBGeneratedMessage {
@private
  BOOL hasErrorCode_:1;
  BOOL hasDomain_:1;
  BOOL hasErrorDescription_:1;
  int32_t errorCode;
  NSString* domain;
  NSString* errorDescription;
  NSMutableArray* mutableUnderlyingErrorsList;
  NSMutableArray* mutableNameValuePairList;
}
- (BOOL) hasDomain;
- (BOOL) hasErrorCode;
- (BOOL) hasErrorDescription;
@property (readonly, retain) NSString* domain;
@property (readonly) int32_t errorCode;
@property (readonly, retain) NSString* errorDescription;
- (NSArray*) underlyingErrorsList;
- (ErrorResponseL*) underlyingErrorsAtIndex:(int32_t) index;
- (NSArray*) nameValuePairList;
- (NameValuePairL*) nameValuePairAtIndex:(int32_t) index;

+ (ErrorResponseL*) defaultInstance;
- (ErrorResponseL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ErrorResponseL_Builder*) builder;
+ (ErrorResponseL_Builder*) builder;
+ (ErrorResponseL_Builder*) builderWithPrototype:(ErrorResponseL*) prototype;

+ (ErrorResponseL*) parseFromData:(NSData*) data;
+ (ErrorResponseL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorResponseL*) parseFromInputStream:(NSInputStream*) input;
+ (ErrorResponseL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorResponseL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ErrorResponseL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ErrorResponseL_Builder : PBGeneratedMessage_Builder {
@private
  ErrorResponseL* result;
}

- (ErrorResponseL*) defaultInstance;

- (ErrorResponseL_Builder*) clear;
- (ErrorResponseL_Builder*) clone;

- (ErrorResponseL*) build;
- (ErrorResponseL*) buildPartial;

- (ErrorResponseL_Builder*) mergeFrom:(ErrorResponseL*) other;
- (ErrorResponseL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ErrorResponseL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDomain;
- (NSString*) domain;
- (ErrorResponseL_Builder*) setDomain:(NSString*) value;
- (ErrorResponseL_Builder*) clearDomain;

- (BOOL) hasErrorCode;
- (int32_t) errorCode;
- (ErrorResponseL_Builder*) setErrorCode:(int32_t) value;
- (ErrorResponseL_Builder*) clearErrorCode;

- (BOOL) hasErrorDescription;
- (NSString*) errorDescription;
- (ErrorResponseL_Builder*) setErrorDescription:(NSString*) value;
- (ErrorResponseL_Builder*) clearErrorDescription;

- (NSArray*) underlyingErrorsList;
- (ErrorResponseL*) underlyingErrorsAtIndex:(int32_t) index;
- (ErrorResponseL_Builder*) replaceUnderlyingErrorsAtIndex:(int32_t) index with:(ErrorResponseL*) value;
- (ErrorResponseL_Builder*) addUnderlyingErrors:(ErrorResponseL*) value;
- (ErrorResponseL_Builder*) addAllUnderlyingErrors:(NSArray*) values;
- (ErrorResponseL_Builder*) clearUnderlyingErrorsList;

- (NSArray*) nameValuePairList;
- (NameValuePairL*) nameValuePairAtIndex:(int32_t) index;
- (ErrorResponseL_Builder*) replaceNameValuePairAtIndex:(int32_t) index with:(NameValuePairL*) value;
- (ErrorResponseL_Builder*) addNameValuePair:(NameValuePairL*) value;
- (ErrorResponseL_Builder*) addAllNameValuePair:(NSArray*) values;
- (ErrorResponseL_Builder*) clearNameValuePairList;
@end

@interface FileErrorL : PBGeneratedMessage {
@private
  BOOL hasErrorResponse_:1;
  BOOL hasFileChecksum_:1;
  ErrorResponseL* errorResponse;
  NSData* fileChecksum;
}
- (BOOL) hasFileChecksum;
- (BOOL) hasErrorResponse;
@property (readonly, retain) NSData* fileChecksum;
@property (readonly, retain) ErrorResponseL* errorResponse;

+ (FileErrorL*) defaultInstance;
- (FileErrorL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileErrorL_Builder*) builder;
+ (FileErrorL_Builder*) builder;
+ (FileErrorL_Builder*) builderWithPrototype:(FileErrorL*) prototype;

+ (FileErrorL*) parseFromData:(NSData*) data;
+ (FileErrorL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileErrorL*) parseFromInputStream:(NSInputStream*) input;
+ (FileErrorL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileErrorL_Builder : PBGeneratedMessage_Builder {
@private
  FileErrorL* result;
}

- (FileErrorL*) defaultInstance;

- (FileErrorL_Builder*) clear;
- (FileErrorL_Builder*) clone;

- (FileErrorL*) build;
- (FileErrorL*) buildPartial;

- (FileErrorL_Builder*) mergeFrom:(FileErrorL*) other;
- (FileErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileChecksum;
- (NSData*) fileChecksum;
- (FileErrorL_Builder*) setFileChecksum:(NSData*) value;
- (FileErrorL_Builder*) clearFileChecksum;

- (BOOL) hasErrorResponse;
- (ErrorResponseL*) errorResponse;
- (FileErrorL_Builder*) setErrorResponse:(ErrorResponseL*) value;
- (FileErrorL_Builder*) setErrorResponseBuilder:(ErrorResponseL_Builder*) builderForValue;
- (FileErrorL_Builder*) mergeErrorResponse:(ErrorResponseL*) value;
- (FileErrorL_Builder*) clearErrorResponse;
@end

@interface ChunkErrorL : PBGeneratedMessage {
@private
  BOOL hasErrorResponse_:1;
  BOOL hasChunkChecksum_:1;
  ErrorResponseL* errorResponse;
  NSData* chunkChecksum;
}
- (BOOL) hasChunkChecksum;
- (BOOL) hasErrorResponse;
@property (readonly, retain) NSData* chunkChecksum;
@property (readonly, retain) ErrorResponseL* errorResponse;

+ (ChunkErrorL*) defaultInstance;
- (ChunkErrorL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChunkErrorL_Builder*) builder;
+ (ChunkErrorL_Builder*) builder;
+ (ChunkErrorL_Builder*) builderWithPrototype:(ChunkErrorL*) prototype;

+ (ChunkErrorL*) parseFromData:(NSData*) data;
+ (ChunkErrorL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkErrorL*) parseFromInputStream:(NSInputStream*) input;
+ (ChunkErrorL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChunkErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChunkErrorL_Builder : PBGeneratedMessage_Builder {
@private
  ChunkErrorL* result;
}

- (ChunkErrorL*) defaultInstance;

- (ChunkErrorL_Builder*) clear;
- (ChunkErrorL_Builder*) clone;

- (ChunkErrorL*) build;
- (ChunkErrorL*) buildPartial;

- (ChunkErrorL_Builder*) mergeFrom:(ChunkErrorL*) other;
- (ChunkErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChunkErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChunkChecksum;
- (NSData*) chunkChecksum;
- (ChunkErrorL_Builder*) setChunkChecksum:(NSData*) value;
- (ChunkErrorL_Builder*) clearChunkChecksum;

- (BOOL) hasErrorResponse;
- (ErrorResponseL*) errorResponse;
- (ChunkErrorL_Builder*) setErrorResponse:(ErrorResponseL*) value;
- (ChunkErrorL_Builder*) setErrorResponseBuilder:(ErrorResponseL_Builder*) builderForValue;
- (ChunkErrorL_Builder*) mergeErrorResponse:(ErrorResponseL*) value;
- (ChunkErrorL_Builder*) clearErrorResponse;
@end

@interface ChunkErrorIndexL : PBGeneratedMessage {
@private
  BOOL hasErrorResponse_:1;
  BOOL hasChunkChecksum_:1;
  BOOL hasChunkIndex_:1;
  ErrorResponseL* errorResponse;
  NSData* chunkChecksum;
  int32_t chunkIndex;
}
- (BOOL) hasChunkChecksum;
- (BOOL) hasErrorResponse;
- (BOOL) hasChunkIndex;
@property (readonly, retain) NSData* chunkChecksum;
@property (readonly, retain) ErrorResponseL* errorResponse;
@property (readonly) int32_t chunkIndex;

+ (ChunkErrorIndexL*) defaultInstance;
- (ChunkErrorIndexL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChunkErrorIndexL_Builder*) builder;
+ (ChunkErrorIndexL_Builder*) builder;
+ (ChunkErrorIndexL_Builder*) builderWithPrototype:(ChunkErrorIndexL*) prototype;

+ (ChunkErrorIndexL*) parseFromData:(NSData*) data;
+ (ChunkErrorIndexL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkErrorIndexL*) parseFromInputStream:(NSInputStream*) input;
+ (ChunkErrorIndexL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkErrorIndexL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChunkErrorIndexL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChunkErrorIndexL_Builder : PBGeneratedMessage_Builder {
@private
  ChunkErrorIndexL* result;
}

- (ChunkErrorIndexL*) defaultInstance;

- (ChunkErrorIndexL_Builder*) clear;
- (ChunkErrorIndexL_Builder*) clone;

- (ChunkErrorIndexL*) build;
- (ChunkErrorIndexL*) buildPartial;

- (ChunkErrorIndexL_Builder*) mergeFrom:(ChunkErrorIndexL*) other;
- (ChunkErrorIndexL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChunkErrorIndexL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChunkChecksum;
- (NSData*) chunkChecksum;
- (ChunkErrorIndexL_Builder*) setChunkChecksum:(NSData*) value;
- (ChunkErrorIndexL_Builder*) clearChunkChecksum;

- (BOOL) hasErrorResponse;
- (ErrorResponseL*) errorResponse;
- (ChunkErrorIndexL_Builder*) setErrorResponse:(ErrorResponseL*) value;
- (ChunkErrorIndexL_Builder*) setErrorResponseBuilder:(ErrorResponseL_Builder*) builderForValue;
- (ChunkErrorIndexL_Builder*) mergeErrorResponse:(ErrorResponseL*) value;
- (ChunkErrorIndexL_Builder*) clearErrorResponse;

- (BOOL) hasChunkIndex;
- (int32_t) chunkIndex;
- (ChunkErrorIndexL_Builder*) setChunkIndex:(int32_t) value;
- (ChunkErrorIndexL_Builder*) clearChunkIndex;
@end

@interface FileChunkErrorL : PBGeneratedMessage {
@private
  BOOL hasFileChecksum_:1;
  NSData* fileChecksum;
  NSMutableArray* mutableChunkErrorList;
}
- (BOOL) hasFileChecksum;
@property (readonly, retain) NSData* fileChecksum;
- (NSArray*) chunkErrorList;
- (ChunkErrorIndexL*) chunkErrorAtIndex:(int32_t) index;

+ (FileChunkErrorL*) defaultInstance;
- (FileChunkErrorL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChunkErrorL_Builder*) builder;
+ (FileChunkErrorL_Builder*) builder;
+ (FileChunkErrorL_Builder*) builderWithPrototype:(FileChunkErrorL*) prototype;

+ (FileChunkErrorL*) parseFromData:(NSData*) data;
+ (FileChunkErrorL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkErrorL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChunkErrorL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChunkErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChunkErrorL_Builder : PBGeneratedMessage_Builder {
@private
  FileChunkErrorL* result;
}

- (FileChunkErrorL*) defaultInstance;

- (FileChunkErrorL_Builder*) clear;
- (FileChunkErrorL_Builder*) clone;

- (FileChunkErrorL*) build;
- (FileChunkErrorL*) buildPartial;

- (FileChunkErrorL_Builder*) mergeFrom:(FileChunkErrorL*) other;
- (FileChunkErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChunkErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileChecksum;
- (NSData*) fileChecksum;
- (FileChunkErrorL_Builder*) setFileChecksum:(NSData*) value;
- (FileChunkErrorL_Builder*) clearFileChecksum;

- (NSArray*) chunkErrorList;
- (ChunkErrorIndexL*) chunkErrorAtIndex:(int32_t) index;
- (FileChunkErrorL_Builder*) replaceChunkErrorAtIndex:(int32_t) index with:(ChunkErrorIndexL*) value;
- (FileChunkErrorL_Builder*) addChunkError:(ChunkErrorIndexL*) value;
- (FileChunkErrorL_Builder*) addAllChunkError:(NSArray*) values;
- (FileChunkErrorL_Builder*) clearChunkErrorList;
@end

@interface StorageContainerErrorL : PBGeneratedMessage {
@private
  BOOL hasStorageContainerKey_:1;
  BOOL hasErrorResponse_:1;
  NSString* storageContainerKey;
  ErrorResponseL* errorResponse;
}
- (BOOL) hasStorageContainerKey;
- (BOOL) hasErrorResponse;
@property (readonly, retain) NSString* storageContainerKey;
@property (readonly, retain) ErrorResponseL* errorResponse;

+ (StorageContainerErrorL*) defaultInstance;
- (StorageContainerErrorL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageContainerErrorL_Builder*) builder;
+ (StorageContainerErrorL_Builder*) builder;
+ (StorageContainerErrorL_Builder*) builderWithPrototype:(StorageContainerErrorL*) prototype;

+ (StorageContainerErrorL*) parseFromData:(NSData*) data;
+ (StorageContainerErrorL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerErrorL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageContainerErrorL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageContainerErrorL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageContainerErrorL_Builder : PBGeneratedMessage_Builder {
@private
  StorageContainerErrorL* result;
}

- (StorageContainerErrorL*) defaultInstance;

- (StorageContainerErrorL_Builder*) clear;
- (StorageContainerErrorL_Builder*) clone;

- (StorageContainerErrorL*) build;
- (StorageContainerErrorL*) buildPartial;

- (StorageContainerErrorL_Builder*) mergeFrom:(StorageContainerErrorL*) other;
- (StorageContainerErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageContainerErrorL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStorageContainerKey;
- (NSString*) storageContainerKey;
- (StorageContainerErrorL_Builder*) setStorageContainerKey:(NSString*) value;
- (StorageContainerErrorL_Builder*) clearStorageContainerKey;

- (BOOL) hasErrorResponse;
- (ErrorResponseL*) errorResponse;
- (StorageContainerErrorL_Builder*) setErrorResponse:(ErrorResponseL*) value;
- (StorageContainerErrorL_Builder*) setErrorResponseBuilder:(ErrorResponseL_Builder*) builderForValue;
- (StorageContainerErrorL_Builder*) mergeErrorResponse:(ErrorResponseL*) value;
- (StorageContainerErrorL_Builder*) clearErrorResponse;
@end

@interface MethodCompletionInfoL : PBGeneratedMessage {
@private
  BOOL hasUrl_:1;
  BOOL hasResponseStatusLine_:1;
  BOOL hasStorageContainerAuthorizationToken_:1;
  BOOL hasError_:1;
  BOOL hasResponseBody_:1;
  BOOL hasClientComputedMd5_:1;
  BOOL hasResponseStatusCode_:1;
  NSString* url;
  NSString* responseStatusLine;
  NSString* storageContainerAuthorizationToken;
  ErrorResponseL* error;
  NSData* responseBody;
  NSData* clientComputedMd5;
  int32_t responseStatusCode;
  NSMutableArray* mutableVendorResponseHeadersList;
  NSMutableArray* mutableVendorNvPairsList;
  NSMutableArray* mutableClientNvPairsList;
}
- (BOOL) hasUrl;
- (BOOL) hasResponseStatusCode;
- (BOOL) hasResponseStatusLine;
- (BOOL) hasResponseBody;
- (BOOL) hasError;
- (BOOL) hasClientComputedMd5;
- (BOOL) hasStorageContainerAuthorizationToken;
@property (readonly, retain) NSString* url;
@property (readonly) int32_t responseStatusCode;
@property (readonly, retain) NSString* responseStatusLine;
@property (readonly, retain) NSData* responseBody;
@property (readonly, retain) ErrorResponseL* error;
@property (readonly, retain) NSData* clientComputedMd5;
@property (readonly, retain) NSString* storageContainerAuthorizationToken;
- (NSArray*) vendorResponseHeadersList;
- (NameValuePairL*) vendorResponseHeadersAtIndex:(int32_t) index;
- (NSArray*) vendorNvPairsList;
- (NameValuePairL*) vendorNvPairsAtIndex:(int32_t) index;
- (NSArray*) clientNvPairsList;
- (NameValuePairL*) clientNvPairsAtIndex:(int32_t) index;

+ (MethodCompletionInfoL*) defaultInstance;
- (MethodCompletionInfoL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MethodCompletionInfoL_Builder*) builder;
+ (MethodCompletionInfoL_Builder*) builder;
+ (MethodCompletionInfoL_Builder*) builderWithPrototype:(MethodCompletionInfoL*) prototype;

+ (MethodCompletionInfoL*) parseFromData:(NSData*) data;
+ (MethodCompletionInfoL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MethodCompletionInfoL*) parseFromInputStream:(NSInputStream*) input;
+ (MethodCompletionInfoL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MethodCompletionInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MethodCompletionInfoL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MethodCompletionInfoL_Builder : PBGeneratedMessage_Builder {
@private
  MethodCompletionInfoL* result;
}

- (MethodCompletionInfoL*) defaultInstance;

- (MethodCompletionInfoL_Builder*) clear;
- (MethodCompletionInfoL_Builder*) clone;

- (MethodCompletionInfoL*) build;
- (MethodCompletionInfoL*) buildPartial;

- (MethodCompletionInfoL_Builder*) mergeFrom:(MethodCompletionInfoL*) other;
- (MethodCompletionInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MethodCompletionInfoL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (MethodCompletionInfoL_Builder*) setUrl:(NSString*) value;
- (MethodCompletionInfoL_Builder*) clearUrl;

- (BOOL) hasResponseStatusCode;
- (int32_t) responseStatusCode;
- (MethodCompletionInfoL_Builder*) setResponseStatusCode:(int32_t) value;
- (MethodCompletionInfoL_Builder*) clearResponseStatusCode;

- (BOOL) hasResponseStatusLine;
- (NSString*) responseStatusLine;
- (MethodCompletionInfoL_Builder*) setResponseStatusLine:(NSString*) value;
- (MethodCompletionInfoL_Builder*) clearResponseStatusLine;

- (NSArray*) vendorResponseHeadersList;
- (NameValuePairL*) vendorResponseHeadersAtIndex:(int32_t) index;
- (MethodCompletionInfoL_Builder*) replaceVendorResponseHeadersAtIndex:(int32_t) index with:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addVendorResponseHeaders:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addAllVendorResponseHeaders:(NSArray*) values;
- (MethodCompletionInfoL_Builder*) clearVendorResponseHeadersList;

- (BOOL) hasResponseBody;
- (NSData*) responseBody;
- (MethodCompletionInfoL_Builder*) setResponseBody:(NSData*) value;
- (MethodCompletionInfoL_Builder*) clearResponseBody;

- (BOOL) hasError;
- (ErrorResponseL*) error;
- (MethodCompletionInfoL_Builder*) setError:(ErrorResponseL*) value;
- (MethodCompletionInfoL_Builder*) setErrorBuilder:(ErrorResponseL_Builder*) builderForValue;
- (MethodCompletionInfoL_Builder*) mergeError:(ErrorResponseL*) value;
- (MethodCompletionInfoL_Builder*) clearError;

- (BOOL) hasClientComputedMd5;
- (NSData*) clientComputedMd5;
- (MethodCompletionInfoL_Builder*) setClientComputedMd5:(NSData*) value;
- (MethodCompletionInfoL_Builder*) clearClientComputedMd5;

- (NSArray*) vendorNvPairsList;
- (NameValuePairL*) vendorNvPairsAtIndex:(int32_t) index;
- (MethodCompletionInfoL_Builder*) replaceVendorNvPairsAtIndex:(int32_t) index with:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addVendorNvPairs:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addAllVendorNvPairs:(NSArray*) values;
- (MethodCompletionInfoL_Builder*) clearVendorNvPairsList;

- (NSArray*) clientNvPairsList;
- (NameValuePairL*) clientNvPairsAtIndex:(int32_t) index;
- (MethodCompletionInfoL_Builder*) replaceClientNvPairsAtIndex:(int32_t) index with:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addClientNvPairs:(NameValuePairL*) value;
- (MethodCompletionInfoL_Builder*) addAllClientNvPairs:(NSArray*) values;
- (MethodCompletionInfoL_Builder*) clearClientNvPairsList;

- (BOOL) hasStorageContainerAuthorizationToken;
- (NSString*) storageContainerAuthorizationToken;
- (MethodCompletionInfoL_Builder*) setStorageContainerAuthorizationToken:(NSString*) value;
- (MethodCompletionInfoL_Builder*) clearStorageContainerAuthorizationToken;
@end

@interface MethodCompletionInfoListL : PBGeneratedMessage {
@private
  NSMutableArray* mutableMethodCompletionInfoDataList;
}
- (NSArray*) methodCompletionInfoDataList;
- (MethodCompletionInfoL*) methodCompletionInfoDataAtIndex:(int32_t) index;

+ (MethodCompletionInfoListL*) defaultInstance;
- (MethodCompletionInfoListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MethodCompletionInfoListL_Builder*) builder;
+ (MethodCompletionInfoListL_Builder*) builder;
+ (MethodCompletionInfoListL_Builder*) builderWithPrototype:(MethodCompletionInfoListL*) prototype;

+ (MethodCompletionInfoListL*) parseFromData:(NSData*) data;
+ (MethodCompletionInfoListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MethodCompletionInfoListL*) parseFromInputStream:(NSInputStream*) input;
+ (MethodCompletionInfoListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MethodCompletionInfoListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MethodCompletionInfoListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MethodCompletionInfoListL_Builder : PBGeneratedMessage_Builder {
@private
  MethodCompletionInfoListL* result;
}

- (MethodCompletionInfoListL*) defaultInstance;

- (MethodCompletionInfoListL_Builder*) clear;
- (MethodCompletionInfoListL_Builder*) clone;

- (MethodCompletionInfoListL*) build;
- (MethodCompletionInfoListL*) buildPartial;

- (MethodCompletionInfoListL_Builder*) mergeFrom:(MethodCompletionInfoListL*) other;
- (MethodCompletionInfoListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MethodCompletionInfoListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) methodCompletionInfoDataList;
- (MethodCompletionInfoL*) methodCompletionInfoDataAtIndex:(int32_t) index;
- (MethodCompletionInfoListL_Builder*) replaceMethodCompletionInfoDataAtIndex:(int32_t) index with:(MethodCompletionInfoL*) value;
- (MethodCompletionInfoListL_Builder*) addMethodCompletionInfoData:(MethodCompletionInfoL*) value;
- (MethodCompletionInfoListL_Builder*) addAllMethodCompletionInfoData:(NSArray*) values;
- (MethodCompletionInfoListL_Builder*) clearMethodCompletionInfoDataList;
@end

@interface FileChunkListL : PBGeneratedMessage {
@private
  BOOL hasAuthorization_:1;
  BOOL hasFileChecksum_:1;
  NSString* authorization;
  NSData* fileChecksum;
  NSMutableArray* mutableChunkInfoList;
}
- (BOOL) hasFileChecksum;
- (BOOL) hasAuthorization;
@property (readonly, retain) NSData* fileChecksum;
@property (readonly, retain) NSString* authorization;
- (NSArray*) chunkInfoList;
- (ChunkInfoL*) chunkInfoAtIndex:(int32_t) index;

+ (FileChunkListL*) defaultInstance;
- (FileChunkListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChunkListL_Builder*) builder;
+ (FileChunkListL_Builder*) builder;
+ (FileChunkListL_Builder*) builderWithPrototype:(FileChunkListL*) prototype;

+ (FileChunkListL*) parseFromData:(NSData*) data;
+ (FileChunkListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkListL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChunkListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChunkListL_Builder : PBGeneratedMessage_Builder {
@private
  FileChunkListL* result;
}

- (FileChunkListL*) defaultInstance;

- (FileChunkListL_Builder*) clear;
- (FileChunkListL_Builder*) clone;

- (FileChunkListL*) build;
- (FileChunkListL*) buildPartial;

- (FileChunkListL_Builder*) mergeFrom:(FileChunkListL*) other;
- (FileChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileChecksum;
- (NSData*) fileChecksum;
- (FileChunkListL_Builder*) setFileChecksum:(NSData*) value;
- (FileChunkListL_Builder*) clearFileChecksum;

- (BOOL) hasAuthorization;
- (NSString*) authorization;
- (FileChunkListL_Builder*) setAuthorization:(NSString*) value;
- (FileChunkListL_Builder*) clearAuthorization;

- (NSArray*) chunkInfoList;
- (ChunkInfoL*) chunkInfoAtIndex:(int32_t) index;
- (FileChunkListL_Builder*) replaceChunkInfoAtIndex:(int32_t) index with:(ChunkInfoL*) value;
- (FileChunkListL_Builder*) addChunkInfo:(ChunkInfoL*) value;
- (FileChunkListL_Builder*) addAllChunkInfo:(NSArray*) values;
- (FileChunkListL_Builder*) clearChunkInfoList;
@end

@interface FileChunkListsL : PBGeneratedMessage {
@private
  NSMutableArray* mutableFileChunkListList;
}
- (NSArray*) fileChunkListList;
- (FileChunkListL*) fileChunkListAtIndex:(int32_t) index;

+ (FileChunkListsL*) defaultInstance;
- (FileChunkListsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChunkListsL_Builder*) builder;
+ (FileChunkListsL_Builder*) builder;
+ (FileChunkListsL_Builder*) builderWithPrototype:(FileChunkListsL*) prototype;

+ (FileChunkListsL*) parseFromData:(NSData*) data;
+ (FileChunkListsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkListsL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChunkListsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChunkListsL_Builder : PBGeneratedMessage_Builder {
@private
  FileChunkListsL* result;
}

- (FileChunkListsL*) defaultInstance;

- (FileChunkListsL_Builder*) clear;
- (FileChunkListsL_Builder*) clone;

- (FileChunkListsL*) build;
- (FileChunkListsL*) buildPartial;

- (FileChunkListsL_Builder*) mergeFrom:(FileChunkListsL*) other;
- (FileChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) fileChunkListList;
- (FileChunkListL*) fileChunkListAtIndex:(int32_t) index;
- (FileChunkListsL_Builder*) replaceFileChunkListAtIndex:(int32_t) index with:(FileChunkListL*) value;
- (FileChunkListsL_Builder*) addFileChunkList:(FileChunkListL*) value;
- (FileChunkListsL_Builder*) addAllFileChunkList:(NSArray*) values;
- (FileChunkListsL_Builder*) clearFileChunkListList;
@end

@interface StorageContainerChunkListL : PBGeneratedMessage {
@private
  BOOL hasStorageContainerAuthorizationToken_:1;
  BOOL hasHostInfo_:1;
  BOOL hasStorageContainerKey_:1;
  NSString* storageContainerAuthorizationToken;
  HostInfoL* hostInfo;
  NSData* storageContainerKey;
  NSMutableArray* mutableChunkChecksumList;
}
- (BOOL) hasStorageContainerKey;
- (BOOL) hasHostInfo;
- (BOOL) hasStorageContainerAuthorizationToken;
@property (readonly, retain) NSData* storageContainerKey;
@property (readonly, retain) HostInfoL* hostInfo;
@property (readonly, retain) NSString* storageContainerAuthorizationToken;
- (NSArray*) chunkChecksumList;
- (NSData*) chunkChecksumAtIndex:(int32_t) index;

+ (StorageContainerChunkListL*) defaultInstance;
- (StorageContainerChunkListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageContainerChunkListL_Builder*) builder;
+ (StorageContainerChunkListL_Builder*) builder;
+ (StorageContainerChunkListL_Builder*) builderWithPrototype:(StorageContainerChunkListL*) prototype;

+ (StorageContainerChunkListL*) parseFromData:(NSData*) data;
+ (StorageContainerChunkListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerChunkListL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageContainerChunkListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageContainerChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageContainerChunkListL_Builder : PBGeneratedMessage_Builder {
@private
  StorageContainerChunkListL* result;
}

- (StorageContainerChunkListL*) defaultInstance;

- (StorageContainerChunkListL_Builder*) clear;
- (StorageContainerChunkListL_Builder*) clone;

- (StorageContainerChunkListL*) build;
- (StorageContainerChunkListL*) buildPartial;

- (StorageContainerChunkListL_Builder*) mergeFrom:(StorageContainerChunkListL*) other;
- (StorageContainerChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageContainerChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStorageContainerKey;
- (NSData*) storageContainerKey;
- (StorageContainerChunkListL_Builder*) setStorageContainerKey:(NSData*) value;
- (StorageContainerChunkListL_Builder*) clearStorageContainerKey;

- (BOOL) hasHostInfo;
- (HostInfoL*) hostInfo;
- (StorageContainerChunkListL_Builder*) setHostInfo:(HostInfoL*) value;
- (StorageContainerChunkListL_Builder*) setHostInfoBuilder:(HostInfoL_Builder*) builderForValue;
- (StorageContainerChunkListL_Builder*) mergeHostInfo:(HostInfoL*) value;
- (StorageContainerChunkListL_Builder*) clearHostInfo;

- (NSArray*) chunkChecksumList;
- (NSData*) chunkChecksumAtIndex:(int32_t) index;
- (StorageContainerChunkListL_Builder*) replaceChunkChecksumAtIndex:(int32_t) index with:(NSData*) value;
- (StorageContainerChunkListL_Builder*) addChunkChecksum:(NSData*) value;
- (StorageContainerChunkListL_Builder*) addAllChunkChecksum:(NSArray*) values;
- (StorageContainerChunkListL_Builder*) clearChunkChecksumList;

- (BOOL) hasStorageContainerAuthorizationToken;
- (NSString*) storageContainerAuthorizationToken;
- (StorageContainerChunkListL_Builder*) setStorageContainerAuthorizationToken:(NSString*) value;
- (StorageContainerChunkListL_Builder*) clearStorageContainerAuthorizationToken;
@end

@interface StorageContainerChunkListsL : PBGeneratedMessage {
@private
  BOOL hasVerbosityLevel_:1;
  int32_t verbosityLevel;
  NSMutableArray* mutableStorageContainerChunkListList;
  NSMutableArray* mutableFileErrorList;
}
- (BOOL) hasVerbosityLevel;
@property (readonly) int32_t verbosityLevel;
- (NSArray*) storageContainerChunkListList;
- (StorageContainerChunkListL*) storageContainerChunkListAtIndex:(int32_t) index;
- (NSArray*) fileErrorList;
- (FileErrorL*) fileErrorAtIndex:(int32_t) index;

+ (StorageContainerChunkListsL*) defaultInstance;
- (StorageContainerChunkListsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageContainerChunkListsL_Builder*) builder;
+ (StorageContainerChunkListsL_Builder*) builder;
+ (StorageContainerChunkListsL_Builder*) builderWithPrototype:(StorageContainerChunkListsL*) prototype;

+ (StorageContainerChunkListsL*) parseFromData:(NSData*) data;
+ (StorageContainerChunkListsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerChunkListsL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageContainerChunkListsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageContainerChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageContainerChunkListsL_Builder : PBGeneratedMessage_Builder {
@private
  StorageContainerChunkListsL* result;
}

- (StorageContainerChunkListsL*) defaultInstance;

- (StorageContainerChunkListsL_Builder*) clear;
- (StorageContainerChunkListsL_Builder*) clone;

- (StorageContainerChunkListsL*) build;
- (StorageContainerChunkListsL*) buildPartial;

- (StorageContainerChunkListsL_Builder*) mergeFrom:(StorageContainerChunkListsL*) other;
- (StorageContainerChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageContainerChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) storageContainerChunkListList;
- (StorageContainerChunkListL*) storageContainerChunkListAtIndex:(int32_t) index;
- (StorageContainerChunkListsL_Builder*) replaceStorageContainerChunkListAtIndex:(int32_t) index with:(StorageContainerChunkListL*) value;
- (StorageContainerChunkListsL_Builder*) addStorageContainerChunkList:(StorageContainerChunkListL*) value;
- (StorageContainerChunkListsL_Builder*) addAllStorageContainerChunkList:(NSArray*) values;
- (StorageContainerChunkListsL_Builder*) clearStorageContainerChunkListList;

- (NSArray*) fileErrorList;
- (FileErrorL*) fileErrorAtIndex:(int32_t) index;
- (StorageContainerChunkListsL_Builder*) replaceFileErrorAtIndex:(int32_t) index with:(FileErrorL*) value;
- (StorageContainerChunkListsL_Builder*) addFileError:(FileErrorL*) value;
- (StorageContainerChunkListsL_Builder*) addAllFileError:(NSArray*) values;
- (StorageContainerChunkListsL_Builder*) clearFileErrorList;

- (BOOL) hasVerbosityLevel;
- (int32_t) verbosityLevel;
- (StorageContainerChunkListsL_Builder*) setVerbosityLevel:(int32_t) value;
- (StorageContainerChunkListsL_Builder*) clearVerbosityLevel;
@end

@interface StorageContainerErrorListL : PBGeneratedMessage {
@private
  NSMutableArray* mutableStorageContainerErrorDataList;
}
- (NSArray*) storageContainerErrorDataList;
- (StorageContainerErrorL*) storageContainerErrorDataAtIndex:(int32_t) index;

+ (StorageContainerErrorListL*) defaultInstance;
- (StorageContainerErrorListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageContainerErrorListL_Builder*) builder;
+ (StorageContainerErrorListL_Builder*) builder;
+ (StorageContainerErrorListL_Builder*) builderWithPrototype:(StorageContainerErrorListL*) prototype;

+ (StorageContainerErrorListL*) parseFromData:(NSData*) data;
+ (StorageContainerErrorListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerErrorListL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageContainerErrorListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageContainerErrorListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageContainerErrorListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageContainerErrorListL_Builder : PBGeneratedMessage_Builder {
@private
  StorageContainerErrorListL* result;
}

- (StorageContainerErrorListL*) defaultInstance;

- (StorageContainerErrorListL_Builder*) clear;
- (StorageContainerErrorListL_Builder*) clone;

- (StorageContainerErrorListL*) build;
- (StorageContainerErrorListL*) buildPartial;

- (StorageContainerErrorListL_Builder*) mergeFrom:(StorageContainerErrorListL*) other;
- (StorageContainerErrorListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageContainerErrorListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) storageContainerErrorDataList;
- (StorageContainerErrorL*) storageContainerErrorDataAtIndex:(int32_t) index;
- (StorageContainerErrorListL_Builder*) replaceStorageContainerErrorDataAtIndex:(int32_t) index with:(StorageContainerErrorL*) value;
- (StorageContainerErrorListL_Builder*) addStorageContainerErrorData:(StorageContainerErrorL*) value;
- (StorageContainerErrorListL_Builder*) addAllStorageContainerErrorData:(NSArray*) values;
- (StorageContainerErrorListL_Builder*) clearStorageContainerErrorDataList;
@end

@interface FileChecksumAuthorizationL : PBGeneratedMessage {
@private
  BOOL hasAuthorization_:1;
  BOOL hasFileChecksum_:1;
  NSString* authorization;
  NSData* fileChecksum;
  NSMutableArray* mutableChunkChecksumsList;
}
- (BOOL) hasFileChecksum;
- (BOOL) hasAuthorization;
@property (readonly, retain) NSData* fileChecksum;
@property (readonly, retain) NSString* authorization;
- (NSArray*) chunkChecksumsList;
- (NSData*) chunkChecksumsAtIndex:(int32_t) index;

+ (FileChecksumAuthorizationL*) defaultInstance;
- (FileChecksumAuthorizationL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChecksumAuthorizationL_Builder*) builder;
+ (FileChecksumAuthorizationL_Builder*) builder;
+ (FileChecksumAuthorizationL_Builder*) builderWithPrototype:(FileChecksumAuthorizationL*) prototype;

+ (FileChecksumAuthorizationL*) parseFromData:(NSData*) data;
+ (FileChecksumAuthorizationL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumAuthorizationL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChecksumAuthorizationL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumAuthorizationL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChecksumAuthorizationL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChecksumAuthorizationL_Builder : PBGeneratedMessage_Builder {
@private
  FileChecksumAuthorizationL* result;
}

- (FileChecksumAuthorizationL*) defaultInstance;

- (FileChecksumAuthorizationL_Builder*) clear;
- (FileChecksumAuthorizationL_Builder*) clone;

- (FileChecksumAuthorizationL*) build;
- (FileChecksumAuthorizationL*) buildPartial;

- (FileChecksumAuthorizationL_Builder*) mergeFrom:(FileChecksumAuthorizationL*) other;
- (FileChecksumAuthorizationL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChecksumAuthorizationL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileChecksum;
- (NSData*) fileChecksum;
- (FileChecksumAuthorizationL_Builder*) setFileChecksum:(NSData*) value;
- (FileChecksumAuthorizationL_Builder*) clearFileChecksum;

- (BOOL) hasAuthorization;
- (NSString*) authorization;
- (FileChecksumAuthorizationL_Builder*) setAuthorization:(NSString*) value;
- (FileChecksumAuthorizationL_Builder*) clearAuthorization;

- (NSArray*) chunkChecksumsList;
- (NSData*) chunkChecksumsAtIndex:(int32_t) index;
- (FileChecksumAuthorizationL_Builder*) replaceChunkChecksumsAtIndex:(int32_t) index with:(NSData*) value;
- (FileChecksumAuthorizationL_Builder*) addChunkChecksums:(NSData*) value;
- (FileChecksumAuthorizationL_Builder*) addAllChunkChecksums:(NSArray*) values;
- (FileChecksumAuthorizationL_Builder*) clearChunkChecksumsList;
@end

@interface FileChecksumAuthorizationListL : PBGeneratedMessage {
@private
  NSMutableArray* mutableFileChecksumAuthorizationDataList;
}
- (NSArray*) fileChecksumAuthorizationDataList;
- (FileChecksumAuthorizationL*) fileChecksumAuthorizationDataAtIndex:(int32_t) index;

+ (FileChecksumAuthorizationListL*) defaultInstance;
- (FileChecksumAuthorizationListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChecksumAuthorizationListL_Builder*) builder;
+ (FileChecksumAuthorizationListL_Builder*) builder;
+ (FileChecksumAuthorizationListL_Builder*) builderWithPrototype:(FileChecksumAuthorizationListL*) prototype;

+ (FileChecksumAuthorizationListL*) parseFromData:(NSData*) data;
+ (FileChecksumAuthorizationListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumAuthorizationListL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChecksumAuthorizationListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumAuthorizationListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChecksumAuthorizationListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChecksumAuthorizationListL_Builder : PBGeneratedMessage_Builder {
@private
  FileChecksumAuthorizationListL* result;
}

- (FileChecksumAuthorizationListL*) defaultInstance;

- (FileChecksumAuthorizationListL_Builder*) clear;
- (FileChecksumAuthorizationListL_Builder*) clone;

- (FileChecksumAuthorizationListL*) build;
- (FileChecksumAuthorizationListL*) buildPartial;

- (FileChecksumAuthorizationListL_Builder*) mergeFrom:(FileChecksumAuthorizationListL*) other;
- (FileChecksumAuthorizationListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChecksumAuthorizationListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) fileChecksumAuthorizationDataList;
- (FileChecksumAuthorizationL*) fileChecksumAuthorizationDataAtIndex:(int32_t) index;
- (FileChecksumAuthorizationListL_Builder*) replaceFileChecksumAuthorizationDataAtIndex:(int32_t) index with:(FileChecksumAuthorizationL*) value;
- (FileChecksumAuthorizationListL_Builder*) addFileChecksumAuthorizationData:(FileChecksumAuthorizationL*) value;
- (FileChecksumAuthorizationListL_Builder*) addAllFileChecksumAuthorizationData:(NSArray*) values;
- (FileChecksumAuthorizationListL_Builder*) clearFileChecksumAuthorizationDataList;
@end

@interface ChunkReferenceL : PBGeneratedMessage {
@private
  BOOL hasContainerIndex_:1;
  BOOL hasChunkIndex_:1;
  int64_t containerIndex;
  int64_t chunkIndex;
}
- (BOOL) hasContainerIndex;
- (BOOL) hasChunkIndex;
@property (readonly) int64_t containerIndex;
@property (readonly) int64_t chunkIndex;

+ (ChunkReferenceL*) defaultInstance;
- (ChunkReferenceL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChunkReferenceL_Builder*) builder;
+ (ChunkReferenceL_Builder*) builder;
+ (ChunkReferenceL_Builder*) builderWithPrototype:(ChunkReferenceL*) prototype;

+ (ChunkReferenceL*) parseFromData:(NSData*) data;
+ (ChunkReferenceL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkReferenceL*) parseFromInputStream:(NSInputStream*) input;
+ (ChunkReferenceL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkReferenceL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChunkReferenceL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChunkReferenceL_Builder : PBGeneratedMessage_Builder {
@private
  ChunkReferenceL* result;
}

- (ChunkReferenceL*) defaultInstance;

- (ChunkReferenceL_Builder*) clear;
- (ChunkReferenceL_Builder*) clone;

- (ChunkReferenceL*) build;
- (ChunkReferenceL*) buildPartial;

- (ChunkReferenceL_Builder*) mergeFrom:(ChunkReferenceL*) other;
- (ChunkReferenceL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChunkReferenceL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasContainerIndex;
- (int64_t) containerIndex;
- (ChunkReferenceL_Builder*) setContainerIndex:(int64_t) value;
- (ChunkReferenceL_Builder*) clearContainerIndex;

- (BOOL) hasChunkIndex;
- (int64_t) chunkIndex;
- (ChunkReferenceL_Builder*) setChunkIndex:(int64_t) value;
- (ChunkReferenceL_Builder*) clearChunkIndex;
@end

@interface FileChecksumChunkReferencesL : PBGeneratedMessage {
@private
  BOOL hasFileChecksum_:1;
  NSData* fileChecksum;
  NSMutableArray* mutableChunkReferencesList;
}
- (BOOL) hasFileChecksum;
@property (readonly, retain) NSData* fileChecksum;
- (NSArray*) chunkReferencesList;
- (ChunkReferenceL*) chunkReferencesAtIndex:(int32_t) index;

+ (FileChecksumChunkReferencesL*) defaultInstance;
- (FileChecksumChunkReferencesL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChecksumChunkReferencesL_Builder*) builder;
+ (FileChecksumChunkReferencesL_Builder*) builder;
+ (FileChecksumChunkReferencesL_Builder*) builderWithPrototype:(FileChecksumChunkReferencesL*) prototype;

+ (FileChecksumChunkReferencesL*) parseFromData:(NSData*) data;
+ (FileChecksumChunkReferencesL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumChunkReferencesL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChecksumChunkReferencesL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumChunkReferencesL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChecksumChunkReferencesL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChecksumChunkReferencesL_Builder : PBGeneratedMessage_Builder {
@private
  FileChecksumChunkReferencesL* result;
}

- (FileChecksumChunkReferencesL*) defaultInstance;

- (FileChecksumChunkReferencesL_Builder*) clear;
- (FileChecksumChunkReferencesL_Builder*) clone;

- (FileChecksumChunkReferencesL*) build;
- (FileChecksumChunkReferencesL*) buildPartial;

- (FileChecksumChunkReferencesL_Builder*) mergeFrom:(FileChecksumChunkReferencesL*) other;
- (FileChecksumChunkReferencesL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChecksumChunkReferencesL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFileChecksum;
- (NSData*) fileChecksum;
- (FileChecksumChunkReferencesL_Builder*) setFileChecksum:(NSData*) value;
- (FileChecksumChunkReferencesL_Builder*) clearFileChecksum;

- (NSArray*) chunkReferencesList;
- (ChunkReferenceL*) chunkReferencesAtIndex:(int32_t) index;
- (FileChecksumChunkReferencesL_Builder*) replaceChunkReferencesAtIndex:(int32_t) index with:(ChunkReferenceL*) value;
- (FileChecksumChunkReferencesL_Builder*) addChunkReferences:(ChunkReferenceL*) value;
- (FileChecksumChunkReferencesL_Builder*) addAllChunkReferences:(NSArray*) values;
- (FileChecksumChunkReferencesL_Builder*) clearChunkReferencesList;
@end

@interface FileChecksumStorageHostChunkListsL : PBGeneratedMessage {
@private
  NSMutableArray* mutableStorageHostChunkListList;
  NSMutableArray* mutableFileChecksumChunkReferencesList;
}
- (NSArray*) storageHostChunkListList;
- (StorageHostChunkListL*) storageHostChunkListAtIndex:(int32_t) index;
- (NSArray*) fileChecksumChunkReferencesList;
- (FileChecksumChunkReferencesL*) fileChecksumChunkReferencesAtIndex:(int32_t) index;

+ (FileChecksumStorageHostChunkListsL*) defaultInstance;
- (FileChecksumStorageHostChunkListsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileChecksumStorageHostChunkListsL_Builder*) builder;
+ (FileChecksumStorageHostChunkListsL_Builder*) builder;
+ (FileChecksumStorageHostChunkListsL_Builder*) builderWithPrototype:(FileChecksumStorageHostChunkListsL*) prototype;

+ (FileChecksumStorageHostChunkListsL*) parseFromData:(NSData*) data;
+ (FileChecksumStorageHostChunkListsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumStorageHostChunkListsL*) parseFromInputStream:(NSInputStream*) input;
+ (FileChecksumStorageHostChunkListsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileChecksumStorageHostChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileChecksumStorageHostChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileChecksumStorageHostChunkListsL_Builder : PBGeneratedMessage_Builder {
@private
  FileChecksumStorageHostChunkListsL* result;
}

- (FileChecksumStorageHostChunkListsL*) defaultInstance;

- (FileChecksumStorageHostChunkListsL_Builder*) clear;
- (FileChecksumStorageHostChunkListsL_Builder*) clone;

- (FileChecksumStorageHostChunkListsL*) build;
- (FileChecksumStorageHostChunkListsL*) buildPartial;

- (FileChecksumStorageHostChunkListsL_Builder*) mergeFrom:(FileChecksumStorageHostChunkListsL*) other;
- (FileChecksumStorageHostChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileChecksumStorageHostChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) storageHostChunkListList;
- (StorageHostChunkListL*) storageHostChunkListAtIndex:(int32_t) index;
- (FileChecksumStorageHostChunkListsL_Builder*) replaceStorageHostChunkListAtIndex:(int32_t) index with:(StorageHostChunkListL*) value;
- (FileChecksumStorageHostChunkListsL_Builder*) addStorageHostChunkList:(StorageHostChunkListL*) value;
- (FileChecksumStorageHostChunkListsL_Builder*) addAllStorageHostChunkList:(NSArray*) values;
- (FileChecksumStorageHostChunkListsL_Builder*) clearStorageHostChunkListList;

- (NSArray*) fileChecksumChunkReferencesList;
- (FileChecksumChunkReferencesL*) fileChecksumChunkReferencesAtIndex:(int32_t) index;
- (FileChecksumStorageHostChunkListsL_Builder*) replaceFileChecksumChunkReferencesAtIndex:(int32_t) index with:(FileChecksumChunkReferencesL*) value;
- (FileChecksumStorageHostChunkListsL_Builder*) addFileChecksumChunkReferences:(FileChecksumChunkReferencesL*) value;
- (FileChecksumStorageHostChunkListsL_Builder*) addAllFileChecksumChunkReferences:(NSArray*) values;
- (FileChecksumStorageHostChunkListsL_Builder*) clearFileChecksumChunkReferencesList;
@end

@interface FileGroupsL : PBGeneratedMessage {
@private
  BOOL hasVerbosityLevel_:1;
  int32_t verbosityLevel;
  NSMutableArray* mutableFileGroupsDataList;
  NSMutableArray* mutableFileErrorList;
  NSMutableArray* mutableFileChunkErrorList;
}
- (BOOL) hasVerbosityLevel;
@property (readonly) int32_t verbosityLevel;
- (NSArray*) fileGroupsDataList;
- (FileChecksumStorageHostChunkListsL*) fileGroupsDataAtIndex:(int32_t) index;
- (NSArray*) fileErrorList;
- (FileErrorL*) fileErrorAtIndex:(int32_t) index;
- (NSArray*) fileChunkErrorList;
- (FileChunkErrorL*) fileChunkErrorAtIndex:(int32_t) index;

+ (FileGroupsL*) defaultInstance;
- (FileGroupsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileGroupsL_Builder*) builder;
+ (FileGroupsL_Builder*) builder;
+ (FileGroupsL_Builder*) builderWithPrototype:(FileGroupsL*) prototype;

+ (FileGroupsL*) parseFromData:(NSData*) data;
+ (FileGroupsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileGroupsL*) parseFromInputStream:(NSInputStream*) input;
+ (FileGroupsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileGroupsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileGroupsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileGroupsL_Builder : PBGeneratedMessage_Builder {
@private
  FileGroupsL* result;
}

- (FileGroupsL*) defaultInstance;

- (FileGroupsL_Builder*) clear;
- (FileGroupsL_Builder*) clone;

- (FileGroupsL*) build;
- (FileGroupsL*) buildPartial;

- (FileGroupsL_Builder*) mergeFrom:(FileGroupsL*) other;
- (FileGroupsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileGroupsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) fileGroupsDataList;
- (FileChecksumStorageHostChunkListsL*) fileGroupsDataAtIndex:(int32_t) index;
- (FileGroupsL_Builder*) replaceFileGroupsDataAtIndex:(int32_t) index with:(FileChecksumStorageHostChunkListsL*) value;
- (FileGroupsL_Builder*) addFileGroupsData:(FileChecksumStorageHostChunkListsL*) value;
- (FileGroupsL_Builder*) addAllFileGroupsData:(NSArray*) values;
- (FileGroupsL_Builder*) clearFileGroupsDataList;

- (NSArray*) fileErrorList;
- (FileErrorL*) fileErrorAtIndex:(int32_t) index;
- (FileGroupsL_Builder*) replaceFileErrorAtIndex:(int32_t) index with:(FileErrorL*) value;
- (FileGroupsL_Builder*) addFileError:(FileErrorL*) value;
- (FileGroupsL_Builder*) addAllFileError:(NSArray*) values;
- (FileGroupsL_Builder*) clearFileErrorList;

- (NSArray*) fileChunkErrorList;
- (FileChunkErrorL*) fileChunkErrorAtIndex:(int32_t) index;
- (FileGroupsL_Builder*) replaceFileChunkErrorAtIndex:(int32_t) index with:(FileChunkErrorL*) value;
- (FileGroupsL_Builder*) addFileChunkError:(FileChunkErrorL*) value;
- (FileGroupsL_Builder*) addAllFileChunkError:(NSArray*) values;
- (FileGroupsL_Builder*) clearFileChunkErrorList;

- (BOOL) hasVerbosityLevel;
- (int32_t) verbosityLevel;
- (FileGroupsL_Builder*) setVerbosityLevel:(int32_t) value;
- (FileGroupsL_Builder*) clearVerbosityLevel;
@end

@interface ChunkChecksumListL : PBGeneratedMessage {
@private
  NSMutableArray* mutableChunkChecksumDataList;
}
- (NSArray*) chunkChecksumDataList;
- (NSData*) chunkChecksumDataAtIndex:(int32_t) index;

+ (ChunkChecksumListL*) defaultInstance;
- (ChunkChecksumListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ChunkChecksumListL_Builder*) builder;
+ (ChunkChecksumListL_Builder*) builder;
+ (ChunkChecksumListL_Builder*) builderWithPrototype:(ChunkChecksumListL*) prototype;

+ (ChunkChecksumListL*) parseFromData:(NSData*) data;
+ (ChunkChecksumListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkChecksumListL*) parseFromInputStream:(NSInputStream*) input;
+ (ChunkChecksumListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ChunkChecksumListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ChunkChecksumListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ChunkChecksumListL_Builder : PBGeneratedMessage_Builder {
@private
  ChunkChecksumListL* result;
}

- (ChunkChecksumListL*) defaultInstance;

- (ChunkChecksumListL_Builder*) clear;
- (ChunkChecksumListL_Builder*) clone;

- (ChunkChecksumListL*) build;
- (ChunkChecksumListL*) buildPartial;

- (ChunkChecksumListL_Builder*) mergeFrom:(ChunkChecksumListL*) other;
- (ChunkChecksumListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ChunkChecksumListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) chunkChecksumDataList;
- (NSData*) chunkChecksumDataAtIndex:(int32_t) index;
- (ChunkChecksumListL_Builder*) replaceChunkChecksumDataAtIndex:(int32_t) index with:(NSData*) value;
- (ChunkChecksumListL_Builder*) addChunkChecksumData:(NSData*) value;
- (ChunkChecksumListL_Builder*) addAllChunkChecksumData:(NSArray*) values;
- (ChunkChecksumListL_Builder*) clearChunkChecksumDataList;
@end

@interface StorageHostChunkListL : PBGeneratedMessage {
@private
  BOOL hasStorageContainerKey_:1;
  BOOL hasStorageContainerAuthorizationToken_:1;
  BOOL hasHostInfo_:1;
  NSString* storageContainerKey;
  NSString* storageContainerAuthorizationToken;
  HostInfoL* hostInfo;
  NSMutableArray* mutableChunkInfoList;
}
- (BOOL) hasHostInfo;
- (BOOL) hasStorageContainerKey;
- (BOOL) hasStorageContainerAuthorizationToken;
@property (readonly, retain) HostInfoL* hostInfo;
@property (readonly, retain) NSString* storageContainerKey;
@property (readonly, retain) NSString* storageContainerAuthorizationToken;
- (NSArray*) chunkInfoList;
- (ChunkInfoL*) chunkInfoAtIndex:(int32_t) index;

+ (StorageHostChunkListL*) defaultInstance;
- (StorageHostChunkListL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageHostChunkListL_Builder*) builder;
+ (StorageHostChunkListL_Builder*) builder;
+ (StorageHostChunkListL_Builder*) builderWithPrototype:(StorageHostChunkListL*) prototype;

+ (StorageHostChunkListL*) parseFromData:(NSData*) data;
+ (StorageHostChunkListL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageHostChunkListL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageHostChunkListL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageHostChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageHostChunkListL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageHostChunkListL_Builder : PBGeneratedMessage_Builder {
@private
  StorageHostChunkListL* result;
}

- (StorageHostChunkListL*) defaultInstance;

- (StorageHostChunkListL_Builder*) clear;
- (StorageHostChunkListL_Builder*) clone;

- (StorageHostChunkListL*) build;
- (StorageHostChunkListL*) buildPartial;

- (StorageHostChunkListL_Builder*) mergeFrom:(StorageHostChunkListL*) other;
- (StorageHostChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageHostChunkListL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHostInfo;
- (HostInfoL*) hostInfo;
- (StorageHostChunkListL_Builder*) setHostInfo:(HostInfoL*) value;
- (StorageHostChunkListL_Builder*) setHostInfoBuilder:(HostInfoL_Builder*) builderForValue;
- (StorageHostChunkListL_Builder*) mergeHostInfo:(HostInfoL*) value;
- (StorageHostChunkListL_Builder*) clearHostInfo;

- (NSArray*) chunkInfoList;
- (ChunkInfoL*) chunkInfoAtIndex:(int32_t) index;
- (StorageHostChunkListL_Builder*) replaceChunkInfoAtIndex:(int32_t) index with:(ChunkInfoL*) value;
- (StorageHostChunkListL_Builder*) addChunkInfo:(ChunkInfoL*) value;
- (StorageHostChunkListL_Builder*) addAllChunkInfo:(NSArray*) values;
- (StorageHostChunkListL_Builder*) clearChunkInfoList;

- (BOOL) hasStorageContainerKey;
- (NSString*) storageContainerKey;
- (StorageHostChunkListL_Builder*) setStorageContainerKey:(NSString*) value;
- (StorageHostChunkListL_Builder*) clearStorageContainerKey;

- (BOOL) hasStorageContainerAuthorizationToken;
- (NSString*) storageContainerAuthorizationToken;
- (StorageHostChunkListL_Builder*) setStorageContainerAuthorizationToken:(NSString*) value;
- (StorageHostChunkListL_Builder*) clearStorageContainerAuthorizationToken;
@end

@interface StorageHostChunkListsL : PBGeneratedMessage {
@private
  NSMutableArray* mutableStorageHostChunkListList;
  NSMutableArray* mutableChunkErrorList;
}
- (NSArray*) storageHostChunkListList;
- (StorageHostChunkListL*) storageHostChunkListAtIndex:(int32_t) index;
- (NSArray*) chunkErrorList;
- (ChunkErrorL*) chunkErrorAtIndex:(int32_t) index;

+ (StorageHostChunkListsL*) defaultInstance;
- (StorageHostChunkListsL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (StorageHostChunkListsL_Builder*) builder;
+ (StorageHostChunkListsL_Builder*) builder;
+ (StorageHostChunkListsL_Builder*) builderWithPrototype:(StorageHostChunkListsL*) prototype;

+ (StorageHostChunkListsL*) parseFromData:(NSData*) data;
+ (StorageHostChunkListsL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageHostChunkListsL*) parseFromInputStream:(NSInputStream*) input;
+ (StorageHostChunkListsL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (StorageHostChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (StorageHostChunkListsL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface StorageHostChunkListsL_Builder : PBGeneratedMessage_Builder {
@private
  StorageHostChunkListsL* result;
}

- (StorageHostChunkListsL*) defaultInstance;

- (StorageHostChunkListsL_Builder*) clear;
- (StorageHostChunkListsL_Builder*) clone;

- (StorageHostChunkListsL*) build;
- (StorageHostChunkListsL*) buildPartial;

- (StorageHostChunkListsL_Builder*) mergeFrom:(StorageHostChunkListsL*) other;
- (StorageHostChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (StorageHostChunkListsL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) storageHostChunkListList;
- (StorageHostChunkListL*) storageHostChunkListAtIndex:(int32_t) index;
- (StorageHostChunkListsL_Builder*) replaceStorageHostChunkListAtIndex:(int32_t) index with:(StorageHostChunkListL*) value;
- (StorageHostChunkListsL_Builder*) addStorageHostChunkList:(StorageHostChunkListL*) value;
- (StorageHostChunkListsL_Builder*) addAllStorageHostChunkList:(NSArray*) values;
- (StorageHostChunkListsL_Builder*) clearStorageHostChunkListList;

- (NSArray*) chunkErrorList;
- (ChunkErrorL*) chunkErrorAtIndex:(int32_t) index;
- (StorageHostChunkListsL_Builder*) replaceChunkErrorAtIndex:(int32_t) index with:(ChunkErrorL*) value;
- (StorageHostChunkListsL_Builder*) addChunkError:(ChunkErrorL*) value;
- (StorageHostChunkListsL_Builder*) addAllChunkError:(NSArray*) values;
- (StorageHostChunkListsL_Builder*) clearChunkErrorList;
@end

