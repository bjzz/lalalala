// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Icloud.pb.h"

@implementation IcloudRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [IcloudRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MBSAccount ()
@property (retain) NSString* accountId;
@property (retain) NSMutableArray* mutableBackupUdidList;
@end

@implementation MBSAccount

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value {
  hasAccountId_ = !!value;
}
@synthesize accountId;
@synthesize mutableBackupUdidList;
- (void) dealloc {
  self.accountId = nil;
  self.mutableBackupUdidList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = @"";
  }
  return self;
}
static MBSAccount* defaultMBSAccountInstance = nil;
+ (void) initialize {
  if (self == [MBSAccount class]) {
    defaultMBSAccountInstance = [[MBSAccount alloc] init];
  }
}
+ (MBSAccount*) defaultInstance {
  return defaultMBSAccountInstance;
}
- (MBSAccount*) defaultInstance {
  return defaultMBSAccountInstance;
}
- (NSArray*) backupUdidList {
  return mutableBackupUdidList;
}
- (NSData*) backupUdidAtIndex:(int32_t) index {
  id value = [mutableBackupUdidList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeString:1 value:self.accountId];
  }
  for (NSData* element in self.mutableBackupUdidList) {
    [output writeData:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasAccountId) {
    size += computeStringSize(1, self.accountId);
  }
  {
    int32_t dataSize = 0;
    for (NSData* element in self.mutableBackupUdidList) {
      dataSize += computeDataSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableBackupUdidList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSAccount*) parseFromData:(NSData*) data {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromData:data] build];
}
+ (MBSAccount*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSAccount*) parseFromInputStream:(NSInputStream*) input {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromInputStream:input] build];
}
+ (MBSAccount*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSAccount*)[[[MBSAccount builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSAccount*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSAccount*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromCodedInputStream:input] build];
}
+ (MBSAccount*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSAccount*)[[[MBSAccount builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSAccount_Builder*) builder {
  return [[[MBSAccount_Builder alloc] init] autorelease];
}
+ (MBSAccount_Builder*) builderWithPrototype:(MBSAccount*) prototype {
  return [[MBSAccount builder] mergeFrom:prototype];
}
- (MBSAccount_Builder*) builder {
  return [MBSAccount builder];
}
@end

@interface MBSAccount_Builder()
@property (retain) MBSAccount* result;
@end

@implementation MBSAccount_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSAccount alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSAccount_Builder*) clear {
  self.result = [[[MBSAccount alloc] init] autorelease];
  return self;
}
- (MBSAccount_Builder*) clone {
  return [MBSAccount builderWithPrototype:result];
}
- (MBSAccount*) defaultInstance {
  return [MBSAccount defaultInstance];
}
- (MBSAccount*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSAccount*) buildPartial {
  MBSAccount* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSAccount_Builder*) mergeFrom:(MBSAccount*) other {
  if (other == [MBSAccount defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.mutableBackupUdidList.count > 0) {
    if (result.mutableBackupUdidList == nil) {
      result.mutableBackupUdidList = [NSMutableArray array];
    }
    [result.mutableBackupUdidList addObjectsFromArray:other.mutableBackupUdidList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSAccount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSAccount_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAccountId:[input readString]];
        break;
      }
      case 18: {
        [self addBackupUdid:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (NSString*) accountId {
  return result.accountId;
}
- (MBSAccount_Builder*) setAccountId:(NSString*) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (MBSAccount_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = @"";
  return self;
}
- (NSArray*) backupUdidList {
  if (result.mutableBackupUdidList == nil) {
    return [NSArray array];
  }
  return result.mutableBackupUdidList;
}
- (NSData*) backupUdidAtIndex:(int32_t) index {
  return [result backupUdidAtIndex:index];
}
- (MBSAccount_Builder*) replaceBackupUdidAtIndex:(int32_t) index with:(NSData*) value {
  [result.mutableBackupUdidList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MBSAccount_Builder*) addBackupUdid:(NSData*) value {
  if (result.mutableBackupUdidList == nil) {
    result.mutableBackupUdidList = [NSMutableArray array];
  }
  [result.mutableBackupUdidList addObject:value];
  return self;
}
- (MBSAccount_Builder*) addAllBackupUdid:(NSArray*) values {
  if (result.mutableBackupUdidList == nil) {
    result.mutableBackupUdidList = [NSMutableArray array];
  }
  [result.mutableBackupUdidList addObjectsFromArray:values];
  return self;
}
- (MBSAccount_Builder*) clearBackupUdidList {
  result.mutableBackupUdidList = nil;
  return self;
}
@end

@interface MBSBackup ()
@property (retain) NSData* backupUdid;
@property int64_t quotaUsed;
@property (retain) NSMutableArray* mutableSnapshotList;
@property (retain) MBSBackupAttributes* attributes;
@property int64_t keysLastModified;
@end

@implementation MBSBackup

- (BOOL) hasBackupUdid {
  return !!hasBackupUdid_;
}
- (void) setHasBackupUdid:(BOOL) value {
  hasBackupUdid_ = !!value;
}
@synthesize backupUdid;
- (BOOL) hasQuotaUsed {
  return !!hasQuotaUsed_;
}
- (void) setHasQuotaUsed:(BOOL) value {
  hasQuotaUsed_ = !!value;
}
@synthesize quotaUsed;
@synthesize mutableSnapshotList;
- (BOOL) hasAttributes {
  return !!hasAttributes_;
}
- (void) setHasAttributes:(BOOL) value {
  hasAttributes_ = !!value;
}
@synthesize attributes;
- (BOOL) hasKeysLastModified {
  return !!hasKeysLastModified_;
}
- (void) setHasKeysLastModified:(BOOL) value {
  hasKeysLastModified_ = !!value;
}
@synthesize keysLastModified;
- (void) dealloc {
  self.backupUdid = nil;
  self.mutableSnapshotList = nil;
  self.attributes = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.backupUdid = [NSData data];
    self.quotaUsed = 0L;
    self.attributes = [MBSBackupAttributes defaultInstance];
    self.keysLastModified = 0L;
  }
  return self;
}
static MBSBackup* defaultMBSBackupInstance = nil;
+ (void) initialize {
  if (self == [MBSBackup class]) {
    defaultMBSBackupInstance = [[MBSBackup alloc] init];
  }
}
+ (MBSBackup*) defaultInstance {
  return defaultMBSBackupInstance;
}
- (MBSBackup*) defaultInstance {
  return defaultMBSBackupInstance;
}
- (NSArray*) snapshotList {
  return mutableSnapshotList;
}
- (MBSSnapshot*) snapshotAtIndex:(int32_t) index {
  id value = [mutableSnapshotList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBackupUdid) {
    [output writeData:1 value:self.backupUdid];
  }
  if (self.hasQuotaUsed) {
    [output writeUInt64:2 value:self.quotaUsed];
  }
  for (MBSSnapshot* element in self.snapshotList) {
    [output writeMessage:3 value:element];
  }
  if (self.hasAttributes) {
    [output writeMessage:4 value:self.attributes];
  }
  if (self.hasKeysLastModified) {
    [output writeUInt64:5 value:self.keysLastModified];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBackupUdid) {
    size += computeDataSize(1, self.backupUdid);
  }
  if (self.hasQuotaUsed) {
    size += computeUInt64Size(2, self.quotaUsed);
  }
  for (MBSSnapshot* element in self.snapshotList) {
    size += computeMessageSize(3, element);
  }
  if (self.hasAttributes) {
    size += computeMessageSize(4, self.attributes);
  }
  if (self.hasKeysLastModified) {
    size += computeUInt64Size(5, self.keysLastModified);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSBackup*) parseFromData:(NSData*) data {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromData:data] build];
}
+ (MBSBackup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSBackup*) parseFromInputStream:(NSInputStream*) input {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromInputStream:input] build];
}
+ (MBSBackup*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSBackup*)[[[MBSBackup builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSBackup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSBackup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromCodedInputStream:input] build];
}
+ (MBSBackup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackup*)[[[MBSBackup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSBackup_Builder*) builder {
  return [[[MBSBackup_Builder alloc] init] autorelease];
}
+ (MBSBackup_Builder*) builderWithPrototype:(MBSBackup*) prototype {
  return [[MBSBackup builder] mergeFrom:prototype];
}
- (MBSBackup_Builder*) builder {
  return [MBSBackup builder];
}
@end

@interface MBSBackup_Builder()
@property (retain) MBSBackup* result;
@end

@implementation MBSBackup_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSBackup alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSBackup_Builder*) clear {
  self.result = [[[MBSBackup alloc] init] autorelease];
  return self;
}
- (MBSBackup_Builder*) clone {
  return [MBSBackup builderWithPrototype:result];
}
- (MBSBackup*) defaultInstance {
  return [MBSBackup defaultInstance];
}
- (MBSBackup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSBackup*) buildPartial {
  MBSBackup* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSBackup_Builder*) mergeFrom:(MBSBackup*) other {
  if (other == [MBSBackup defaultInstance]) {
    return self;
  }
  if (other.hasBackupUdid) {
    [self setBackupUdid:other.backupUdid];
  }
  if (other.hasQuotaUsed) {
    [self setQuotaUsed:other.quotaUsed];
  }
  if (other.mutableSnapshotList.count > 0) {
    if (result.mutableSnapshotList == nil) {
      result.mutableSnapshotList = [NSMutableArray array];
    }
    [result.mutableSnapshotList addObjectsFromArray:other.mutableSnapshotList];
  }
  if (other.hasAttributes) {
    [self mergeAttributes:other.attributes];
  }
  if (other.hasKeysLastModified) {
    [self setKeysLastModified:other.keysLastModified];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSBackup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSBackup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setBackupUdid:[input readData]];
        break;
      }
      case 16: {
        [self setQuotaUsed:[input readUInt64]];
        break;
      }
      case 26: {
        MBSSnapshot_Builder* subBuilder = [MBSSnapshot builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSnapshot:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        MBSBackupAttributes_Builder* subBuilder = [MBSBackupAttributes builder];
        if (self.hasAttributes) {
          [subBuilder mergeFrom:self.attributes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttributes:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setKeysLastModified:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasBackupUdid {
  return result.hasBackupUdid;
}
- (NSData*) backupUdid {
  return result.backupUdid;
}
- (MBSBackup_Builder*) setBackupUdid:(NSData*) value {
  result.hasBackupUdid = YES;
  result.backupUdid = value;
  return self;
}
- (MBSBackup_Builder*) clearBackupUdid {
  result.hasBackupUdid = NO;
  result.backupUdid = [NSData data];
  return self;
}
- (BOOL) hasQuotaUsed {
  return result.hasQuotaUsed;
}
- (int64_t) quotaUsed {
  return result.quotaUsed;
}
- (MBSBackup_Builder*) setQuotaUsed:(int64_t) value {
  result.hasQuotaUsed = YES;
  result.quotaUsed = value;
  return self;
}
- (MBSBackup_Builder*) clearQuotaUsed {
  result.hasQuotaUsed = NO;
  result.quotaUsed = 0L;
  return self;
}
- (NSArray*) snapshotList {
  if (result.mutableSnapshotList == nil) { return [NSArray array]; }
  return result.mutableSnapshotList;
}
- (MBSSnapshot*) snapshotAtIndex:(int32_t) index {
  return [result snapshotAtIndex:index];
}
- (MBSBackup_Builder*) replaceSnapshotAtIndex:(int32_t) index with:(MBSSnapshot*) value {
  [result.mutableSnapshotList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MBSBackup_Builder*) addAllSnapshot:(NSArray*) values {
  if (result.mutableSnapshotList == nil) {
    result.mutableSnapshotList = [NSMutableArray array];
  }
  [result.mutableSnapshotList addObjectsFromArray:values];
  return self;
}
- (MBSBackup_Builder*) clearSnapshotList {
  result.mutableSnapshotList = nil;
  return self;
}
- (MBSBackup_Builder*) addSnapshot:(MBSSnapshot*) value {
  if (result.mutableSnapshotList == nil) {
    result.mutableSnapshotList = [NSMutableArray array];
  }
  [result.mutableSnapshotList addObject:value];
  return self;
}
- (BOOL) hasAttributes {
  return result.hasAttributes;
}
- (MBSBackupAttributes*) attributes {
  return result.attributes;
}
- (MBSBackup_Builder*) setAttributes:(MBSBackupAttributes*) value {
  result.hasAttributes = YES;
  result.attributes = value;
  return self;
}
- (MBSBackup_Builder*) setAttributesBuilder:(MBSBackupAttributes_Builder*) builderForValue {
  return [self setAttributes:[builderForValue build]];
}
- (MBSBackup_Builder*) mergeAttributes:(MBSBackupAttributes*) value {
  if (result.hasAttributes &&
      result.attributes != [MBSBackupAttributes defaultInstance]) {
    result.attributes =
      [[[MBSBackupAttributes builderWithPrototype:result.attributes] mergeFrom:value] buildPartial];
  } else {
    result.attributes = value;
  }
  result.hasAttributes = YES;
  return self;
}
- (MBSBackup_Builder*) clearAttributes {
  result.hasAttributes = NO;
  result.attributes = [MBSBackupAttributes defaultInstance];
  return self;
}
- (BOOL) hasKeysLastModified {
  return result.hasKeysLastModified;
}
- (int64_t) keysLastModified {
  return result.keysLastModified;
}
- (MBSBackup_Builder*) setKeysLastModified:(int64_t) value {
  result.hasKeysLastModified = YES;
  result.keysLastModified = value;
  return self;
}
- (MBSBackup_Builder*) clearKeysLastModified {
  result.hasKeysLastModified = NO;
  result.keysLastModified = 0L;
  return self;
}
@end

@interface MBSBackupAttributes ()
@property (retain) NSString* deviceClass;
@property (retain) NSString* productType;
@property (retain) NSString* serialNumber;
@property (retain) NSString* deviceColor;
@property (retain) NSString* hardwareModel;
@property (retain) NSString* marketingName;
@end

@implementation MBSBackupAttributes

- (BOOL) hasDeviceClass {
  return !!hasDeviceClass_;
}
- (void) setHasDeviceClass:(BOOL) value {
  hasDeviceClass_ = !!value;
}
@synthesize deviceClass;
- (BOOL) hasProductType {
  return !!hasProductType_;
}
- (void) setHasProductType:(BOOL) value {
  hasProductType_ = !!value;
}
@synthesize productType;
- (BOOL) hasSerialNumber {
  return !!hasSerialNumber_;
}
- (void) setHasSerialNumber:(BOOL) value {
  hasSerialNumber_ = !!value;
}
@synthesize serialNumber;
- (BOOL) hasDeviceColor {
  return !!hasDeviceColor_;
}
- (void) setHasDeviceColor:(BOOL) value {
  hasDeviceColor_ = !!value;
}
@synthesize deviceColor;
- (BOOL) hasHardwareModel {
  return !!hasHardwareModel_;
}
- (void) setHasHardwareModel:(BOOL) value {
  hasHardwareModel_ = !!value;
}
@synthesize hardwareModel;
- (BOOL) hasMarketingName {
  return !!hasMarketingName_;
}
- (void) setHasMarketingName:(BOOL) value {
  hasMarketingName_ = !!value;
}
@synthesize marketingName;
- (void) dealloc {
  self.deviceClass = nil;
  self.productType = nil;
  self.serialNumber = nil;
  self.deviceColor = nil;
  self.hardwareModel = nil;
  self.marketingName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceClass = @"";
    self.productType = @"";
    self.serialNumber = @"";
    self.deviceColor = @"";
    self.hardwareModel = @"";
    self.marketingName = @"";
  }
  return self;
}
static MBSBackupAttributes* defaultMBSBackupAttributesInstance = nil;
+ (void) initialize {
  if (self == [MBSBackupAttributes class]) {
    defaultMBSBackupAttributesInstance = [[MBSBackupAttributes alloc] init];
  }
}
+ (MBSBackupAttributes*) defaultInstance {
  return defaultMBSBackupAttributesInstance;
}
- (MBSBackupAttributes*) defaultInstance {
  return defaultMBSBackupAttributesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceClass) {
    [output writeString:1 value:self.deviceClass];
  }
  if (self.hasProductType) {
    [output writeString:2 value:self.productType];
  }
  if (self.hasSerialNumber) {
    [output writeString:3 value:self.serialNumber];
  }
  if (self.hasDeviceColor) {
    [output writeString:4 value:self.deviceColor];
  }
  if (self.hasHardwareModel) {
    [output writeString:5 value:self.hardwareModel];
  }
  if (self.hasMarketingName) {
    [output writeString:6 value:self.marketingName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceClass) {
    size += computeStringSize(1, self.deviceClass);
  }
  if (self.hasProductType) {
    size += computeStringSize(2, self.productType);
  }
  if (self.hasSerialNumber) {
    size += computeStringSize(3, self.serialNumber);
  }
  if (self.hasDeviceColor) {
    size += computeStringSize(4, self.deviceColor);
  }
  if (self.hasHardwareModel) {
    size += computeStringSize(5, self.hardwareModel);
  }
  if (self.hasMarketingName) {
    size += computeStringSize(6, self.marketingName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSBackupAttributes*) parseFromData:(NSData*) data {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromData:data] build];
}
+ (MBSBackupAttributes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSBackupAttributes*) parseFromInputStream:(NSInputStream*) input {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromInputStream:input] build];
}
+ (MBSBackupAttributes*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSBackupAttributes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSBackupAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromCodedInputStream:input] build];
}
+ (MBSBackupAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSBackupAttributes*)[[[MBSBackupAttributes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSBackupAttributes_Builder*) builder {
  return [[[MBSBackupAttributes_Builder alloc] init] autorelease];
}
+ (MBSBackupAttributes_Builder*) builderWithPrototype:(MBSBackupAttributes*) prototype {
  return [[MBSBackupAttributes builder] mergeFrom:prototype];
}
- (MBSBackupAttributes_Builder*) builder {
  return [MBSBackupAttributes builder];
}
@end

@interface MBSBackupAttributes_Builder()
@property (retain) MBSBackupAttributes* result;
@end

@implementation MBSBackupAttributes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSBackupAttributes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSBackupAttributes_Builder*) clear {
  self.result = [[[MBSBackupAttributes alloc] init] autorelease];
  return self;
}
- (MBSBackupAttributes_Builder*) clone {
  return [MBSBackupAttributes builderWithPrototype:result];
}
- (MBSBackupAttributes*) defaultInstance {
  return [MBSBackupAttributes defaultInstance];
}
- (MBSBackupAttributes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSBackupAttributes*) buildPartial {
  MBSBackupAttributes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSBackupAttributes_Builder*) mergeFrom:(MBSBackupAttributes*) other {
  if (other == [MBSBackupAttributes defaultInstance]) {
    return self;
  }
  if (other.hasDeviceClass) {
    [self setDeviceClass:other.deviceClass];
  }
  if (other.hasProductType) {
    [self setProductType:other.productType];
  }
  if (other.hasSerialNumber) {
    [self setSerialNumber:other.serialNumber];
  }
  if (other.hasDeviceColor) {
    [self setDeviceColor:other.deviceColor];
  }
  if (other.hasHardwareModel) {
    [self setHardwareModel:other.hardwareModel];
  }
  if (other.hasMarketingName) {
    [self setMarketingName:other.marketingName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSBackupAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSBackupAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceClass:[input readString]];
        break;
      }
      case 18: {
        [self setProductType:[input readString]];
        break;
      }
      case 26: {
        [self setSerialNumber:[input readString]];
        break;
      }
      case 34: {
        [self setDeviceColor:[input readString]];
        break;
      }
      case 42: {
        [self setHardwareModel:[input readString]];
        break;
      }
      case 50: {
        [self setMarketingName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceClass {
  return result.hasDeviceClass;
}
- (NSString*) deviceClass {
  return result.deviceClass;
}
- (MBSBackupAttributes_Builder*) setDeviceClass:(NSString*) value {
  result.hasDeviceClass = YES;
  result.deviceClass = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearDeviceClass {
  result.hasDeviceClass = NO;
  result.deviceClass = @"";
  return self;
}
- (BOOL) hasProductType {
  return result.hasProductType;
}
- (NSString*) productType {
  return result.productType;
}
- (MBSBackupAttributes_Builder*) setProductType:(NSString*) value {
  result.hasProductType = YES;
  result.productType = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearProductType {
  result.hasProductType = NO;
  result.productType = @"";
  return self;
}
- (BOOL) hasSerialNumber {
  return result.hasSerialNumber;
}
- (NSString*) serialNumber {
  return result.serialNumber;
}
- (MBSBackupAttributes_Builder*) setSerialNumber:(NSString*) value {
  result.hasSerialNumber = YES;
  result.serialNumber = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearSerialNumber {
  result.hasSerialNumber = NO;
  result.serialNumber = @"";
  return self;
}
- (BOOL) hasDeviceColor {
  return result.hasDeviceColor;
}
- (NSString*) deviceColor {
  return result.deviceColor;
}
- (MBSBackupAttributes_Builder*) setDeviceColor:(NSString*) value {
  result.hasDeviceColor = YES;
  result.deviceColor = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearDeviceColor {
  result.hasDeviceColor = NO;
  result.deviceColor = @"";
  return self;
}
- (BOOL) hasHardwareModel {
  return result.hasHardwareModel;
}
- (NSString*) hardwareModel {
  return result.hardwareModel;
}
- (MBSBackupAttributes_Builder*) setHardwareModel:(NSString*) value {
  result.hasHardwareModel = YES;
  result.hardwareModel = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearHardwareModel {
  result.hasHardwareModel = NO;
  result.hardwareModel = @"";
  return self;
}
- (BOOL) hasMarketingName {
  return result.hasMarketingName;
}
- (NSString*) marketingName {
  return result.marketingName;
}
- (MBSBackupAttributes_Builder*) setMarketingName:(NSString*) value {
  result.hasMarketingName = YES;
  result.marketingName = value;
  return self;
}
- (MBSBackupAttributes_Builder*) clearMarketingName {
  result.hasMarketingName = NO;
  result.marketingName = @"";
  return self;
}
@end

@interface MBSFile ()
@property (retain) NSData* fileId;
@property (retain) NSString* domain;
@property (retain) NSString* relativePath;
@property (retain) NSData* signature;
@property int64_t size;
@property (retain) MBSFileAttributes* attributes;
@end

@implementation MBSFile

- (BOOL) hasFileId {
  return !!hasFileId_;
}
- (void) setHasFileId:(BOOL) value {
  hasFileId_ = !!value;
}
@synthesize fileId;
- (BOOL) hasDomain {
  return !!hasDomain_;
}
- (void) setHasDomain:(BOOL) value {
  hasDomain_ = !!value;
}
@synthesize domain;
- (BOOL) hasRelativePath {
  return !!hasRelativePath_;
}
- (void) setHasRelativePath:(BOOL) value {
  hasRelativePath_ = !!value;
}
@synthesize relativePath;
- (BOOL) hasSignature {
  return !!hasSignature_;
}
- (void) setHasSignature:(BOOL) value {
  hasSignature_ = !!value;
}
@synthesize signature;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (BOOL) hasAttributes {
  return !!hasAttributes_;
}
- (void) setHasAttributes:(BOOL) value {
  hasAttributes_ = !!value;
}
@synthesize attributes;
- (void) dealloc {
  self.fileId = nil;
  self.domain = nil;
  self.relativePath = nil;
  self.signature = nil;
  self.attributes = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fileId = [NSData data];
    self.domain = @"";
    self.relativePath = @"";
    self.signature = [NSData data];
    self.size = 0L;
    self.attributes = [MBSFileAttributes defaultInstance];
  }
  return self;
}
static MBSFile* defaultMBSFileInstance = nil;
+ (void) initialize {
  if (self == [MBSFile class]) {
    defaultMBSFileInstance = [[MBSFile alloc] init];
  }
}
+ (MBSFile*) defaultInstance {
  return defaultMBSFileInstance;
}
- (MBSFile*) defaultInstance {
  return defaultMBSFileInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileId) {
    [output writeData:1 value:self.fileId];
  }
  if (self.hasDomain) {
    [output writeString:2 value:self.domain];
  }
  if (self.hasRelativePath) {
    [output writeString:3 value:self.relativePath];
  }
  if (self.hasSignature) {
    [output writeData:4 value:self.signature];
  }
  if (self.hasSize) {
    [output writeUInt64:5 value:self.size];
  }
  if (self.hasAttributes) {
    [output writeMessage:6 value:self.attributes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFileId) {
    size += computeDataSize(1, self.fileId);
  }
  if (self.hasDomain) {
    size += computeStringSize(2, self.domain);
  }
  if (self.hasRelativePath) {
    size += computeStringSize(3, self.relativePath);
  }
  if (self.hasSignature) {
    size += computeDataSize(4, self.signature);
  }
  if (self.hasSize) {
    size += computeUInt64Size(5, self.size);
  }
  if (self.hasAttributes) {
    size += computeMessageSize(6, self.attributes);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFile*) parseFromData:(NSData*) data {
  return (MBSFile*)[[[MBSFile builder] mergeFromData:data] build];
}
+ (MBSFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFile*)[[[MBSFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFile*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFile*)[[[MBSFile builder] mergeFromInputStream:input] build];
}
+ (MBSFile*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFile*)[[[MBSFile builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFile*)[[[MBSFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFile*)[[[MBSFile builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFile*)[[[MBSFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFile_Builder*) builder {
  return [[[MBSFile_Builder alloc] init] autorelease];
}
+ (MBSFile_Builder*) builderWithPrototype:(MBSFile*) prototype {
  return [[MBSFile builder] mergeFrom:prototype];
}
- (MBSFile_Builder*) builder {
  return [MBSFile builder];
}
@end

@interface MBSFile_Builder()
@property (retain) MBSFile* result;
@end

@implementation MBSFile_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFile alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFile_Builder*) clear {
  self.result = [[[MBSFile alloc] init] autorelease];
  return self;
}
- (MBSFile_Builder*) clone {
  return [MBSFile builderWithPrototype:result];
}
- (MBSFile*) defaultInstance {
  return [MBSFile defaultInstance];
}
- (MBSFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFile*) buildPartial {
  MBSFile* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFile_Builder*) mergeFrom:(MBSFile*) other {
  if (other == [MBSFile defaultInstance]) {
    return self;
  }
  if (other.hasFileId) {
    [self setFileId:other.fileId];
  }
  if (other.hasDomain) {
    [self setDomain:other.domain];
  }
  if (other.hasRelativePath) {
    [self setRelativePath:other.relativePath];
  }
  if (other.hasSignature) {
    [self setSignature:other.signature];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  if (other.hasAttributes) {
    [self mergeAttributes:other.attributes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFileId:[input readData]];
        break;
      }
      case 18: {
        [self setDomain:[input readString]];
        break;
      }
      case 26: {
        [self setRelativePath:[input readString]];
        break;
      }
      case 34: {
        [self setSignature:[input readData]];
        break;
      }
      case 40: {
        [self setSize:[input readUInt64]];
        break;
      }
      case 50: {
        MBSFileAttributes_Builder* subBuilder = [MBSFileAttributes builder];
        if (self.hasAttributes) {
          [subBuilder mergeFrom:self.attributes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttributes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasFileId {
  return result.hasFileId;
}
- (NSData*) fileId {
  return result.fileId;
}
- (MBSFile_Builder*) setFileId:(NSData*) value {
  result.hasFileId = YES;
  result.fileId = value;
  return self;
}
- (MBSFile_Builder*) clearFileId {
  result.hasFileId = NO;
  result.fileId = [NSData data];
  return self;
}
- (BOOL) hasDomain {
  return result.hasDomain;
}
- (NSString*) domain {
  return result.domain;
}
- (MBSFile_Builder*) setDomain:(NSString*) value {
  result.hasDomain = YES;
  result.domain = value;
  return self;
}
- (MBSFile_Builder*) clearDomain {
  result.hasDomain = NO;
  result.domain = @"";
  return self;
}
- (BOOL) hasRelativePath {
  return result.hasRelativePath;
}
- (NSString*) relativePath {
  return result.relativePath;
}
- (MBSFile_Builder*) setRelativePath:(NSString*) value {
  result.hasRelativePath = YES;
  result.relativePath = value;
  return self;
}
- (MBSFile_Builder*) clearRelativePath {
  result.hasRelativePath = NO;
  result.relativePath = @"";
  return self;
}
- (BOOL) hasSignature {
  return result.hasSignature;
}
- (NSData*) signature {
  return result.signature;
}
- (MBSFile_Builder*) setSignature:(NSData*) value {
  result.hasSignature = YES;
  result.signature = value;
  return self;
}
- (MBSFile_Builder*) clearSignature {
  result.hasSignature = NO;
  result.signature = [NSData data];
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int64_t) size {
  return result.size;
}
- (MBSFile_Builder*) setSize:(int64_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (MBSFile_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0L;
  return self;
}
- (BOOL) hasAttributes {
  return result.hasAttributes;
}
- (MBSFileAttributes*) attributes {
  return result.attributes;
}
- (MBSFile_Builder*) setAttributes:(MBSFileAttributes*) value {
  result.hasAttributes = YES;
  result.attributes = value;
  return self;
}
- (MBSFile_Builder*) setAttributesBuilder:(MBSFileAttributes_Builder*) builderForValue {
  return [self setAttributes:[builderForValue build]];
}
- (MBSFile_Builder*) mergeAttributes:(MBSFileAttributes*) value {
  if (result.hasAttributes &&
      result.attributes != [MBSFileAttributes defaultInstance]) {
    result.attributes =
      [[[MBSFileAttributes builderWithPrototype:result.attributes] mergeFrom:value] buildPartial];
  } else {
    result.attributes = value;
  }
  result.hasAttributes = YES;
  return self;
}
- (MBSFile_Builder*) clearAttributes {
  result.hasAttributes = NO;
  result.attributes = [MBSFileAttributes defaultInstance];
  return self;
}
@end

@interface MBSFileAttributes ()
@property int32_t keybagId;
@property (retain) NSString* target;
@property (retain) NSData* encryptionKey;
@property int64_t inodeNumber;
@property int32_t mode;
@property int32_t userId;
@property int32_t groupId;
@property int64_t lastModified;
@property int64_t lastStatusChange;
@property int64_t birth;
@property int32_t protectionClass;
@property (retain) MBSFileExtendedAttribute* extendedAttribute;
@property int32_t encryptionKeyVersion;
@property int64_t decryptedSize;
@end

@implementation MBSFileAttributes

- (BOOL) hasKeybagId {
  return !!hasKeybagId_;
}
- (void) setHasKeybagId:(BOOL) value {
  hasKeybagId_ = !!value;
}
@synthesize keybagId;
- (BOOL) hasTarget {
  return !!hasTarget_;
}
- (void) setHasTarget:(BOOL) value {
  hasTarget_ = !!value;
}
@synthesize target;
- (BOOL) hasEncryptionKey {
  return !!hasEncryptionKey_;
}
- (void) setHasEncryptionKey:(BOOL) value {
  hasEncryptionKey_ = !!value;
}
@synthesize encryptionKey;
- (BOOL) hasInodeNumber {
  return !!hasInodeNumber_;
}
- (void) setHasInodeNumber:(BOOL) value {
  hasInodeNumber_ = !!value;
}
@synthesize inodeNumber;
- (BOOL) hasMode {
  return !!hasMode_;
}
- (void) setHasMode:(BOOL) value {
  hasMode_ = !!value;
}
@synthesize mode;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value {
  hasGroupId_ = !!value;
}
@synthesize groupId;
- (BOOL) hasLastModified {
  return !!hasLastModified_;
}
- (void) setHasLastModified:(BOOL) value {
  hasLastModified_ = !!value;
}
@synthesize lastModified;
- (BOOL) hasLastStatusChange {
  return !!hasLastStatusChange_;
}
- (void) setHasLastStatusChange:(BOOL) value {
  hasLastStatusChange_ = !!value;
}
@synthesize lastStatusChange;
- (BOOL) hasBirth {
  return !!hasBirth_;
}
- (void) setHasBirth:(BOOL) value {
  hasBirth_ = !!value;
}
@synthesize birth;
- (BOOL) hasProtectionClass {
  return !!hasProtectionClass_;
}
- (void) setHasProtectionClass:(BOOL) value {
  hasProtectionClass_ = !!value;
}
@synthesize protectionClass;
- (BOOL) hasExtendedAttribute {
  return !!hasExtendedAttribute_;
}
- (void) setHasExtendedAttribute:(BOOL) value {
  hasExtendedAttribute_ = !!value;
}
@synthesize extendedAttribute;
- (BOOL) hasEncryptionKeyVersion {
  return !!hasEncryptionKeyVersion_;
}
- (void) setHasEncryptionKeyVersion:(BOOL) value {
  hasEncryptionKeyVersion_ = !!value;
}
@synthesize encryptionKeyVersion;
- (BOOL) hasDecryptedSize {
  return !!hasDecryptedSize_;
}
- (void) setHasDecryptedSize:(BOOL) value {
  hasDecryptedSize_ = !!value;
}
@synthesize decryptedSize;
- (void) dealloc {
  self.target = nil;
  self.encryptionKey = nil;
  self.extendedAttribute = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.keybagId = 0;
    self.target = @"";
    self.encryptionKey = [NSData data];
    self.inodeNumber = 0L;
    self.mode = 0;
    self.userId = 0;
    self.groupId = 0;
    self.lastModified = 0L;
    self.lastStatusChange = 0L;
    self.birth = 0L;
    self.protectionClass = 0;
    self.extendedAttribute = [MBSFileExtendedAttribute defaultInstance];
    self.encryptionKeyVersion = 0;
    self.decryptedSize = 0L;
  }
  return self;
}
static MBSFileAttributes* defaultMBSFileAttributesInstance = nil;
+ (void) initialize {
  if (self == [MBSFileAttributes class]) {
    defaultMBSFileAttributesInstance = [[MBSFileAttributes alloc] init];
  }
}
+ (MBSFileAttributes*) defaultInstance {
  return defaultMBSFileAttributesInstance;
}
- (MBSFileAttributes*) defaultInstance {
  return defaultMBSFileAttributesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKeybagId) {
    [output writeUInt32:1 value:self.keybagId];
  }
  if (self.hasTarget) {
    [output writeString:2 value:self.target];
  }
  if (self.hasEncryptionKey) {
    [output writeData:3 value:self.encryptionKey];
  }
  if (self.hasInodeNumber) {
    [output writeUInt64:4 value:self.inodeNumber];
  }
  if (self.hasMode) {
    [output writeUInt32:5 value:self.mode];
  }
  if (self.hasUserId) {
    [output writeUInt32:6 value:self.userId];
  }
  if (self.hasGroupId) {
    [output writeUInt32:7 value:self.groupId];
  }
  if (self.hasLastModified) {
    [output writeUInt64:8 value:self.lastModified];
  }
  if (self.hasLastStatusChange) {
    [output writeUInt64:9 value:self.lastStatusChange];
  }
  if (self.hasBirth) {
    [output writeUInt64:10 value:self.birth];
  }
  if (self.hasProtectionClass) {
    [output writeUInt32:12 value:self.protectionClass];
  }
  if (self.hasExtendedAttribute) {
    [output writeMessage:13 value:self.extendedAttribute];
  }
  if (self.hasEncryptionKeyVersion) {
    [output writeUInt32:14 value:self.encryptionKeyVersion];
  }
  if (self.hasDecryptedSize) {
    [output writeUInt64:15 value:self.decryptedSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasKeybagId) {
    size += computeUInt32Size(1, self.keybagId);
  }
  if (self.hasTarget) {
    size += computeStringSize(2, self.target);
  }
  if (self.hasEncryptionKey) {
    size += computeDataSize(3, self.encryptionKey);
  }
  if (self.hasInodeNumber) {
    size += computeUInt64Size(4, self.inodeNumber);
  }
  if (self.hasMode) {
    size += computeUInt32Size(5, self.mode);
  }
  if (self.hasUserId) {
    size += computeUInt32Size(6, self.userId);
  }
  if (self.hasGroupId) {
    size += computeUInt32Size(7, self.groupId);
  }
  if (self.hasLastModified) {
    size += computeUInt64Size(8, self.lastModified);
  }
  if (self.hasLastStatusChange) {
    size += computeUInt64Size(9, self.lastStatusChange);
  }
  if (self.hasBirth) {
    size += computeUInt64Size(10, self.birth);
  }
  if (self.hasProtectionClass) {
    size += computeUInt32Size(12, self.protectionClass);
  }
  if (self.hasExtendedAttribute) {
    size += computeMessageSize(13, self.extendedAttribute);
  }
  if (self.hasEncryptionKeyVersion) {
    size += computeUInt32Size(14, self.encryptionKeyVersion);
  }
  if (self.hasDecryptedSize) {
    size += computeUInt64Size(15, self.decryptedSize);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFileAttributes*) parseFromData:(NSData*) data {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromData:data] build];
}
+ (MBSFileAttributes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAttributes*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromInputStream:input] build];
}
+ (MBSFileAttributes*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFileAttributes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFileAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAttributes*)[[[MBSFileAttributes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAttributes_Builder*) builder {
  return [[[MBSFileAttributes_Builder alloc] init] autorelease];
}
+ (MBSFileAttributes_Builder*) builderWithPrototype:(MBSFileAttributes*) prototype {
  return [[MBSFileAttributes builder] mergeFrom:prototype];
}
- (MBSFileAttributes_Builder*) builder {
  return [MBSFileAttributes builder];
}
@end

@interface MBSFileAttributes_Builder()
@property (retain) MBSFileAttributes* result;
@end

@implementation MBSFileAttributes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFileAttributes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFileAttributes_Builder*) clear {
  self.result = [[[MBSFileAttributes alloc] init] autorelease];
  return self;
}
- (MBSFileAttributes_Builder*) clone {
  return [MBSFileAttributes builderWithPrototype:result];
}
- (MBSFileAttributes*) defaultInstance {
  return [MBSFileAttributes defaultInstance];
}
- (MBSFileAttributes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFileAttributes*) buildPartial {
  MBSFileAttributes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFileAttributes_Builder*) mergeFrom:(MBSFileAttributes*) other {
  if (other == [MBSFileAttributes defaultInstance]) {
    return self;
  }
  if (other.hasKeybagId) {
    [self setKeybagId:other.keybagId];
  }
  if (other.hasTarget) {
    [self setTarget:other.target];
  }
  if (other.hasEncryptionKey) {
    [self setEncryptionKey:other.encryptionKey];
  }
  if (other.hasInodeNumber) {
    [self setInodeNumber:other.inodeNumber];
  }
  if (other.hasMode) {
    [self setMode:other.mode];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasLastModified) {
    [self setLastModified:other.lastModified];
  }
  if (other.hasLastStatusChange) {
    [self setLastStatusChange:other.lastStatusChange];
  }
  if (other.hasBirth) {
    [self setBirth:other.birth];
  }
  if (other.hasProtectionClass) {
    [self setProtectionClass:other.protectionClass];
  }
  if (other.hasExtendedAttribute) {
    [self mergeExtendedAttribute:other.extendedAttribute];
  }
  if (other.hasEncryptionKeyVersion) {
    [self setEncryptionKeyVersion:other.encryptionKeyVersion];
  }
  if (other.hasDecryptedSize) {
    [self setDecryptedSize:other.decryptedSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFileAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFileAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setKeybagId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setTarget:[input readString]];
        break;
      }
      case 26: {
        [self setEncryptionKey:[input readData]];
        break;
      }
      case 32: {
        [self setInodeNumber:[input readUInt64]];
        break;
      }
      case 40: {
        [self setMode:[input readUInt32]];
        break;
      }
      case 48: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 56: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 64: {
        [self setLastModified:[input readUInt64]];
        break;
      }
      case 72: {
        [self setLastStatusChange:[input readUInt64]];
        break;
      }
      case 80: {
        [self setBirth:[input readUInt64]];
        break;
      }
      case 96: {
        [self setProtectionClass:[input readUInt32]];
        break;
      }
      case 106: {
        MBSFileExtendedAttribute_Builder* subBuilder = [MBSFileExtendedAttribute builder];
        if (self.hasExtendedAttribute) {
          [subBuilder mergeFrom:self.extendedAttribute];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtendedAttribute:[subBuilder buildPartial]];
        break;
      }
      case 112: {
        [self setEncryptionKeyVersion:[input readUInt32]];
        break;
      }
      case 120: {
        [self setDecryptedSize:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasKeybagId {
  return result.hasKeybagId;
}
- (int32_t) keybagId {
  return result.keybagId;
}
- (MBSFileAttributes_Builder*) setKeybagId:(int32_t) value {
  result.hasKeybagId = YES;
  result.keybagId = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearKeybagId {
  result.hasKeybagId = NO;
  result.keybagId = 0;
  return self;
}
- (BOOL) hasTarget {
  return result.hasTarget;
}
- (NSString*) target {
  return result.target;
}
- (MBSFileAttributes_Builder*) setTarget:(NSString*) value {
  result.hasTarget = YES;
  result.target = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearTarget {
  result.hasTarget = NO;
  result.target = @"";
  return self;
}
- (BOOL) hasEncryptionKey {
  return result.hasEncryptionKey;
}
- (NSData*) encryptionKey {
  return result.encryptionKey;
}
- (MBSFileAttributes_Builder*) setEncryptionKey:(NSData*) value {
  result.hasEncryptionKey = YES;
  result.encryptionKey = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearEncryptionKey {
  result.hasEncryptionKey = NO;
  result.encryptionKey = [NSData data];
  return self;
}
- (BOOL) hasInodeNumber {
  return result.hasInodeNumber;
}
- (int64_t) inodeNumber {
  return result.inodeNumber;
}
- (MBSFileAttributes_Builder*) setInodeNumber:(int64_t) value {
  result.hasInodeNumber = YES;
  result.inodeNumber = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearInodeNumber {
  result.hasInodeNumber = NO;
  result.inodeNumber = 0L;
  return self;
}
- (BOOL) hasMode {
  return result.hasMode;
}
- (int32_t) mode {
  return result.mode;
}
- (MBSFileAttributes_Builder*) setMode:(int32_t) value {
  result.hasMode = YES;
  result.mode = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearMode {
  result.hasMode = NO;
  result.mode = 0;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MBSFileAttributes_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (int32_t) groupId {
  return result.groupId;
}
- (MBSFileAttributes_Builder*) setGroupId:(int32_t) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0;
  return self;
}
- (BOOL) hasLastModified {
  return result.hasLastModified;
}
- (int64_t) lastModified {
  return result.lastModified;
}
- (MBSFileAttributes_Builder*) setLastModified:(int64_t) value {
  result.hasLastModified = YES;
  result.lastModified = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearLastModified {
  result.hasLastModified = NO;
  result.lastModified = 0L;
  return self;
}
- (BOOL) hasLastStatusChange {
  return result.hasLastStatusChange;
}
- (int64_t) lastStatusChange {
  return result.lastStatusChange;
}
- (MBSFileAttributes_Builder*) setLastStatusChange:(int64_t) value {
  result.hasLastStatusChange = YES;
  result.lastStatusChange = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearLastStatusChange {
  result.hasLastStatusChange = NO;
  result.lastStatusChange = 0L;
  return self;
}
- (BOOL) hasBirth {
  return result.hasBirth;
}
- (int64_t) birth {
  return result.birth;
}
- (MBSFileAttributes_Builder*) setBirth:(int64_t) value {
  result.hasBirth = YES;
  result.birth = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearBirth {
  result.hasBirth = NO;
  result.birth = 0L;
  return self;
}
- (BOOL) hasProtectionClass {
  return result.hasProtectionClass;
}
- (int32_t) protectionClass {
  return result.protectionClass;
}
- (MBSFileAttributes_Builder*) setProtectionClass:(int32_t) value {
  result.hasProtectionClass = YES;
  result.protectionClass = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearProtectionClass {
  result.hasProtectionClass = NO;
  result.protectionClass = 0;
  return self;
}
- (BOOL) hasExtendedAttribute {
  return result.hasExtendedAttribute;
}
- (MBSFileExtendedAttribute*) extendedAttribute {
  return result.extendedAttribute;
}
- (MBSFileAttributes_Builder*) setExtendedAttribute:(MBSFileExtendedAttribute*) value {
  result.hasExtendedAttribute = YES;
  result.extendedAttribute = value;
  return self;
}
- (MBSFileAttributes_Builder*) setExtendedAttributeBuilder:(MBSFileExtendedAttribute_Builder*) builderForValue {
  return [self setExtendedAttribute:[builderForValue build]];
}
- (MBSFileAttributes_Builder*) mergeExtendedAttribute:(MBSFileExtendedAttribute*) value {
  if (result.hasExtendedAttribute &&
      result.extendedAttribute != [MBSFileExtendedAttribute defaultInstance]) {
    result.extendedAttribute =
      [[[MBSFileExtendedAttribute builderWithPrototype:result.extendedAttribute] mergeFrom:value] buildPartial];
  } else {
    result.extendedAttribute = value;
  }
  result.hasExtendedAttribute = YES;
  return self;
}
- (MBSFileAttributes_Builder*) clearExtendedAttribute {
  result.hasExtendedAttribute = NO;
  result.extendedAttribute = [MBSFileExtendedAttribute defaultInstance];
  return self;
}
- (BOOL) hasEncryptionKeyVersion {
  return result.hasEncryptionKeyVersion;
}
- (int32_t) encryptionKeyVersion {
  return result.encryptionKeyVersion;
}
- (MBSFileAttributes_Builder*) setEncryptionKeyVersion:(int32_t) value {
  result.hasEncryptionKeyVersion = YES;
  result.encryptionKeyVersion = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearEncryptionKeyVersion {
  result.hasEncryptionKeyVersion = NO;
  result.encryptionKeyVersion = 0;
  return self;
}
- (BOOL) hasDecryptedSize {
  return result.hasDecryptedSize;
}
- (int64_t) decryptedSize {
  return result.decryptedSize;
}
- (MBSFileAttributes_Builder*) setDecryptedSize:(int64_t) value {
  result.hasDecryptedSize = YES;
  result.decryptedSize = value;
  return self;
}
- (MBSFileAttributes_Builder*) clearDecryptedSize {
  result.hasDecryptedSize = NO;
  result.decryptedSize = 0L;
  return self;
}
@end

@interface MBSSnapshot ()
@property int32_t snapshotId;
@property int64_t quotaReserved;
@property int64_t lastModified;
@property (retain) MBSSnapshotAttributes* attributes;
@property int64_t committed;
@end

@implementation MBSSnapshot

- (BOOL) hasSnapshotId {
  return !!hasSnapshotId_;
}
- (void) setHasSnapshotId:(BOOL) value {
  hasSnapshotId_ = !!value;
}
@synthesize snapshotId;
- (BOOL) hasQuotaReserved {
  return !!hasQuotaReserved_;
}
- (void) setHasQuotaReserved:(BOOL) value {
  hasQuotaReserved_ = !!value;
}
@synthesize quotaReserved;
- (BOOL) hasLastModified {
  return !!hasLastModified_;
}
- (void) setHasLastModified:(BOOL) value {
  hasLastModified_ = !!value;
}
@synthesize lastModified;
- (BOOL) hasAttributes {
  return !!hasAttributes_;
}
- (void) setHasAttributes:(BOOL) value {
  hasAttributes_ = !!value;
}
@synthesize attributes;
- (BOOL) hasCommitted {
  return !!hasCommitted_;
}
- (void) setHasCommitted:(BOOL) value {
  hasCommitted_ = !!value;
}
@synthesize committed;
- (void) dealloc {
  self.attributes = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.snapshotId = 0;
    self.quotaReserved = 0L;
    self.lastModified = 0L;
    self.attributes = [MBSSnapshotAttributes defaultInstance];
    self.committed = 0L;
  }
  return self;
}
static MBSSnapshot* defaultMBSSnapshotInstance = nil;
+ (void) initialize {
  if (self == [MBSSnapshot class]) {
    defaultMBSSnapshotInstance = [[MBSSnapshot alloc] init];
  }
}
+ (MBSSnapshot*) defaultInstance {
  return defaultMBSSnapshotInstance;
}
- (MBSSnapshot*) defaultInstance {
  return defaultMBSSnapshotInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSnapshotId) {
    [output writeUInt32:1 value:self.snapshotId];
  }
  if (self.hasQuotaReserved) {
    [output writeUInt64:2 value:self.quotaReserved];
  }
  if (self.hasLastModified) {
    [output writeUInt64:3 value:self.lastModified];
  }
  if (self.hasAttributes) {
    [output writeMessage:5 value:self.attributes];
  }
  if (self.hasCommitted) {
    [output writeUInt64:6 value:self.committed];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSnapshotId) {
    size += computeUInt32Size(1, self.snapshotId);
  }
  if (self.hasQuotaReserved) {
    size += computeUInt64Size(2, self.quotaReserved);
  }
  if (self.hasLastModified) {
    size += computeUInt64Size(3, self.lastModified);
  }
  if (self.hasAttributes) {
    size += computeMessageSize(5, self.attributes);
  }
  if (self.hasCommitted) {
    size += computeUInt64Size(6, self.committed);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSSnapshot*) parseFromData:(NSData*) data {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromData:data] build];
}
+ (MBSSnapshot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshot*) parseFromInputStream:(NSInputStream*) input {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromInputStream:input] build];
}
+ (MBSSnapshot*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSSnapshot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromCodedInputStream:input] build];
}
+ (MBSSnapshot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshot*)[[[MBSSnapshot builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshot_Builder*) builder {
  return [[[MBSSnapshot_Builder alloc] init] autorelease];
}
+ (MBSSnapshot_Builder*) builderWithPrototype:(MBSSnapshot*) prototype {
  return [[MBSSnapshot builder] mergeFrom:prototype];
}
- (MBSSnapshot_Builder*) builder {
  return [MBSSnapshot builder];
}
@end

@interface MBSSnapshot_Builder()
@property (retain) MBSSnapshot* result;
@end

@implementation MBSSnapshot_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSSnapshot alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSSnapshot_Builder*) clear {
  self.result = [[[MBSSnapshot alloc] init] autorelease];
  return self;
}
- (MBSSnapshot_Builder*) clone {
  return [MBSSnapshot builderWithPrototype:result];
}
- (MBSSnapshot*) defaultInstance {
  return [MBSSnapshot defaultInstance];
}
- (MBSSnapshot*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSSnapshot*) buildPartial {
  MBSSnapshot* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSSnapshot_Builder*) mergeFrom:(MBSSnapshot*) other {
  if (other == [MBSSnapshot defaultInstance]) {
    return self;
  }
  if (other.hasSnapshotId) {
    [self setSnapshotId:other.snapshotId];
  }
  if (other.hasQuotaReserved) {
    [self setQuotaReserved:other.quotaReserved];
  }
  if (other.hasLastModified) {
    [self setLastModified:other.lastModified];
  }
  if (other.hasAttributes) {
    [self mergeAttributes:other.attributes];
  }
  if (other.hasCommitted) {
    [self setCommitted:other.committed];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSSnapshot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSnapshotId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setQuotaReserved:[input readUInt64]];
        break;
      }
      case 24: {
        [self setLastModified:[input readUInt64]];
        break;
      }
      case 42: {
        MBSSnapshotAttributes_Builder* subBuilder = [MBSSnapshotAttributes builder];
        if (self.hasAttributes) {
          [subBuilder mergeFrom:self.attributes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttributes:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setCommitted:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSnapshotId {
  return result.hasSnapshotId;
}
- (int32_t) snapshotId {
  return result.snapshotId;
}
- (MBSSnapshot_Builder*) setSnapshotId:(int32_t) value {
  result.hasSnapshotId = YES;
  result.snapshotId = value;
  return self;
}
- (MBSSnapshot_Builder*) clearSnapshotId {
  result.hasSnapshotId = NO;
  result.snapshotId = 0;
  return self;
}
- (BOOL) hasQuotaReserved {
  return result.hasQuotaReserved;
}
- (int64_t) quotaReserved {
  return result.quotaReserved;
}
- (MBSSnapshot_Builder*) setQuotaReserved:(int64_t) value {
  result.hasQuotaReserved = YES;
  result.quotaReserved = value;
  return self;
}
- (MBSSnapshot_Builder*) clearQuotaReserved {
  result.hasQuotaReserved = NO;
  result.quotaReserved = 0L;
  return self;
}
- (BOOL) hasLastModified {
  return result.hasLastModified;
}
- (int64_t) lastModified {
  return result.lastModified;
}
- (MBSSnapshot_Builder*) setLastModified:(int64_t) value {
  result.hasLastModified = YES;
  result.lastModified = value;
  return self;
}
- (MBSSnapshot_Builder*) clearLastModified {
  result.hasLastModified = NO;
  result.lastModified = 0L;
  return self;
}
- (BOOL) hasAttributes {
  return result.hasAttributes;
}
- (MBSSnapshotAttributes*) attributes {
  return result.attributes;
}
- (MBSSnapshot_Builder*) setAttributes:(MBSSnapshotAttributes*) value {
  result.hasAttributes = YES;
  result.attributes = value;
  return self;
}
- (MBSSnapshot_Builder*) setAttributesBuilder:(MBSSnapshotAttributes_Builder*) builderForValue {
  return [self setAttributes:[builderForValue build]];
}
- (MBSSnapshot_Builder*) mergeAttributes:(MBSSnapshotAttributes*) value {
  if (result.hasAttributes &&
      result.attributes != [MBSSnapshotAttributes defaultInstance]) {
    result.attributes =
      [[[MBSSnapshotAttributes builderWithPrototype:result.attributes] mergeFrom:value] buildPartial];
  } else {
    result.attributes = value;
  }
  result.hasAttributes = YES;
  return self;
}
- (MBSSnapshot_Builder*) clearAttributes {
  result.hasAttributes = NO;
  result.attributes = [MBSSnapshotAttributes defaultInstance];
  return self;
}
- (BOOL) hasCommitted {
  return result.hasCommitted;
}
- (int64_t) committed {
  return result.committed;
}
- (MBSSnapshot_Builder*) setCommitted:(int64_t) value {
  result.hasCommitted = YES;
  result.committed = value;
  return self;
}
- (MBSSnapshot_Builder*) clearCommitted {
  result.hasCommitted = NO;
  result.committed = 0L;
  return self;
}
@end

@interface MBSSnapshotAttributes ()
@property (retain) NSString* deviceName;
@property (retain) NSString* productVersion;
@property (retain) NSString* buildVersion;
@property int32_t keybagId;
@property (retain) NSData* keybagUuid;
@property int32_t backupReason;
@property int32_t backupType;
@end

@implementation MBSSnapshotAttributes

- (BOOL) hasDeviceName {
  return !!hasDeviceName_;
}
- (void) setHasDeviceName:(BOOL) value {
  hasDeviceName_ = !!value;
}
@synthesize deviceName;
- (BOOL) hasProductVersion {
  return !!hasProductVersion_;
}
- (void) setHasProductVersion:(BOOL) value {
  hasProductVersion_ = !!value;
}
@synthesize productVersion;
- (BOOL) hasBuildVersion {
  return !!hasBuildVersion_;
}
- (void) setHasBuildVersion:(BOOL) value {
  hasBuildVersion_ = !!value;
}
@synthesize buildVersion;
- (BOOL) hasKeybagId {
  return !!hasKeybagId_;
}
- (void) setHasKeybagId:(BOOL) value {
  hasKeybagId_ = !!value;
}
@synthesize keybagId;
- (BOOL) hasKeybagUuid {
  return !!hasKeybagUuid_;
}
- (void) setHasKeybagUuid:(BOOL) value {
  hasKeybagUuid_ = !!value;
}
@synthesize keybagUuid;
- (BOOL) hasBackupReason {
  return !!hasBackupReason_;
}
- (void) setHasBackupReason:(BOOL) value {
  hasBackupReason_ = !!value;
}
@synthesize backupReason;
- (BOOL) hasBackupType {
  return !!hasBackupType_;
}
- (void) setHasBackupType:(BOOL) value {
  hasBackupType_ = !!value;
}
@synthesize backupType;
- (void) dealloc {
  self.deviceName = nil;
  self.productVersion = nil;
  self.buildVersion = nil;
  self.keybagUuid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceName = @"";
    self.productVersion = @"";
    self.buildVersion = @"";
    self.keybagId = 0;
    self.keybagUuid = [NSData data];
    self.backupReason = 0;
    self.backupType = 0;
  }
  return self;
}
static MBSSnapshotAttributes* defaultMBSSnapshotAttributesInstance = nil;
+ (void) initialize {
  if (self == [MBSSnapshotAttributes class]) {
    defaultMBSSnapshotAttributesInstance = [[MBSSnapshotAttributes alloc] init];
  }
}
+ (MBSSnapshotAttributes*) defaultInstance {
  return defaultMBSSnapshotAttributesInstance;
}
- (MBSSnapshotAttributes*) defaultInstance {
  return defaultMBSSnapshotAttributesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceName) {
    [output writeString:1 value:self.deviceName];
  }
  if (self.hasProductVersion) {
    [output writeString:2 value:self.productVersion];
  }
  if (self.hasBuildVersion) {
    [output writeString:3 value:self.buildVersion];
  }
  if (self.hasKeybagId) {
    [output writeUInt32:4 value:self.keybagId];
  }
  if (self.hasKeybagUuid) {
    [output writeData:5 value:self.keybagUuid];
  }
  if (self.hasBackupReason) {
    [output writeInt32:6 value:self.backupReason];
  }
  if (self.hasBackupType) {
    [output writeInt32:7 value:self.backupType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceName) {
    size += computeStringSize(1, self.deviceName);
  }
  if (self.hasProductVersion) {
    size += computeStringSize(2, self.productVersion);
  }
  if (self.hasBuildVersion) {
    size += computeStringSize(3, self.buildVersion);
  }
  if (self.hasKeybagId) {
    size += computeUInt32Size(4, self.keybagId);
  }
  if (self.hasKeybagUuid) {
    size += computeDataSize(5, self.keybagUuid);
  }
  if (self.hasBackupReason) {
    size += computeInt32Size(6, self.backupReason);
  }
  if (self.hasBackupType) {
    size += computeInt32Size(7, self.backupType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSSnapshotAttributes*) parseFromData:(NSData*) data {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromData:data] build];
}
+ (MBSSnapshotAttributes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotAttributes*) parseFromInputStream:(NSInputStream*) input {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromInputStream:input] build];
}
+ (MBSSnapshotAttributes*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSSnapshotAttributes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromCodedInputStream:input] build];
}
+ (MBSSnapshotAttributes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotAttributes*)[[[MBSSnapshotAttributes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotAttributes_Builder*) builder {
  return [[[MBSSnapshotAttributes_Builder alloc] init] autorelease];
}
+ (MBSSnapshotAttributes_Builder*) builderWithPrototype:(MBSSnapshotAttributes*) prototype {
  return [[MBSSnapshotAttributes builder] mergeFrom:prototype];
}
- (MBSSnapshotAttributes_Builder*) builder {
  return [MBSSnapshotAttributes builder];
}
@end

@interface MBSSnapshotAttributes_Builder()
@property (retain) MBSSnapshotAttributes* result;
@end

@implementation MBSSnapshotAttributes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSSnapshotAttributes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSSnapshotAttributes_Builder*) clear {
  self.result = [[[MBSSnapshotAttributes alloc] init] autorelease];
  return self;
}
- (MBSSnapshotAttributes_Builder*) clone {
  return [MBSSnapshotAttributes builderWithPrototype:result];
}
- (MBSSnapshotAttributes*) defaultInstance {
  return [MBSSnapshotAttributes defaultInstance];
}
- (MBSSnapshotAttributes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSSnapshotAttributes*) buildPartial {
  MBSSnapshotAttributes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSSnapshotAttributes_Builder*) mergeFrom:(MBSSnapshotAttributes*) other {
  if (other == [MBSSnapshotAttributes defaultInstance]) {
    return self;
  }
  if (other.hasDeviceName) {
    [self setDeviceName:other.deviceName];
  }
  if (other.hasProductVersion) {
    [self setProductVersion:other.productVersion];
  }
  if (other.hasBuildVersion) {
    [self setBuildVersion:other.buildVersion];
  }
  if (other.hasKeybagId) {
    [self setKeybagId:other.keybagId];
  }
  if (other.hasKeybagUuid) {
    [self setKeybagUuid:other.keybagUuid];
  }
  if (other.hasBackupReason) {
    [self setBackupReason:other.backupReason];
  }
  if (other.hasBackupType) {
    [self setBackupType:other.backupType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSSnapshotAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSSnapshotAttributes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceName:[input readString]];
        break;
      }
      case 18: {
        [self setProductVersion:[input readString]];
        break;
      }
      case 26: {
        [self setBuildVersion:[input readString]];
        break;
      }
      case 32: {
        [self setKeybagId:[input readUInt32]];
        break;
      }
      case 42: {
        [self setKeybagUuid:[input readData]];
        break;
      }
      case 48: {
        [self setBackupReason:[input readInt32]];
        break;
      }
      case 56: {
        [self setBackupType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceName {
  return result.hasDeviceName;
}
- (NSString*) deviceName {
  return result.deviceName;
}
- (MBSSnapshotAttributes_Builder*) setDeviceName:(NSString*) value {
  result.hasDeviceName = YES;
  result.deviceName = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearDeviceName {
  result.hasDeviceName = NO;
  result.deviceName = @"";
  return self;
}
- (BOOL) hasProductVersion {
  return result.hasProductVersion;
}
- (NSString*) productVersion {
  return result.productVersion;
}
- (MBSSnapshotAttributes_Builder*) setProductVersion:(NSString*) value {
  result.hasProductVersion = YES;
  result.productVersion = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearProductVersion {
  result.hasProductVersion = NO;
  result.productVersion = @"";
  return self;
}
- (BOOL) hasBuildVersion {
  return result.hasBuildVersion;
}
- (NSString*) buildVersion {
  return result.buildVersion;
}
- (MBSSnapshotAttributes_Builder*) setBuildVersion:(NSString*) value {
  result.hasBuildVersion = YES;
  result.buildVersion = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearBuildVersion {
  result.hasBuildVersion = NO;
  result.buildVersion = @"";
  return self;
}
- (BOOL) hasKeybagId {
  return result.hasKeybagId;
}
- (int32_t) keybagId {
  return result.keybagId;
}
- (MBSSnapshotAttributes_Builder*) setKeybagId:(int32_t) value {
  result.hasKeybagId = YES;
  result.keybagId = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearKeybagId {
  result.hasKeybagId = NO;
  result.keybagId = 0;
  return self;
}
- (BOOL) hasKeybagUuid {
  return result.hasKeybagUuid;
}
- (NSData*) keybagUuid {
  return result.keybagUuid;
}
- (MBSSnapshotAttributes_Builder*) setKeybagUuid:(NSData*) value {
  result.hasKeybagUuid = YES;
  result.keybagUuid = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearKeybagUuid {
  result.hasKeybagUuid = NO;
  result.keybagUuid = [NSData data];
  return self;
}
- (BOOL) hasBackupReason {
  return result.hasBackupReason;
}
- (int32_t) backupReason {
  return result.backupReason;
}
- (MBSSnapshotAttributes_Builder*) setBackupReason:(int32_t) value {
  result.hasBackupReason = YES;
  result.backupReason = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearBackupReason {
  result.hasBackupReason = NO;
  result.backupReason = 0;
  return self;
}
- (BOOL) hasBackupType {
  return result.hasBackupType;
}
- (int32_t) backupType {
  return result.backupType;
}
- (MBSSnapshotAttributes_Builder*) setBackupType:(int32_t) value {
  result.hasBackupType = YES;
  result.backupType = value;
  return self;
}
- (MBSSnapshotAttributes_Builder*) clearBackupType {
  result.hasBackupType = NO;
  result.backupType = 0;
  return self;
}
@end

@interface MBSSnapshotID ()
@property int32_t snapshotId;
@end

@implementation MBSSnapshotID

- (BOOL) hasSnapshotId {
  return !!hasSnapshotId_;
}
- (void) setHasSnapshotId:(BOOL) value {
  hasSnapshotId_ = !!value;
}
@synthesize snapshotId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.snapshotId = 0;
  }
  return self;
}
static MBSSnapshotID* defaultMBSSnapshotIDInstance = nil;
+ (void) initialize {
  if (self == [MBSSnapshotID class]) {
    defaultMBSSnapshotIDInstance = [[MBSSnapshotID alloc] init];
  }
}
+ (MBSSnapshotID*) defaultInstance {
  return defaultMBSSnapshotIDInstance;
}
- (MBSSnapshotID*) defaultInstance {
  return defaultMBSSnapshotIDInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSnapshotId) {
    [output writeUInt32:1 value:self.snapshotId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSnapshotId) {
    size += computeUInt32Size(1, self.snapshotId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSSnapshotID*) parseFromData:(NSData*) data {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromData:data] build];
}
+ (MBSSnapshotID*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotID*) parseFromInputStream:(NSInputStream*) input {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromInputStream:input] build];
}
+ (MBSSnapshotID*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSSnapshotID*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotID*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromCodedInputStream:input] build];
}
+ (MBSSnapshotID*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSSnapshotID*)[[[MBSSnapshotID builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSSnapshotID_Builder*) builder {
  return [[[MBSSnapshotID_Builder alloc] init] autorelease];
}
+ (MBSSnapshotID_Builder*) builderWithPrototype:(MBSSnapshotID*) prototype {
  return [[MBSSnapshotID builder] mergeFrom:prototype];
}
- (MBSSnapshotID_Builder*) builder {
  return [MBSSnapshotID builder];
}
@end

@interface MBSSnapshotID_Builder()
@property (retain) MBSSnapshotID* result;
@end

@implementation MBSSnapshotID_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSSnapshotID alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSSnapshotID_Builder*) clear {
  self.result = [[[MBSSnapshotID alloc] init] autorelease];
  return self;
}
- (MBSSnapshotID_Builder*) clone {
  return [MBSSnapshotID builderWithPrototype:result];
}
- (MBSSnapshotID*) defaultInstance {
  return [MBSSnapshotID defaultInstance];
}
- (MBSSnapshotID*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSSnapshotID*) buildPartial {
  MBSSnapshotID* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSSnapshotID_Builder*) mergeFrom:(MBSSnapshotID*) other {
  if (other == [MBSSnapshotID defaultInstance]) {
    return self;
  }
  if (other.hasSnapshotId) {
    [self setSnapshotId:other.snapshotId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSSnapshotID_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSSnapshotID_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSnapshotId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSnapshotId {
  return result.hasSnapshotId;
}
- (int32_t) snapshotId {
  return result.snapshotId;
}
- (MBSSnapshotID_Builder*) setSnapshotId:(int32_t) value {
  result.hasSnapshotId = YES;
  result.snapshotId = value;
  return self;
}
- (MBSSnapshotID_Builder*) clearSnapshotId {
  result.hasSnapshotId = NO;
  result.snapshotId = 0;
  return self;
}
@end

@interface MBSFileAuthToken ()
@property (retain) NSData* fileId;
@property (retain) NSString* authToken;
@end

@implementation MBSFileAuthToken

- (BOOL) hasFileId {
  return !!hasFileId_;
}
- (void) setHasFileId:(BOOL) value {
  hasFileId_ = !!value;
}
@synthesize fileId;
- (BOOL) hasAuthToken {
  return !!hasAuthToken_;
}
- (void) setHasAuthToken:(BOOL) value {
  hasAuthToken_ = !!value;
}
@synthesize authToken;
- (void) dealloc {
  self.fileId = nil;
  self.authToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fileId = [NSData data];
    self.authToken = @"";
  }
  return self;
}
static MBSFileAuthToken* defaultMBSFileAuthTokenInstance = nil;
+ (void) initialize {
  if (self == [MBSFileAuthToken class]) {
    defaultMBSFileAuthTokenInstance = [[MBSFileAuthToken alloc] init];
  }
}
+ (MBSFileAuthToken*) defaultInstance {
  return defaultMBSFileAuthTokenInstance;
}
- (MBSFileAuthToken*) defaultInstance {
  return defaultMBSFileAuthTokenInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFileId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileId) {
    [output writeData:1 value:self.fileId];
  }
  if (self.hasAuthToken) {
    [output writeString:2 value:self.authToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFileId) {
    size += computeDataSize(1, self.fileId);
  }
  if (self.hasAuthToken) {
    size += computeStringSize(2, self.authToken);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFileAuthToken*) parseFromData:(NSData*) data {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromData:data] build];
}
+ (MBSFileAuthToken*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthToken*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromInputStream:input] build];
}
+ (MBSFileAuthToken*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFileAuthToken*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthToken*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFileAuthToken*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthToken*)[[[MBSFileAuthToken builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthToken_Builder*) builder {
  return [[[MBSFileAuthToken_Builder alloc] init] autorelease];
}
+ (MBSFileAuthToken_Builder*) builderWithPrototype:(MBSFileAuthToken*) prototype {
  return [[MBSFileAuthToken builder] mergeFrom:prototype];
}
- (MBSFileAuthToken_Builder*) builder {
  return [MBSFileAuthToken builder];
}
@end

@interface MBSFileAuthToken_Builder()
@property (retain) MBSFileAuthToken* result;
@end

@implementation MBSFileAuthToken_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFileAuthToken alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFileAuthToken_Builder*) clear {
  self.result = [[[MBSFileAuthToken alloc] init] autorelease];
  return self;
}
- (MBSFileAuthToken_Builder*) clone {
  return [MBSFileAuthToken builderWithPrototype:result];
}
- (MBSFileAuthToken*) defaultInstance {
  return [MBSFileAuthToken defaultInstance];
}
- (MBSFileAuthToken*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFileAuthToken*) buildPartial {
  MBSFileAuthToken* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFileAuthToken_Builder*) mergeFrom:(MBSFileAuthToken*) other {
  if (other == [MBSFileAuthToken defaultInstance]) {
    return self;
  }
  if (other.hasFileId) {
    [self setFileId:other.fileId];
  }
  if (other.hasAuthToken) {
    [self setAuthToken:other.authToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFileAuthToken_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFileAuthToken_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFileId:[input readData]];
        break;
      }
      case 18: {
        [self setAuthToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFileId {
  return result.hasFileId;
}
- (NSData*) fileId {
  return result.fileId;
}
- (MBSFileAuthToken_Builder*) setFileId:(NSData*) value {
  result.hasFileId = YES;
  result.fileId = value;
  return self;
}
- (MBSFileAuthToken_Builder*) clearFileId {
  result.hasFileId = NO;
  result.fileId = [NSData data];
  return self;
}
- (BOOL) hasAuthToken {
  return result.hasAuthToken;
}
- (NSString*) authToken {
  return result.authToken;
}
- (MBSFileAuthToken_Builder*) setAuthToken:(NSString*) value {
  result.hasAuthToken = YES;
  result.authToken = value;
  return self;
}
- (MBSFileAuthToken_Builder*) clearAuthToken {
  result.hasAuthToken = NO;
  result.authToken = @"";
  return self;
}
@end

@interface MBSFileAuthTokens ()
@property (retain) NSMutableArray* mutableTokensList;
@end

@implementation MBSFileAuthTokens

@synthesize mutableTokensList;
- (void) dealloc {
  self.mutableTokensList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MBSFileAuthTokens* defaultMBSFileAuthTokensInstance = nil;
+ (void) initialize {
  if (self == [MBSFileAuthTokens class]) {
    defaultMBSFileAuthTokensInstance = [[MBSFileAuthTokens alloc] init];
  }
}
+ (MBSFileAuthTokens*) defaultInstance {
  return defaultMBSFileAuthTokensInstance;
}
- (MBSFileAuthTokens*) defaultInstance {
  return defaultMBSFileAuthTokensInstance;
}
- (NSArray*) tokensList {
  return mutableTokensList;
}
- (MBSFileAuthToken*) tokensAtIndex:(int32_t) index {
  id value = [mutableTokensList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (MBSFileAuthToken* element in self.tokensList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MBSFileAuthToken* element in self.tokensList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MBSFileAuthToken* element in self.tokensList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFileAuthTokens*) parseFromData:(NSData*) data {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromData:data] build];
}
+ (MBSFileAuthTokens*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthTokens*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromInputStream:input] build];
}
+ (MBSFileAuthTokens*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFileAuthTokens*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthTokens*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFileAuthTokens*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileAuthTokens*)[[[MBSFileAuthTokens builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileAuthTokens_Builder*) builder {
  return [[[MBSFileAuthTokens_Builder alloc] init] autorelease];
}
+ (MBSFileAuthTokens_Builder*) builderWithPrototype:(MBSFileAuthTokens*) prototype {
  return [[MBSFileAuthTokens builder] mergeFrom:prototype];
}
- (MBSFileAuthTokens_Builder*) builder {
  return [MBSFileAuthTokens builder];
}
@end

@interface MBSFileAuthTokens_Builder()
@property (retain) MBSFileAuthTokens* result;
@end

@implementation MBSFileAuthTokens_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFileAuthTokens alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFileAuthTokens_Builder*) clear {
  self.result = [[[MBSFileAuthTokens alloc] init] autorelease];
  return self;
}
- (MBSFileAuthTokens_Builder*) clone {
  return [MBSFileAuthTokens builderWithPrototype:result];
}
- (MBSFileAuthTokens*) defaultInstance {
  return [MBSFileAuthTokens defaultInstance];
}
- (MBSFileAuthTokens*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFileAuthTokens*) buildPartial {
  MBSFileAuthTokens* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFileAuthTokens_Builder*) mergeFrom:(MBSFileAuthTokens*) other {
  if (other == [MBSFileAuthTokens defaultInstance]) {
    return self;
  }
  if (other.mutableTokensList.count > 0) {
    if (result.mutableTokensList == nil) {
      result.mutableTokensList = [NSMutableArray array];
    }
    [result.mutableTokensList addObjectsFromArray:other.mutableTokensList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFileAuthTokens_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFileAuthTokens_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MBSFileAuthToken_Builder* subBuilder = [MBSFileAuthToken builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTokens:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) tokensList {
  if (result.mutableTokensList == nil) { return [NSArray array]; }
  return result.mutableTokensList;
}
- (MBSFileAuthToken*) tokensAtIndex:(int32_t) index {
  return [result tokensAtIndex:index];
}
- (MBSFileAuthTokens_Builder*) replaceTokensAtIndex:(int32_t) index with:(MBSFileAuthToken*) value {
  [result.mutableTokensList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MBSFileAuthTokens_Builder*) addAllTokens:(NSArray*) values {
  if (result.mutableTokensList == nil) {
    result.mutableTokensList = [NSMutableArray array];
  }
  [result.mutableTokensList addObjectsFromArray:values];
  return self;
}
- (MBSFileAuthTokens_Builder*) clearTokensList {
  result.mutableTokensList = nil;
  return self;
}
- (MBSFileAuthTokens_Builder*) addTokens:(MBSFileAuthToken*) value {
  if (result.mutableTokensList == nil) {
    result.mutableTokensList = [NSMutableArray array];
  }
  [result.mutableTokensList addObject:value];
  return self;
}
@end

@interface MBSFileID ()
@property (retain) NSData* fileId;
@end

@implementation MBSFileID

- (BOOL) hasFileId {
  return !!hasFileId_;
}
- (void) setHasFileId:(BOOL) value {
  hasFileId_ = !!value;
}
@synthesize fileId;
- (void) dealloc {
  self.fileId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fileId = [NSData data];
  }
  return self;
}
static MBSFileID* defaultMBSFileIDInstance = nil;
+ (void) initialize {
  if (self == [MBSFileID class]) {
    defaultMBSFileIDInstance = [[MBSFileID alloc] init];
  }
}
+ (MBSFileID*) defaultInstance {
  return defaultMBSFileIDInstance;
}
- (MBSFileID*) defaultInstance {
  return defaultMBSFileIDInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFileId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileId) {
    [output writeData:1 value:self.fileId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFileId) {
    size += computeDataSize(1, self.fileId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFileID*) parseFromData:(NSData*) data {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromData:data] build];
}
+ (MBSFileID*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFileID*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromInputStream:input] build];
}
+ (MBSFileID*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFileID*)[[[MBSFileID builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFileID*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileID*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFileID*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileID*)[[[MBSFileID builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileID_Builder*) builder {
  return [[[MBSFileID_Builder alloc] init] autorelease];
}
+ (MBSFileID_Builder*) builderWithPrototype:(MBSFileID*) prototype {
  return [[MBSFileID builder] mergeFrom:prototype];
}
- (MBSFileID_Builder*) builder {
  return [MBSFileID builder];
}
@end

@interface MBSFileID_Builder()
@property (retain) MBSFileID* result;
@end

@implementation MBSFileID_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFileID alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFileID_Builder*) clear {
  self.result = [[[MBSFileID alloc] init] autorelease];
  return self;
}
- (MBSFileID_Builder*) clone {
  return [MBSFileID builderWithPrototype:result];
}
- (MBSFileID*) defaultInstance {
  return [MBSFileID defaultInstance];
}
- (MBSFileID*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFileID*) buildPartial {
  MBSFileID* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFileID_Builder*) mergeFrom:(MBSFileID*) other {
  if (other == [MBSFileID defaultInstance]) {
    return self;
  }
  if (other.hasFileId) {
    [self setFileId:other.fileId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFileID_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFileID_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFileId:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFileId {
  return result.hasFileId;
}
- (NSData*) fileId {
  return result.fileId;
}
- (MBSFileID_Builder*) setFileId:(NSData*) value {
  result.hasFileId = YES;
  result.fileId = value;
  return self;
}
- (MBSFileID_Builder*) clearFileId {
  result.hasFileId = NO;
  result.fileId = [NSData data];
  return self;
}
@end

@interface MBSKey ()
@property int32_t keyId;
@property (retain) NSData* keyData;
@end

@implementation MBSKey

- (BOOL) hasKeyId {
  return !!hasKeyId_;
}
- (void) setHasKeyId:(BOOL) value {
  hasKeyId_ = !!value;
}
@synthesize keyId;
- (BOOL) hasKeyData {
  return !!hasKeyData_;
}
- (void) setHasKeyData:(BOOL) value {
  hasKeyData_ = !!value;
}
@synthesize keyData;
- (void) dealloc {
  self.keyData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.keyId = 0;
    self.keyData = [NSData data];
  }
  return self;
}
static MBSKey* defaultMBSKeyInstance = nil;
+ (void) initialize {
  if (self == [MBSKey class]) {
    defaultMBSKeyInstance = [[MBSKey alloc] init];
  }
}
+ (MBSKey*) defaultInstance {
  return defaultMBSKeyInstance;
}
- (MBSKey*) defaultInstance {
  return defaultMBSKeyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKeyId) {
    [output writeUInt32:1 value:self.keyId];
  }
  if (self.hasKeyData) {
    [output writeData:2 value:self.keyData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasKeyId) {
    size += computeUInt32Size(1, self.keyId);
  }
  if (self.hasKeyData) {
    size += computeDataSize(2, self.keyData);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSKey*) parseFromData:(NSData*) data {
  return (MBSKey*)[[[MBSKey builder] mergeFromData:data] build];
}
+ (MBSKey*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKey*)[[[MBSKey builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSKey*) parseFromInputStream:(NSInputStream*) input {
  return (MBSKey*)[[[MBSKey builder] mergeFromInputStream:input] build];
}
+ (MBSKey*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSKey*)[[[MBSKey builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSKey*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKey*)[[[MBSKey builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSKey*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSKey*)[[[MBSKey builder] mergeFromCodedInputStream:input] build];
}
+ (MBSKey*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKey*)[[[MBSKey builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSKey_Builder*) builder {
  return [[[MBSKey_Builder alloc] init] autorelease];
}
+ (MBSKey_Builder*) builderWithPrototype:(MBSKey*) prototype {
  return [[MBSKey builder] mergeFrom:prototype];
}
- (MBSKey_Builder*) builder {
  return [MBSKey builder];
}
@end

@interface MBSKey_Builder()
@property (retain) MBSKey* result;
@end

@implementation MBSKey_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSKey alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSKey_Builder*) clear {
  self.result = [[[MBSKey alloc] init] autorelease];
  return self;
}
- (MBSKey_Builder*) clone {
  return [MBSKey builderWithPrototype:result];
}
- (MBSKey*) defaultInstance {
  return [MBSKey defaultInstance];
}
- (MBSKey*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSKey*) buildPartial {
  MBSKey* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSKey_Builder*) mergeFrom:(MBSKey*) other {
  if (other == [MBSKey defaultInstance]) {
    return self;
  }
  if (other.hasKeyId) {
    [self setKeyId:other.keyId];
  }
  if (other.hasKeyData) {
    [self setKeyData:other.keyData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSKey_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSKey_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setKeyId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setKeyData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasKeyId {
  return result.hasKeyId;
}
- (int32_t) keyId {
  return result.keyId;
}
- (MBSKey_Builder*) setKeyId:(int32_t) value {
  result.hasKeyId = YES;
  result.keyId = value;
  return self;
}
- (MBSKey_Builder*) clearKeyId {
  result.hasKeyId = NO;
  result.keyId = 0;
  return self;
}
- (BOOL) hasKeyData {
  return result.hasKeyData;
}
- (NSData*) keyData {
  return result.keyData;
}
- (MBSKey_Builder*) setKeyData:(NSData*) value {
  result.hasKeyData = YES;
  result.keyData = value;
  return self;
}
- (MBSKey_Builder*) clearKeyData {
  result.hasKeyData = NO;
  result.keyData = [NSData data];
  return self;
}
@end

@interface MBSKeySet ()
@property (retain) NSMutableArray* mutableKeyList;
@end

@implementation MBSKeySet

@synthesize mutableKeyList;
- (void) dealloc {
  self.mutableKeyList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MBSKeySet* defaultMBSKeySetInstance = nil;
+ (void) initialize {
  if (self == [MBSKeySet class]) {
    defaultMBSKeySetInstance = [[MBSKeySet alloc] init];
  }
}
+ (MBSKeySet*) defaultInstance {
  return defaultMBSKeySetInstance;
}
- (MBSKeySet*) defaultInstance {
  return defaultMBSKeySetInstance;
}
- (NSArray*) keyList {
  return mutableKeyList;
}
- (MBSKey*) keyAtIndex:(int32_t) index {
  id value = [mutableKeyList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MBSKey* element in self.keyList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MBSKey* element in self.keyList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSKeySet*) parseFromData:(NSData*) data {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromData:data] build];
}
+ (MBSKeySet*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSKeySet*) parseFromInputStream:(NSInputStream*) input {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromInputStream:input] build];
}
+ (MBSKeySet*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSKeySet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSKeySet*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromCodedInputStream:input] build];
}
+ (MBSKeySet*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSKeySet*)[[[MBSKeySet builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSKeySet_Builder*) builder {
  return [[[MBSKeySet_Builder alloc] init] autorelease];
}
+ (MBSKeySet_Builder*) builderWithPrototype:(MBSKeySet*) prototype {
  return [[MBSKeySet builder] mergeFrom:prototype];
}
- (MBSKeySet_Builder*) builder {
  return [MBSKeySet builder];
}
@end

@interface MBSKeySet_Builder()
@property (retain) MBSKeySet* result;
@end

@implementation MBSKeySet_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSKeySet alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSKeySet_Builder*) clear {
  self.result = [[[MBSKeySet alloc] init] autorelease];
  return self;
}
- (MBSKeySet_Builder*) clone {
  return [MBSKeySet builderWithPrototype:result];
}
- (MBSKeySet*) defaultInstance {
  return [MBSKeySet defaultInstance];
}
- (MBSKeySet*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSKeySet*) buildPartial {
  MBSKeySet* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSKeySet_Builder*) mergeFrom:(MBSKeySet*) other {
  if (other == [MBSKeySet defaultInstance]) {
    return self;
  }
  if (other.mutableKeyList.count > 0) {
    if (result.mutableKeyList == nil) {
      result.mutableKeyList = [NSMutableArray array];
    }
    [result.mutableKeyList addObjectsFromArray:other.mutableKeyList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSKeySet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSKeySet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MBSKey_Builder* subBuilder = [MBSKey builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKey:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) keyList {
  if (result.mutableKeyList == nil) { return [NSArray array]; }
  return result.mutableKeyList;
}
- (MBSKey*) keyAtIndex:(int32_t) index {
  return [result keyAtIndex:index];
}
- (MBSKeySet_Builder*) replaceKeyAtIndex:(int32_t) index with:(MBSKey*) value {
  [result.mutableKeyList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MBSKeySet_Builder*) addAllKey:(NSArray*) values {
  if (result.mutableKeyList == nil) {
    result.mutableKeyList = [NSMutableArray array];
  }
  [result.mutableKeyList addObjectsFromArray:values];
  return self;
}
- (MBSKeySet_Builder*) clearKeyList {
  result.mutableKeyList = nil;
  return self;
}
- (MBSKeySet_Builder*) addKey:(MBSKey*) value {
  if (result.mutableKeyList == nil) {
    result.mutableKeyList = [NSMutableArray array];
  }
  [result.mutableKeyList addObject:value];
  return self;
}
@end

@interface MBSFileExtendedAttribute ()
@property (retain) NSString* name;
@property (retain) NSData* value;
@end

@implementation MBSFileExtendedAttribute

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (void) dealloc {
  self.name = nil;
  self.value = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.value = [NSData data];
  }
  return self;
}
static MBSFileExtendedAttribute* defaultMBSFileExtendedAttributeInstance = nil;
+ (void) initialize {
  if (self == [MBSFileExtendedAttribute class]) {
    defaultMBSFileExtendedAttributeInstance = [[MBSFileExtendedAttribute alloc] init];
  }
}
+ (MBSFileExtendedAttribute*) defaultInstance {
  return defaultMBSFileExtendedAttributeInstance;
}
- (MBSFileExtendedAttribute*) defaultInstance {
  return defaultMBSFileExtendedAttributeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasValue) {
    [output writeData:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasValue) {
    size += computeDataSize(2, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MBSFileExtendedAttribute*) parseFromData:(NSData*) data {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromData:data] build];
}
+ (MBSFileExtendedAttribute*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MBSFileExtendedAttribute*) parseFromInputStream:(NSInputStream*) input {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromInputStream:input] build];
}
+ (MBSFileExtendedAttribute*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeDelimitedFromInputStream:input] build];
}
+ (MBSFileExtendedAttribute*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileExtendedAttribute*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromCodedInputStream:input] build];
}
+ (MBSFileExtendedAttribute*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MBSFileExtendedAttribute*)[[[MBSFileExtendedAttribute builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MBSFileExtendedAttribute_Builder*) builder {
  return [[[MBSFileExtendedAttribute_Builder alloc] init] autorelease];
}
+ (MBSFileExtendedAttribute_Builder*) builderWithPrototype:(MBSFileExtendedAttribute*) prototype {
  return [[MBSFileExtendedAttribute builder] mergeFrom:prototype];
}
- (MBSFileExtendedAttribute_Builder*) builder {
  return [MBSFileExtendedAttribute builder];
}
@end

@interface MBSFileExtendedAttribute_Builder()
@property (retain) MBSFileExtendedAttribute* result;
@end

@implementation MBSFileExtendedAttribute_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MBSFileExtendedAttribute alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MBSFileExtendedAttribute_Builder*) clear {
  self.result = [[[MBSFileExtendedAttribute alloc] init] autorelease];
  return self;
}
- (MBSFileExtendedAttribute_Builder*) clone {
  return [MBSFileExtendedAttribute builderWithPrototype:result];
}
- (MBSFileExtendedAttribute*) defaultInstance {
  return [MBSFileExtendedAttribute defaultInstance];
}
- (MBSFileExtendedAttribute*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MBSFileExtendedAttribute*) buildPartial {
  MBSFileExtendedAttribute* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MBSFileExtendedAttribute_Builder*) mergeFrom:(MBSFileExtendedAttribute*) other {
  if (other == [MBSFileExtendedAttribute defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MBSFileExtendedAttribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MBSFileExtendedAttribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MBSFileExtendedAttribute_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MBSFileExtendedAttribute_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSData*) value {
  return result.value;
}
- (MBSFileExtendedAttribute_Builder*) setValue:(NSData*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (MBSFileExtendedAttribute_Builder*) clearValue {
  result.hasValue = NO;
  result.value = [NSData data];
  return self;
}
@end

